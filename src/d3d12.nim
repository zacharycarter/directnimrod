#direct3D wrapper by Charlie Barto
# this file is generated from the version of d3d12.h shipped with windows 10
{.link: "dxguid.lib".}
{.link: "d3d12.lib".}
import winim, dxgi, d3dcommon, macros, Unknwn
export d3dcommon
type UINT = uint32
type INT = int32
type FLOAT = float32
type BYTE = TBYTE
type BOOL = WINBOOL
type UINT8 = uint8
type UINT64 = uint64
type UINT16 = uint16
# Forward Declarations
#procs to make some cisms work
proc `or`(a,b:enum): auto = ord(a) or ord(b)
proc `or`(a: enum, b: int): auto = ord(a) or b
proc `or`(a: int, b: enum): auto = a or ord(b)
proc `+`(a: enum, b: int): auto = ord(a) + b

# interface __MIDL_itf_d3d12_0000_0000
# [local]
const
  D3D12_16BIT_INDEX_STRIP_CUT_VALUE* = (0x0000FFFF)
  D3D12_32BIT_INDEX_STRIP_CUT_VALUE* = (0xFFFFFFFF)
  D3D12_8BIT_INDEX_STRIP_CUT_VALUE* = (0x000000FF)
  D3D12_APPEND_ALIGNED_ELEMENT* = (0xFFFFFFFF)
  D3D12_ARRAY_AXIS_ADDRESS_RANGE_BIT_COUNT* = (9)
  D3D12_CLIP_OR_CULL_DISTANCE_COUNT* = (8)
  D3D12_CLIP_OR_CULL_DISTANCE_ELEMENT_COUNT* = (2)
  D3D12_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT* = (14)
  D3D12_COMMONSHADER_CONSTANT_BUFFER_COMPONENTS* = (4)
  D3D12_COMMONSHADER_CONSTANT_BUFFER_COMPONENT_BIT_COUNT* = (32)
  D3D12_COMMONSHADER_CONSTANT_BUFFER_HW_SLOT_COUNT* = (15)
  D3D12_COMMONSHADER_CONSTANT_BUFFER_PARTIAL_UPDATE_EXTENTS_BYTE_ALIGNMENT* = (
    16)
  D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COMPONENTS* = (4)
  D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COUNT* = (15)
  D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READS_PER_INST* = (1)
  D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READ_PORTS* = (1)
  D3D12_COMMONSHADER_FLOWCONTROL_NESTING_LIMIT* = (64)
  D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COMPONENTS* = (4)
  D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COUNT* = (1)
  D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READS_PER_INST* = (1)
  D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READ_PORTS* = (1)
  D3D12_COMMONSHADER_IMMEDIATE_VALUE_COMPONENT_BIT_COUNT* = (32)
  D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_COMPONENTS* = (1)
  D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_COUNT* = (128)
  D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_READS_PER_INST* = (1)
  D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_READ_PORTS* = (1)
  D3D12_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT* = (128)
  D3D12_COMMONSHADER_SAMPLER_REGISTER_COMPONENTS* = (1)
  D3D12_COMMONSHADER_SAMPLER_REGISTER_COUNT* = (16)
  D3D12_COMMONSHADER_SAMPLER_REGISTER_READS_PER_INST* = (1)
  D3D12_COMMONSHADER_SAMPLER_REGISTER_READ_PORTS* = (1)
  D3D12_COMMONSHADER_SAMPLER_SLOT_COUNT* = (16)
  D3D12_COMMONSHADER_SUBROUTINE_NESTING_LIMIT* = (32)
  D3D12_COMMONSHADER_TEMP_REGISTER_COMPONENTS* = (4)
  D3D12_COMMONSHADER_TEMP_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_COMMONSHADER_TEMP_REGISTER_COUNT* = (4096)
  D3D12_COMMONSHADER_TEMP_REGISTER_READS_PER_INST* = (3)
  D3D12_COMMONSHADER_TEMP_REGISTER_READ_PORTS* = (3)
  D3D12_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MAX* = (10)
  D3D12_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MIN* = (- 10)
  D3D12_COMMONSHADER_TEXEL_OFFSET_MAX_NEGATIVE* = (- 8)
  D3D12_COMMONSHADER_TEXEL_OFFSET_MAX_POSITIVE* = (7)
  D3D12_CONSTANT_BUFFER_DATA_PLACEMENT_ALIGNMENT* = (256)
  D3D12_CS_4_X_BUCKET00_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = (256)
  D3D12_CS_4_X_BUCKET00_MAX_NUM_THREADS_PER_GROUP* = (64)
  D3D12_CS_4_X_BUCKET01_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = (240)
  D3D12_CS_4_X_BUCKET01_MAX_NUM_THREADS_PER_GROUP* = (68)
  D3D12_CS_4_X_BUCKET02_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = (224)
  D3D12_CS_4_X_BUCKET02_MAX_NUM_THREADS_PER_GROUP* = (72)
  D3D12_CS_4_X_BUCKET03_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = (208)
  D3D12_CS_4_X_BUCKET03_MAX_NUM_THREADS_PER_GROUP* = (76)
  D3D12_CS_4_X_BUCKET04_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = (192)
  D3D12_CS_4_X_BUCKET04_MAX_NUM_THREADS_PER_GROUP* = (84)
  D3D12_CS_4_X_BUCKET05_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = (176)
  D3D12_CS_4_X_BUCKET05_MAX_NUM_THREADS_PER_GROUP* = (92)
  D3D12_CS_4_X_BUCKET06_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = (160)
  D3D12_CS_4_X_BUCKET06_MAX_NUM_THREADS_PER_GROUP* = (100)
  D3D12_CS_4_X_BUCKET07_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = (144)
  D3D12_CS_4_X_BUCKET07_MAX_NUM_THREADS_PER_GROUP* = (112)
  D3D12_CS_4_X_BUCKET08_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = (128)
  D3D12_CS_4_X_BUCKET08_MAX_NUM_THREADS_PER_GROUP* = (128)
  D3D12_CS_4_X_BUCKET09_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = (112)
  D3D12_CS_4_X_BUCKET09_MAX_NUM_THREADS_PER_GROUP* = (144)
  D3D12_CS_4_X_BUCKET10_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = (96)
  D3D12_CS_4_X_BUCKET10_MAX_NUM_THREADS_PER_GROUP* = (168)
  D3D12_CS_4_X_BUCKET11_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = (80)
  D3D12_CS_4_X_BUCKET11_MAX_NUM_THREADS_PER_GROUP* = (204)
  D3D12_CS_4_X_BUCKET12_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = (64)
  D3D12_CS_4_X_BUCKET12_MAX_NUM_THREADS_PER_GROUP* = (256)
  D3D12_CS_4_X_BUCKET13_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = (48)
  D3D12_CS_4_X_BUCKET13_MAX_NUM_THREADS_PER_GROUP* = (340)
  D3D12_CS_4_X_BUCKET14_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = (32)
  D3D12_CS_4_X_BUCKET14_MAX_NUM_THREADS_PER_GROUP* = (512)
  D3D12_CS_4_X_BUCKET15_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = (16)
  D3D12_CS_4_X_BUCKET15_MAX_NUM_THREADS_PER_GROUP* = (768)
  D3D12_CS_4_X_DISPATCH_MAX_THREAD_GROUPS_IN_Z_DIMENSION* = (1)
  D3D12_CS_4_X_RAW_UAV_BYTE_ALIGNMENT* = (256)
  D3D12_CS_4_X_THREAD_GROUP_MAX_THREADS_PER_GROUP* = (768)
  D3D12_CS_4_X_THREAD_GROUP_MAX_X* = (768)
  D3D12_CS_4_X_THREAD_GROUP_MAX_Y* = (768)
  D3D12_CS_4_X_UAV_REGISTER_COUNT* = (1)
  D3D12_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION* = (65535)
  D3D12_CS_TGSM_REGISTER_COUNT* = (8192)
  D3D12_CS_TGSM_REGISTER_READS_PER_INST* = (1)
  D3D12_CS_TGSM_RESOURCE_REGISTER_COMPONENTS* = (1)
  D3D12_CS_TGSM_RESOURCE_REGISTER_READ_PORTS* = (1)
  D3D12_CS_THREADGROUPID_REGISTER_COMPONENTS* = (3)
  D3D12_CS_THREADGROUPID_REGISTER_COUNT* = (1)
  D3D12_CS_THREADIDINGROUPFLATTENED_REGISTER_COMPONENTS* = (1)
  D3D12_CS_THREADIDINGROUPFLATTENED_REGISTER_COUNT* = (1)
  D3D12_CS_THREADIDINGROUP_REGISTER_COMPONENTS* = (3)
  D3D12_CS_THREADIDINGROUP_REGISTER_COUNT* = (1)
  D3D12_CS_THREADID_REGISTER_COMPONENTS* = (3)
  D3D12_CS_THREADID_REGISTER_COUNT* = (1)
  D3D12_CS_THREAD_GROUP_MAX_THREADS_PER_GROUP* = (1024)
  D3D12_CS_THREAD_GROUP_MAX_X* = (1024)
  D3D12_CS_THREAD_GROUP_MAX_Y* = (1024)
  D3D12_CS_THREAD_GROUP_MAX_Z* = (64)
  D3D12_CS_THREAD_GROUP_MIN_X* = (1)
  D3D12_CS_THREAD_GROUP_MIN_Y* = (1)
  D3D12_CS_THREAD_GROUP_MIN_Z* = (1)
  D3D12_CS_THREAD_LOCAL_TEMP_REGISTER_POOL* = (16384)
  D3D12_DEFAULT_BLEND_FACTOR_ALPHA* = (1.0)
  D3D12_DEFAULT_BLEND_FACTOR_BLUE* = (1.0)
  D3D12_DEFAULT_BLEND_FACTOR_GREEN* = (1.0)
  D3D12_DEFAULT_BLEND_FACTOR_RED* = (1.0)
  D3D12_DEFAULT_BORDER_COLOR_COMPONENT* = (0.0)
  D3D12_DEFAULT_DEPTH_BIAS* = (0)
  D3D12_DEFAULT_DEPTH_BIAS_CLAMP* = (0.0)
  D3D12_DEFAULT_MAX_ANISOTROPY* = (16)
  D3D12_DEFAULT_MIP_LOD_BIAS* = (0.0)
  D3D12_DEFAULT_MSAA_RESOURCE_PLACEMENT_ALIGNMENT* = (4194304)
  D3D12_DEFAULT_RENDER_TARGET_ARRAY_INDEX* = (0)
  D3D12_DEFAULT_RESOURCE_PLACEMENT_ALIGNMENT* = (65536)
  D3D12_DEFAULT_SAMPLE_MASK* = (0xFFFFFFFF)
  D3D12_DEFAULT_SCISSOR_ENDX* = (0)
  D3D12_DEFAULT_SCISSOR_ENDY* = (0)
  D3D12_DEFAULT_SCISSOR_STARTX* = (0)
  D3D12_DEFAULT_SCISSOR_STARTY* = (0)
  D3D12_DEFAULT_SLOPE_SCALED_DEPTH_BIAS* = (0.0)
  D3D12_DEFAULT_STENCIL_READ_MASK* = (0x000000FF)
  D3D12_DEFAULT_STENCIL_REFERENCE* = (0)
  D3D12_DEFAULT_STENCIL_WRITE_MASK* = (0x000000FF)
  D3D12_DEFAULT_VIEWPORT_AND_SCISSORRECT_INDEX* = (0)
  D3D12_DEFAULT_VIEWPORT_HEIGHT* = (0)
  D3D12_DEFAULT_VIEWPORT_MAX_DEPTH* = (0.0)
  D3D12_DEFAULT_VIEWPORT_MIN_DEPTH* = (0.0)
  D3D12_DEFAULT_VIEWPORT_TOPLEFTX* = (0)
  D3D12_DEFAULT_VIEWPORT_TOPLEFTY* = (0)
  D3D12_DEFAULT_VIEWPORT_WIDTH* = (0)
  D3D12_DESCRIPTOR_RANGE_OFFSET_APPEND* = (0xFFFFFFFF)
  D3D12_DRIVER_RESERVED_REGISTER_SPACE_VALUES_END* = (0xFFFFFFF7)
  D3D12_DRIVER_RESERVED_REGISTER_SPACE_VALUES_START* = (0xFFFFFFF0)
  D3D12_DS_INPUT_CONTROL_POINTS_MAX_TOTAL_SCALARS* = (3968)
  D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENTS* = (4)
  D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COUNT* = (32)
  D3D12_DS_INPUT_CONTROL_POINT_REGISTER_READS_PER_INST* = (2)
  D3D12_DS_INPUT_CONTROL_POINT_REGISTER_READ_PORTS* = (1)
  D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COMPONENTS* = (3)
  D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COUNT* = (1)
  D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_READS_PER_INST* = (2)
  D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_READ_PORTS* = (1)
  D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COMPONENTS* = (4)
  D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COUNT* = (32)
  D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST* = (2)
  D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_READ_PORTS* = (1)
  D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENTS* = (1)
  D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COUNT* = (1)
  D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST* = (2)
  D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS* = (1)
  D3D12_DS_OUTPUT_REGISTER_COMPONENTS* = (4)
  D3D12_DS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_DS_OUTPUT_REGISTER_COUNT* = (32)
  D3D12_FLOAT16_FUSED_TOLERANCE_IN_ULP* = (0.6)
  D3D12_FLOAT32_MAX* = (3.402823466e+38)
  D3D12_FLOAT32_TO_INTEGER_TOLERANCE_IN_ULP* = (0.6)
  D3D12_FLOAT_TO_SRGB_EXPONENT_DENOMINATOR* = (2.4)
  D3D12_FLOAT_TO_SRGB_EXPONENT_NUMERATOR* = (1.0)
  D3D12_FLOAT_TO_SRGB_OFFSET* = (0.055)
  D3D12_FLOAT_TO_SRGB_SCALE_1* = (12.92)
  D3D12_FLOAT_TO_SRGB_SCALE_2* = (1.055)
  D3D12_FLOAT_TO_SRGB_THRESHOLD* = (0.0031308)
  D3D12_FTOI_INSTRUCTION_MAX_INPUT* = (2147483647.999)
  D3D12_FTOI_INSTRUCTION_MIN_INPUT* = (- 2147483648.999)
  D3D12_FTOU_INSTRUCTION_MAX_INPUT* = (4294967295.999)
  D3D12_FTOU_INSTRUCTION_MIN_INPUT* = (0.0)
  D3D12_GS_INPUT_INSTANCE_ID_READS_PER_INST* = (2)
  D3D12_GS_INPUT_INSTANCE_ID_READ_PORTS* = (1)
  D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENTS* = (1)
  D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COUNT* = (1)
  D3D12_GS_INPUT_PRIM_CONST_REGISTER_COMPONENTS* = (1)
  D3D12_GS_INPUT_PRIM_CONST_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_GS_INPUT_PRIM_CONST_REGISTER_COUNT* = (1)
  D3D12_GS_INPUT_PRIM_CONST_REGISTER_READS_PER_INST* = (2)
  D3D12_GS_INPUT_PRIM_CONST_REGISTER_READ_PORTS* = (1)
  D3D12_GS_INPUT_REGISTER_COMPONENTS* = (4)
  D3D12_GS_INPUT_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_GS_INPUT_REGISTER_COUNT* = (32)
  D3D12_GS_INPUT_REGISTER_READS_PER_INST* = (2)
  D3D12_GS_INPUT_REGISTER_READ_PORTS* = (1)
  D3D12_GS_INPUT_REGISTER_VERTICES* = (32)
  D3D12_GS_MAX_INSTANCE_COUNT* = (32)
  D3D12_GS_MAX_OUTPUT_VERTEX_COUNT_ACROSS_INSTANCES* = (1024)
  D3D12_GS_OUTPUT_ELEMENTS* = (32)
  D3D12_GS_OUTPUT_REGISTER_COMPONENTS* = (4)
  D3D12_GS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_GS_OUTPUT_REGISTER_COUNT* = (32)
  D3D12_HS_CONTROL_POINT_PHASE_INPUT_REGISTER_COUNT* = (32)
  D3D12_HS_CONTROL_POINT_PHASE_OUTPUT_REGISTER_COUNT* = (32)
  D3D12_HS_CONTROL_POINT_REGISTER_COMPONENTS* = (4)
  D3D12_HS_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_HS_CONTROL_POINT_REGISTER_READS_PER_INST* = (2)
  D3D12_HS_CONTROL_POINT_REGISTER_READ_PORTS* = (1)
  D3D12_HS_FORK_PHASE_INSTANCE_COUNT_UPPER_BOUND* = (0xFFFFFFFF)
  D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENTS* = (1)
  D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COUNT* = (1)
  D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READS_PER_INST* = (2)
  D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READ_PORTS* = (1)
  D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COMPONENTS* = (1)
  D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COUNT* = (1)
  D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READS_PER_INST* = (2)
  D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READ_PORTS* = (1)
  D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENTS* = (1)
  D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COUNT* = (1)
  D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST* = (2)
  D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS* = (1)
  D3D12_HS_JOIN_PHASE_INSTANCE_COUNT_UPPER_BOUND* = (0xFFFFFFFF)
  D3D12_HS_MAXTESSFACTOR_LOWER_BOUND* = (1.0)
  D3D12_HS_MAXTESSFACTOR_UPPER_BOUND* = (64.0)
  D3D12_HS_OUTPUT_CONTROL_POINTS_MAX_TOTAL_SCALARS* = (3968)
  D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENTS* = (1)
  D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COUNT* = (1)
  D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READS_PER_INST* = (2)
  D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READ_PORTS* = (1)
  D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COMPONENTS* = (4)
  D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COUNT* = (32)
  D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST* = (2)
  D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READ_PORTS* = (1)
  D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_SCALAR_COMPONENTS* = (128)
  D3D12_IA_DEFAULT_INDEX_BUFFER_OFFSET_IN_BYTES* = (0)
  D3D12_IA_DEFAULT_PRIMITIVE_TOPOLOGY* = (0)
  D3D12_IA_DEFAULT_VERTEX_BUFFER_OFFSET_IN_BYTES* = (0)
  D3D12_IA_INDEX_INPUT_RESOURCE_SLOT_COUNT* = (1)
  D3D12_IA_INSTANCE_ID_BIT_COUNT* = (32)
  D3D12_IA_INTEGER_ARITHMETIC_BIT_COUNT* = (32)
  D3D12_IA_PATCH_MAX_CONTROL_POINT_COUNT* = (32)
  D3D12_IA_PRIMITIVE_ID_BIT_COUNT* = (32)
  D3D12_IA_VERTEX_ID_BIT_COUNT* = (32)
  D3D12_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT* = (32)
  D3D12_IA_VERTEX_INPUT_STRUCTURE_ELEMENTS_COMPONENTS* = (128)
  D3D12_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT* = (32)
  D3D12_INTEGER_DIVIDE_BY_ZERO_QUOTIENT* = (0xFFFFFFFF)
  D3D12_INTEGER_DIVIDE_BY_ZERO_REMAINDER* = (0xFFFFFFFF)
  D3D12_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL* = (0xFFFFFFFF)
  D3D12_KEEP_UNORDERED_ACCESS_VIEWS* = (0xFFFFFFFF)
  D3D12_LINEAR_GAMMA* = (1.0)
  D3D12_MAJOR_VERSION* = (12)
  D3D12_MAX_BORDER_COLOR_COMPONENT* = (1.0)
  D3D12_MAX_DEPTH* = (1.0)
  D3D12_MAX_LIVE_STATIC_SAMPLERS* = (2032)
  D3D12_MAX_MAXANISOTROPY* = (16)
  D3D12_MAX_MULTISAMPLE_SAMPLE_COUNT* = (32)
  D3D12_MAX_POSITION_VALUE* = (3.402823466e+34)
  D3D12_MAX_ROOT_COST* = (64)
  D3D12_MAX_SHADER_VISIBLE_DESCRIPTOR_HEAP_SIZE_TIER_1* = (1000000)
  D3D12_MAX_SHADER_VISIBLE_DESCRIPTOR_HEAP_SIZE_TIER_2* = (1000000)
  D3D12_MAX_SHADER_VISIBLE_SAMPLER_HEAP_SIZE* = (2048)
  D3D12_MAX_TEXTURE_DIMENSION_2_TO_EXP* = (17)
  D3D12_MINOR_VERSION* = (0)
  D3D12_MIN_BORDER_COLOR_COMPONENT* = (0.0)
  D3D12_MIN_DEPTH* = (0.0)
  D3D12_MIN_MAXANISOTROPY* = (0)
  D3D12_MIP_LOD_BIAS_MAX* = (15.99)
  D3D12_MIP_LOD_BIAS_MIN* = (- 16.0)
  D3D12_MIP_LOD_FRACTIONAL_BIT_COUNT* = (8)
  D3D12_MIP_LOD_RANGE_BIT_COUNT* = (8)
  D3D12_MULTISAMPLE_ANTIALIAS_LINE_WIDTH* = (1.4)
  D3D12_NONSAMPLE_FETCH_OUT_OF_RANGE_ACCESS_RESULT* = (0)
  D3D12_OS_RESERVED_REGISTER_SPACE_VALUES_END* = (0xFFFFFFFF)
  D3D12_OS_RESERVED_REGISTER_SPACE_VALUES_START* = (0xFFFFFFF8)
  D3D12_PACKED_TILE* = (0xFFFFFFFF)
  D3D12_PIXEL_ADDRESS_RANGE_BIT_COUNT* = (15)
  D3D12_PRE_SCISSOR_PIXEL_ADDRESS_RANGE_BIT_COUNT* = (16)
  D3D12_PS_CS_UAV_REGISTER_COMPONENTS* = (1)
  D3D12_PS_CS_UAV_REGISTER_COUNT* = (8)
  D3D12_PS_CS_UAV_REGISTER_READS_PER_INST* = (1)
  D3D12_PS_CS_UAV_REGISTER_READ_PORTS* = (1)
  D3D12_PS_FRONTFACING_DEFAULT_VALUE* = (0xFFFFFFFF)
  D3D12_PS_FRONTFACING_FALSE_VALUE* = (0)
  D3D12_PS_FRONTFACING_TRUE_VALUE* = (0xFFFFFFFF)
  D3D12_PS_INPUT_REGISTER_COMPONENTS* = (4)
  D3D12_PS_INPUT_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_PS_INPUT_REGISTER_COUNT* = (32)
  D3D12_PS_INPUT_REGISTER_READS_PER_INST* = (2)
  D3D12_PS_INPUT_REGISTER_READ_PORTS* = (1)
  D3D12_PS_LEGACY_PIXEL_CENTER_FRACTIONAL_COMPONENT* = (0.0)
  D3D12_PS_OUTPUT_DEPTH_REGISTER_COMPONENTS* = (1)
  D3D12_PS_OUTPUT_DEPTH_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_PS_OUTPUT_DEPTH_REGISTER_COUNT* = (1)
  D3D12_PS_OUTPUT_MASK_REGISTER_COMPONENTS* = (1)
  D3D12_PS_OUTPUT_MASK_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_PS_OUTPUT_MASK_REGISTER_COUNT* = (1)
  D3D12_PS_OUTPUT_REGISTER_COMPONENTS* = (4)
  D3D12_PS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_PS_OUTPUT_REGISTER_COUNT* = (8)
  D3D12_PS_PIXEL_CENTER_FRACTIONAL_COMPONENT* = (0.5)
  D3D12_RAW_UAV_SRV_BYTE_ALIGNMENT* = (16)
  D3D12_REQ_BLEND_OBJECT_COUNT_PER_DEVICE* = (4096)
  D3D12_REQ_BUFFER_RESOURCE_TEXEL_COUNT_2_TO_EXP* = (27)
  D3D12_REQ_CONSTANT_BUFFER_ELEMENT_COUNT* = (4096)
  D3D12_REQ_DEPTH_STENCIL_OBJECT_COUNT_PER_DEVICE* = (4096)
  D3D12_REQ_DRAWINDEXED_INDEX_COUNT_2_TO_EXP* = (32)
  D3D12_REQ_DRAW_VERTEX_COUNT_2_TO_EXP* = (32)
  D3D12_REQ_FILTERING_HW_ADDRESSABLE_RESOURCE_DIMENSION* = (16384)
  D3D12_REQ_GS_INVOCATION_32BIT_OUTPUT_COMPONENT_LIMIT* = (1024)
  D3D12_REQ_IMMEDIATE_CONSTANT_BUFFER_ELEMENT_COUNT* = (4096)
  D3D12_REQ_MAXANISOTROPY* = (16)
  D3D12_REQ_MIP_LEVELS* = (15)
  D3D12_REQ_MULTI_ELEMENT_STRUCTURE_SIZE_IN_BYTES* = (2048)
  D3D12_REQ_RASTERIZER_OBJECT_COUNT_PER_DEVICE* = (4096)
  D3D12_REQ_RENDER_TO_BUFFER_WINDOW_WIDTH* = (16384)
  D3D12_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_A_TERM* = (128)
  D3D12_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_B_TERM* = (0.25)
  D3D12_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_C_TERM* = (2048)
  D3D12_REQ_RESOURCE_VIEW_COUNT_PER_DEVICE_2_TO_EXP* = (20)
  D3D12_REQ_SAMPLER_OBJECT_COUNT_PER_DEVICE* = (4096)
  D3D12_REQ_SUBRESOURCES* = (30720)
  D3D12_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION* = (2048)
  D3D12_REQ_TEXTURE1D_U_DIMENSION* = (16384)
  D3D12_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION* = (2048)
  D3D12_REQ_TEXTURE2D_U_OR_V_DIMENSION* = (16384)
  D3D12_REQ_TEXTURE3D_U_V_OR_W_DIMENSION* = (2048)
  D3D12_REQ_TEXTURECUBE_DIMENSION* = (16384)
  D3D12_RESINFO_INSTRUCTION_MISSING_COMPONENT_RETVAL* = (0)
  D3D12_RESOURCE_BARRIER_ALL_SUBRESOURCES* = (0xFFFFFFFF)
  D3D12_SHADER_MAJOR_VERSION* = (5)
  D3D12_SHADER_MAX_INSTANCES* = (65535)
  D3D12_SHADER_MAX_INTERFACES* = (253)
  D3D12_SHADER_MAX_INTERFACE_CALL_SITES* = (4096)
  D3D12_SHADER_MAX_TYPES* = (65535)
  D3D12_SHADER_MINOR_VERSION* = (1)
  D3D12_SHIFT_INSTRUCTION_PAD_VALUE* = (0)
  D3D12_SHIFT_INSTRUCTION_SHIFT_VALUE_BIT_COUNT* = (5)
  D3D12_SIMULTANEOUS_RENDER_TARGET_COUNT* = (8)
  D3D12_SMALL_MSAA_RESOURCE_PLACEMENT_ALIGNMENT* = (65536)
  D3D12_SMALL_RESOURCE_PLACEMENT_ALIGNMENT* = (4096)
  D3D12_SO_BUFFER_MAX_STRIDE_IN_BYTES* = (2048)
  D3D12_SO_BUFFER_MAX_WRITE_WINDOW_IN_BYTES* = (512)
  D3D12_SO_BUFFER_SLOT_COUNT* = (4)
  D3D12_SO_DDI_REGISTER_INDEX_DENOTING_GAP* = (0xFFFFFFFF)
  D3D12_SO_NO_RASTERIZED_STREAM* = (0xFFFFFFFF)
  D3D12_SO_OUTPUT_COMPONENT_COUNT* = (128)
  D3D12_SO_STREAM_COUNT* = (4)
  D3D12_SPEC_DATE_DAY* = (14)
  D3D12_SPEC_DATE_MONTH* = (11)
  D3D12_SPEC_DATE_YEAR* = (2014)
  D3D12_SPEC_VERSION* = (1.16)
  D3D12_SRGB_GAMMA* = (2.2)
  D3D12_SRGB_TO_FLOAT_DENOMINATOR_1* = (12.92)
  D3D12_SRGB_TO_FLOAT_DENOMINATOR_2* = (1.055)
  D3D12_SRGB_TO_FLOAT_EXPONENT* = (2.4)
  D3D12_SRGB_TO_FLOAT_OFFSET* = (0.055)
  D3D12_SRGB_TO_FLOAT_THRESHOLD* = (0.04045)
  D3D12_SRGB_TO_FLOAT_TOLERANCE_IN_ULP* = (0.5)
  D3D12_STANDARD_COMPONENT_BIT_COUNT* = (32)
  D3D12_STANDARD_COMPONENT_BIT_COUNT_DOUBLED* = (64)
  D3D12_STANDARD_MAXIMUM_ELEMENT_ALIGNMENT_BYTE_MULTIPLE* = (4)
  D3D12_STANDARD_PIXEL_COMPONENT_COUNT* = (128)
  D3D12_STANDARD_PIXEL_ELEMENT_COUNT* = (32)
  D3D12_STANDARD_VECTOR_SIZE* = (4)
  D3D12_STANDARD_VERTEX_ELEMENT_COUNT* = (32)
  D3D12_STANDARD_VERTEX_TOTAL_COMPONENT_COUNT* = (64)
  D3D12_SUBPIXEL_FRACTIONAL_BIT_COUNT* = (8)
  D3D12_SUBTEXEL_FRACTIONAL_BIT_COUNT* = (8)
  D3D12_SYSTEM_RESERVED_REGISTER_SPACE_VALUES_END* = (0xFFFFFFFF)
  D3D12_SYSTEM_RESERVED_REGISTER_SPACE_VALUES_START* = (0xFFFFFFF0)
  D3D12_TESSELLATOR_MAX_EVEN_TESSELLATION_FACTOR* = (64)
  D3D12_TESSELLATOR_MAX_ISOLINE_DENSITY_TESSELLATION_FACTOR* = (64)
  D3D12_TESSELLATOR_MAX_ODD_TESSELLATION_FACTOR* = (63)
  D3D12_TESSELLATOR_MAX_TESSELLATION_FACTOR* = (64)
  D3D12_TESSELLATOR_MIN_EVEN_TESSELLATION_FACTOR* = (2)
  D3D12_TESSELLATOR_MIN_ISOLINE_DENSITY_TESSELLATION_FACTOR* = (1)
  D3D12_TESSELLATOR_MIN_ODD_TESSELLATION_FACTOR* = (1)
  D3D12_TEXEL_ADDRESS_RANGE_BIT_COUNT* = (16)
  D3D12_TEXTURE_DATA_PITCH_ALIGNMENT* = (256)
  D3D12_TEXTURE_DATA_PLACEMENT_ALIGNMENT* = (512)
  D3D12_TILED_RESOURCE_TILE_SIZE_IN_BYTES* = (65536)
  D3D12_UAV_COUNTER_PLACEMENT_ALIGNMENT* = (4096)
  D3D12_UAV_SLOT_COUNT* = (64)
  D3D12_UNBOUND_MEMORY_ACCESS_RESULT* = (0)
  D3D12_VIEWPORT_AND_SCISSORRECT_MAX_INDEX* = (15)
  D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE* = (16)
  D3D12_VIEWPORT_BOUNDS_MAX* = (32767)
  D3D12_VIEWPORT_BOUNDS_MIN* = (- 32768)
  D3D12_VS_INPUT_REGISTER_COMPONENTS* = (4)
  D3D12_VS_INPUT_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_VS_INPUT_REGISTER_COUNT* = (32)
  D3D12_VS_INPUT_REGISTER_READS_PER_INST* = (2)
  D3D12_VS_INPUT_REGISTER_READ_PORTS* = (1)
  D3D12_VS_OUTPUT_REGISTER_COMPONENTS* = (4)
  D3D12_VS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT* = (32)
  D3D12_VS_OUTPUT_REGISTER_COUNT* = (32)
  D3D12_WHQL_CONTEXT_COUNT_FOR_RESOURCE_LIMIT* = (10)
  D3D12_WHQL_DRAWINDEXED_INDEX_COUNT_2_TO_EXP* = (25)
  D3D12_WHQL_DRAW_VERTEX_COUNT_2_TO_EXP* = (25)
type
  D3D12_GPU_VIRTUAL_ADDRESS* = UINT64
  D3D12_COMMAND_LIST_TYPE* {.size: sizeof(cint).} = enum
    D3D12_COMMAND_LIST_TYPE_DIRECT = 0, D3D12_COMMAND_LIST_TYPE_BUNDLE = 1,
    D3D12_COMMAND_LIST_TYPE_COMPUTE = 2, D3D12_COMMAND_LIST_TYPE_COPY = 3
  D3D12_COMMAND_QUEUE_FLAGS* {.size: sizeof(cint).} = enum
    D3D12_COMMAND_QUEUE_FLAG_NONE = 0,
    D3D12_COMMAND_QUEUE_FLAG_DISABLE_GPU_TIMEOUT = 0x00000001




type
  D3D12_COMMAND_QUEUE_PRIORITY* {.size: sizeof(cint).} = enum
    D3D12_COMMAND_QUEUE_PRIORITY_NORMAL = 0,
    D3D12_COMMAND_QUEUE_PRIORITY_HIGH = 100
  D3D12_COMMAND_QUEUE_DESC* = object
    Type*: D3D12_COMMAND_LIST_TYPE
    Priority*: INT
    Flags*: D3D12_COMMAND_QUEUE_FLAGS
    NodeMask*: UINT

  D3D12_PRIMITIVE_TOPOLOGY_TYPE* {.size: sizeof(cint).} = enum
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_UNDEFINED = 0,
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_POINT = 1,
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_LINE = 2,
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE = 3,
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_PATCH = 4
  D3D12_INPUT_CLASSIFICATION* {.size: sizeof(cint).} = enum
    D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA = 0,
    D3D12_INPUT_CLASSIFICATION_PER_INSTANCE_DATA = 1
  D3D12_INPUT_ELEMENT_DESC* = object
    SemanticName*: LPCSTR
    SemanticIndex*: UINT
    Format*: DXGI_FORMAT
    InputSlot*: UINT
    AlignedByteOffset*: UINT
    InputSlotClass*: D3D12_INPUT_CLASSIFICATION
    InstanceDataStepRate*: UINT

  D3D12_FILL_MODE* {.size: sizeof(cint).} = enum
    D3D12_FILL_MODE_WIREFRAME = 2, D3D12_FILL_MODE_SOLID = 3
  D3D12_PRIMITIVE_TOPOLOGY* = D3D_PRIMITIVE_TOPOLOGY
  D3D12_PRIMITIVE* = D3D_PRIMITIVE
  D3D12_CULL_MODE* {.size: sizeof(cint).} = enum
    D3D12_CULL_MODE_NONE = 1, D3D12_CULL_MODE_FRONT = 2,
    D3D12_CULL_MODE_BACK = 3
  D3D12_SO_DECLARATION_ENTRY* = object
    Stream*: UINT
    SemanticName*: LPCSTR
    SemanticIndex*: UINT
    StartComponent*: BYTE
    ComponentCount*: BYTE
    OutputSlot*: BYTE

  D3D12_VIEWPORT* = object
    TopLeftX*: FLOAT
    TopLeftY*: FLOAT
    Width*: FLOAT
    Height*: FLOAT
    MinDepth*: FLOAT
    MaxDepth*: FLOAT

  D3D12_RECT* = RECTL
  D3D12_BOX* = object
    left*: UINT
    top*: UINT
    front*: UINT
    right*: UINT
    bottom*: UINT
    back*: UINT

  D3D12_COMPARISON_FUNC* {.size: sizeof(cint).} = enum
    D3D12_COMPARISON_FUNC_NEVER = 1, D3D12_COMPARISON_FUNC_LESS = 2,
    D3D12_COMPARISON_FUNC_EQUAL = 3, D3D12_COMPARISON_FUNC_LESS_EQUAL = 4,
    D3D12_COMPARISON_FUNC_GREATER = 5, D3D12_COMPARISON_FUNC_NOT_EQUAL = 6,
    D3D12_COMPARISON_FUNC_GREATER_EQUAL = 7, D3D12_COMPARISON_FUNC_ALWAYS = 8
  D3D12_DEPTH_WRITE_MASK* {.size: sizeof(cint).} = enum
    D3D12_DEPTH_WRITE_MASK_ZERO = 0, D3D12_DEPTH_WRITE_MASK_ALL = 1
  D3D12_STENCIL_OP* {.size: sizeof(cint).} = enum
    D3D12_STENCIL_OP_KEEP = 1, D3D12_STENCIL_OP_ZERO = 2,
    D3D12_STENCIL_OP_REPLACE = 3, D3D12_STENCIL_OP_INCR_SAT = 4,
    D3D12_STENCIL_OP_DECR_SAT = 5, D3D12_STENCIL_OP_INVERT = 6,
    D3D12_STENCIL_OP_INCR = 7, D3D12_STENCIL_OP_DECR = 8
  D3D12_DEPTH_STENCILOP_DESC* = object
    StencilFailOp*: D3D12_STENCIL_OP
    StencilDepthFailOp*: D3D12_STENCIL_OP
    StencilPassOp*: D3D12_STENCIL_OP
    StencilFunc*: D3D12_COMPARISON_FUNC

  D3D12_DEPTH_STENCIL_DESC* = object
    DepthEnable*: BOOL
    DepthWriteMask*: D3D12_DEPTH_WRITE_MASK
    DepthFunc*: D3D12_COMPARISON_FUNC
    StencilEnable*: BOOL
    StencilReadMask*: UINT8
    StencilWriteMask*: UINT8
    FrontFace*: D3D12_DEPTH_STENCILOP_DESC
    BackFace*: D3D12_DEPTH_STENCILOP_DESC

  D3D12_BLEND* {.size: sizeof(cint).} = enum
    D3D12_BLEND_ZERO = 1, D3D12_BLEND_ONE = 2, D3D12_BLEND_SRC_COLOR = 3,
    D3D12_BLEND_INV_SRC_COLOR = 4, D3D12_BLEND_SRC_ALPHA = 5,
    D3D12_BLEND_INV_SRC_ALPHA = 6, D3D12_BLEND_DEST_ALPHA = 7,
    D3D12_BLEND_INV_DEST_ALPHA = 8, D3D12_BLEND_DEST_COLOR = 9,
    D3D12_BLEND_INV_DEST_COLOR = 10, D3D12_BLEND_SRC_ALPHA_SAT = 11,
    D3D12_BLEND_BLEND_FACTOR = 14, D3D12_BLEND_INV_BLEND_FACTOR = 15,
    D3D12_BLEND_SRC1_COLOR = 16, D3D12_BLEND_INV_SRC1_COLOR = 17,
    D3D12_BLEND_SRC1_ALPHA = 18, D3D12_BLEND_INV_SRC1_ALPHA = 19
  D3D12_BLEND_OP* {.size: sizeof(cint).} = enum
    D3D12_BLEND_OP_ADD = 1, D3D12_BLEND_OP_SUBTRACT = 2,
    D3D12_BLEND_OP_REV_SUBTRACT = 3, D3D12_BLEND_OP_MIN = 4,
    D3D12_BLEND_OP_MAX = 5
  D3D12_COLOR_WRITE_ENABLE* {.size: sizeof(cint).} = enum
    D3D12_COLOR_WRITE_ENABLE_RED = 1, D3D12_COLOR_WRITE_ENABLE_GREEN = 2,
    D3D12_COLOR_WRITE_ENABLE_BLUE = 4, D3D12_COLOR_WRITE_ENABLE_ALPHA = 8, D3D12_COLOR_WRITE_ENABLE_ALL = (((
        D3D12_COLOR_WRITE_ENABLE_RED or D3D12_COLOR_WRITE_ENABLE_GREEN) or
        D3D12_COLOR_WRITE_ENABLE_BLUE) or D3D12_COLOR_WRITE_ENABLE_ALPHA)
  D3D12_LOGIC_OP* {.size: sizeof(cint).} = enum
    D3D12_LOGIC_OP_CLEAR = 0, D3D12_LOGIC_OP_SET = (D3D12_LOGIC_OP_CLEAR + 1),
    D3D12_LOGIC_OP_COPY = (D3D12_LOGIC_OP_SET + 1),
    D3D12_LOGIC_OP_COPY_INVERTED = (D3D12_LOGIC_OP_COPY + 1),
    D3D12_LOGIC_OP_NOOP = (D3D12_LOGIC_OP_COPY_INVERTED + 1),
    D3D12_LOGIC_OP_INVERT = (D3D12_LOGIC_OP_NOOP + 1),
    D3D12_LOGIC_OP_AND = (D3D12_LOGIC_OP_INVERT + 1),
    D3D12_LOGIC_OP_NAND = (D3D12_LOGIC_OP_AND + 1),
    D3D12_LOGIC_OP_OR = (D3D12_LOGIC_OP_NAND + 1),
    D3D12_LOGIC_OP_NOR = (D3D12_LOGIC_OP_OR + 1),
    D3D12_LOGIC_OP_XOR = (D3D12_LOGIC_OP_NOR + 1),
    D3D12_LOGIC_OP_EQUIV = (D3D12_LOGIC_OP_XOR + 1),
    D3D12_LOGIC_OP_AND_REVERSE = (D3D12_LOGIC_OP_EQUIV + 1),
    D3D12_LOGIC_OP_AND_INVERTED = (D3D12_LOGIC_OP_AND_REVERSE + 1),
    D3D12_LOGIC_OP_OR_REVERSE = (D3D12_LOGIC_OP_AND_INVERTED + 1),
    D3D12_LOGIC_OP_OR_INVERTED = (D3D12_LOGIC_OP_OR_REVERSE + 1)
  D3D12_RENDER_TARGET_BLEND_DESC* = object
    BlendEnable*: BOOL
    LogicOpEnable*: BOOL
    SrcBlend*: D3D12_BLEND
    DestBlend*: D3D12_BLEND
    BlendOp*: D3D12_BLEND_OP
    SrcBlendAlpha*: D3D12_BLEND
    DestBlendAlpha*: D3D12_BLEND
    BlendOpAlpha*: D3D12_BLEND_OP
    LogicOp*: D3D12_LOGIC_OP
    RenderTargetWriteMask*: UINT8

  D3D12_BLEND_DESC* = object
    AlphaToCoverageEnable*: BOOL
    IndependentBlendEnable*: BOOL
    RenderTarget*: array[8, D3D12_RENDER_TARGET_BLEND_DESC]














# Note, the array size for RenderTarget[] above is D3D12_SIMULTANEOUS_RENDERTARGET_COUNT.
#   IDL processing/generation of this header replaces the define; this comment is merely explaining what happened.

type
  D3D12_CONSERVATIVE_RASTERIZATION_MODE* {.size: sizeof(cint).} = enum
    D3D12_CONSERVATIVE_RASTERIZATION_MODE_OFF = 0,
    D3D12_CONSERVATIVE_RASTERIZATION_MODE_ON = 1
  D3D12_RASTERIZER_DESC* = object
    FillMode*: D3D12_FILL_MODE
    CullMode*: D3D12_CULL_MODE
    FrontCounterClockwise*: BOOL
    DepthBias*: INT
    DepthBiasClamp*: FLOAT
    SlopeScaledDepthBias*: FLOAT
    DepthClipEnable*: BOOL
    MultisampleEnable*: BOOL
    AntialiasedLineEnable*: BOOL
    ForcedSampleCount*: UINT
    ConservativeRaster*: D3D12_CONSERVATIVE_RASTERIZATION_MODE




type
  ID3D12ObjectVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12Object; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12Object): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12Object): ULONG {.stdcall.}
    GetPrivateData*: proc (This: ptr ID3D12Object; guid: ptr GUID;
                           pDataSize: ptr UINT; pData: pointer): HRESULT {.
        stdcall.}
    SetPrivateData*: proc (This: ptr ID3D12Object; guid: ptr GUID;
                           DataSize: UINT; pData: pointer): HRESULT {.stdcall.}
    SetPrivateDataInterface*: proc (This: ptr ID3D12Object; guid: ptr GUID;
                                    pData: ptr Unknwn.IUnknown): HRESULT {.stdcall.}
    SetName*: proc (This: ptr ID3D12Object; Name: LPCWSTR): HRESULT {.stdcall.}

  ID3D12Object* = object
    lpVtbl*: ptr ID3D12ObjectVtbl


# interface ID3D12DeviceChild
# [unique][local][object][uuid]

type
  ID3D12DeviceChildVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12DeviceChild; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12DeviceChild): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12DeviceChild): ULONG {.stdcall.}
    GetPrivateData*: proc (This: ptr ID3D12DeviceChild; guid: ptr GUID;
                           pDataSize: ptr UINT; pData: pointer): HRESULT {.
        stdcall.}
    SetPrivateData*: proc (This: ptr ID3D12DeviceChild; guid: ptr GUID;
                           DataSize: UINT; pData: pointer): HRESULT {.stdcall.}
    SetPrivateDataInterface*: proc (This: ptr ID3D12DeviceChild; guid: ptr GUID;
                                    pData: ptr Unknwn.IUnknown): HRESULT {.stdcall.}
    SetName*: proc (This: ptr ID3D12DeviceChild; Name: LPCWSTR): HRESULT {.
        stdcall.}
    GetDevice*: proc (This: ptr ID3D12DeviceChild; riid: ptr IID;
                      ppvDevice: ptr pointer): HRESULT {.stdcall.}

  ID3D12DeviceChild* = object
    lpVtbl*: ptr ID3D12DeviceChildVtbl


# interface ID3D12RootSignature
# [unique][local][object][uuid]

type
  ID3D12RootSignatureVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12RootSignature; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12RootSignature): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12RootSignature): ULONG {.stdcall.}
    GetPrivateData*: proc (This: ptr ID3D12RootSignature; guid: ptr GUID;
                           pDataSize: ptr UINT; pData: pointer): HRESULT {.
        stdcall.}
    SetPrivateData*: proc (This: ptr ID3D12RootSignature; guid: ptr GUID;
                           DataSize: UINT; pData: pointer): HRESULT {.stdcall.}
    SetPrivateDataInterface*: proc (This: ptr ID3D12RootSignature;
                                    guid: ptr GUID; pData: ptr Unknwn.IUnknown): HRESULT {.
        stdcall.}
    SetName*: proc (This: ptr ID3D12RootSignature; Name: LPCWSTR): HRESULT {.
        stdcall.}
    GetDevice*: proc (This: ptr ID3D12RootSignature; riid: ptr IID;
                      ppvDevice: ptr pointer): HRESULT {.stdcall.}

  ID3D12RootSignature* = object
    lpVtbl*: ptr ID3D12RootSignatureVtbl


# interface __MIDL_itf_d3d12_0000_0001
# [local]

type
  D3D12_SHADER_BYTECODE* = object
    pShaderBytecode*: pointer
    BytecodeLength*: SIZE_T

  D3D12_STREAM_OUTPUT_DESC* = object
    pSODeclaration*: ptr D3D12_SO_DECLARATION_ENTRY
    NumEntries*: UINT
    pBufferStrides*: ptr UINT
    NumStrides*: UINT
    RasterizedStream*: UINT

  D3D12_INPUT_LAYOUT_DESC* = object
    pInputElementDescs*: ptr D3D12_INPUT_ELEMENT_DESC
    NumElements*: UINT

  D3D12_INDEX_BUFFER_STRIP_CUT_VALUE* {.size: sizeof(cint).} = enum
    D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_DISABLED = 0,
    D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_0xFFFF = 1,
    D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_0xFFFFFFFF = 2
  D3D12_CACHED_PIPELINE_STATE* = object
    pCachedBlob*: pointer
    CachedBlobSizeInBytes*: SIZE_T

  D3D12_PIPELINE_STATE_FLAGS* {.size: sizeof(cint).} = enum
    D3D12_PIPELINE_STATE_FLAG_NONE = 0,
    D3D12_PIPELINE_STATE_FLAG_TOOL_DEBUG = 0x00000001




type
  D3D12_GRAPHICS_PIPELINE_STATE_DESC* = object
    pRootSignature*: ptr ID3D12RootSignature
    VS*: D3D12_SHADER_BYTECODE
    PS*: D3D12_SHADER_BYTECODE
    DS*: D3D12_SHADER_BYTECODE
    HS*: D3D12_SHADER_BYTECODE
    GS*: D3D12_SHADER_BYTECODE
    StreamOutput*: D3D12_STREAM_OUTPUT_DESC
    BlendState*: D3D12_BLEND_DESC
    SampleMask*: UINT
    RasterizerState*: D3D12_RASTERIZER_DESC
    DepthStencilState*: D3D12_DEPTH_STENCIL_DESC
    InputLayout*: D3D12_INPUT_LAYOUT_DESC
    IBStripCutValue*: D3D12_INDEX_BUFFER_STRIP_CUT_VALUE
    PrimitiveTopologyType*: D3D12_PRIMITIVE_TOPOLOGY_TYPE
    NumRenderTargets*: UINT
    RTVFormats*: array[8, DXGI_FORMAT]
    DSVFormat*: DXGI_FORMAT
    SampleDesc*: DXGI_SAMPLE_DESC
    NodeMask*: UINT
    CachedPSO*: D3D12_CACHED_PIPELINE_STATE
    Flags*: D3D12_PIPELINE_STATE_FLAGS

  D3D12_COMPUTE_PIPELINE_STATE_DESC* = object
    pRootSignature*: ptr ID3D12RootSignature
    CS*: D3D12_SHADER_BYTECODE
    NodeMask*: UINT
    CachedPSO*: D3D12_CACHED_PIPELINE_STATE
    Flags*: D3D12_PIPELINE_STATE_FLAGS

  D3D12_FEATURE* {.size: sizeof(cint).} = enum
    D3D12_FEATURE_D3D12_OPTIONS = 0,
    D3D12_FEATURE_ARCHITECTURE = (D3D12_FEATURE_D3D12_OPTIONS + 1),
    D3D12_FEATURE_FEATURE_LEVELS = (D3D12_FEATURE_ARCHITECTURE + 1),
    D3D12_FEATURE_FORMAT_SUPPORT = (D3D12_FEATURE_FEATURE_LEVELS + 1), D3D12_FEATURE_MULTISAMPLE_QUALITY_LEVELS = (
        D3D12_FEATURE_FORMAT_SUPPORT + 1),
    D3D12_FEATURE_FORMAT_INFO = (D3D12_FEATURE_MULTISAMPLE_QUALITY_LEVELS + 1),
    D3D12_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT = (D3D12_FEATURE_FORMAT_INFO + 1)
  D3D12_SHADER_MIN_PRECISION_SUPPORT* {.size: sizeof(cint).} = enum
    D3D12_SHADER_MIN_PRECISION_SUPPORT_NONE = 0,
    D3D12_SHADER_MIN_PRECISION_SUPPORT_10_BIT = 0x00000001,
    D3D12_SHADER_MIN_PRECISION_SUPPORT_16_BIT = 0x00000002



type
  D3D12_TILED_RESOURCES_TIER* {.size: sizeof(cint).} = enum
    D3D12_TILED_RESOURCES_TIER_NOT_SUPPORTED = 0,
    D3D12_TILED_RESOURCES_TIER_1 = 1, D3D12_TILED_RESOURCES_TIER_2 = 2,
    D3D12_TILED_RESOURCES_TIER_3 = 3
  D3D12_RESOURCE_BINDING_TIER* {.size: sizeof(cint).} = enum
    D3D12_RESOURCE_BINDING_TIER_1 = 1, D3D12_RESOURCE_BINDING_TIER_2 = 2,
    D3D12_RESOURCE_BINDING_TIER_3 = 3
  D3D12_CONSERVATIVE_RASTERIZATION_TIER* {.size: sizeof(cint).} = enum
    D3D12_CONSERVATIVE_RASTERIZATION_TIER_NOT_SUPPORTED = 0,
    D3D12_CONSERVATIVE_RASTERIZATION_TIER_1 = 1,
    D3D12_CONSERVATIVE_RASTERIZATION_TIER_2 = 2,
    D3D12_CONSERVATIVE_RASTERIZATION_TIER_3 = 3
  D3D12_FORMAT_SUPPORT1* {.size: sizeof(cint).} = enum
    D3D12_FORMAT_SUPPORT1_NONE = 0, D3D12_FORMAT_SUPPORT1_BUFFER = 0x00000001,
    D3D12_FORMAT_SUPPORT1_IA_VERTEX_BUFFER = 0x00000002,
    D3D12_FORMAT_SUPPORT1_IA_INDEX_BUFFER = 0x00000004,
    D3D12_FORMAT_SUPPORT1_SO_BUFFER = 0x00000008,
    D3D12_FORMAT_SUPPORT1_TEXTURE1D = 0x00000010,
    D3D12_FORMAT_SUPPORT1_TEXTURE2D = 0x00000020,
    D3D12_FORMAT_SUPPORT1_TEXTURE3D = 0x00000040,
    D3D12_FORMAT_SUPPORT1_TEXTURECUBE = 0x00000080,
    D3D12_FORMAT_SUPPORT1_SHADER_LOAD = 0x00000100,
    D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE = 0x00000200,
    D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE_COMPARISON = 0x00000400,
    D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE_MONO_TEXT = 0x00000800,
    D3D12_FORMAT_SUPPORT1_MIP = 0x00001000,
    D3D12_FORMAT_SUPPORT1_RENDER_TARGET = 0x00004000,
    D3D12_FORMAT_SUPPORT1_BLENDABLE = 0x00008000,
    D3D12_FORMAT_SUPPORT1_DEPTH_STENCIL = 0x00010000,
    D3D12_FORMAT_SUPPORT1_MULTISAMPLE_RESOLVE = 0x00040000,
    D3D12_FORMAT_SUPPORT1_DISPLAY = 0x00080000,
    D3D12_FORMAT_SUPPORT1_CAST_WITHIN_BIT_LAYOUT = 0x00100000,
    D3D12_FORMAT_SUPPORT1_MULTISAMPLE_RENDERTARGET = 0x00200000,
    D3D12_FORMAT_SUPPORT1_MULTISAMPLE_LOAD = 0x00400000,
    D3D12_FORMAT_SUPPORT1_SHADER_GATHER = 0x00800000,
    D3D12_FORMAT_SUPPORT1_BACK_BUFFER_CAST = 0x01000000,
    D3D12_FORMAT_SUPPORT1_TYPED_UNORDERED_ACCESS_VIEW = 0x02000000,
    D3D12_FORMAT_SUPPORT1_SHADER_GATHER_COMPARISON = 0x04000000,
    D3D12_FORMAT_SUPPORT1_DECODER_OUTPUT = 0x08000000,
    D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_OUTPUT = 0x10000000,
    D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_INPUT = 0x20000000,
    D3D12_FORMAT_SUPPORT1_VIDEO_ENCODER = 0x40000000






type
  D3D12_FORMAT_SUPPORT2* {.size: sizeof(cint).} = enum
    D3D12_FORMAT_SUPPORT2_NONE = 0,
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_ADD = 0x00000001,
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS = 0x00000002, D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE = 0x00000004,
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE = 0x00000008,
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX = 0x00000010,
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX = 0x00000020,
    D3D12_FORMAT_SUPPORT2_UAV_TYPED_LOAD = 0x00000040,
    D3D12_FORMAT_SUPPORT2_UAV_TYPED_STORE = 0x00000080,
    D3D12_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP = 0x00000100,
    D3D12_FORMAT_SUPPORT2_TILED = 0x00000200,
    D3D12_FORMAT_SUPPORT2_MULTIPLANE_OVERLAY = 0x00004000


type
  D3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS* {.size: sizeof(cint).} = enum
    D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_NONE = 0,
    D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_TILED_RESOURCE = 0x00000001


type
  D3D12_CROSS_NODE_SHARING_TIER* {.size: sizeof(cint).} = enum
    D3D12_CROSS_NODE_SHARING_TIER_NOT_SUPPORTED = 0,
    D3D12_CROSS_NODE_SHARING_TIER_1_EMULATED = 1,
    D3D12_CROSS_NODE_SHARING_TIER_1 = 2, D3D12_CROSS_NODE_SHARING_TIER_2 = 3
  D3D12_RESOURCE_HEAP_TIER* {.size: sizeof(cint).} = enum
    D3D12_RESOURCE_HEAP_TIER_1 = 1, D3D12_RESOURCE_HEAP_TIER_2 = 2
  D3D12_FEATURE_DATA_D3D12_OPTIONS* = object
    DoublePrecisionFloatShaderOps*: BOOL
    OutputMergerLogicOp*: BOOL
    MinPrecisionSupport*: D3D12_SHADER_MIN_PRECISION_SUPPORT
    TiledResourcesTier*: D3D12_TILED_RESOURCES_TIER
    ResourceBindingTier*: D3D12_RESOURCE_BINDING_TIER
    PSSpecifiedStencilRefSupported*: BOOL
    TypedUAVLoadAdditionalFormats*: BOOL
    ROVsSupported*: BOOL
    ConservativeRasterizationTier*: D3D12_CONSERVATIVE_RASTERIZATION_TIER
    MaxGPUVirtualAddressBitsPerResource*: UINT
    StandardSwizzle64KBSupported*: BOOL
    CrossNodeSharingTier*: D3D12_CROSS_NODE_SHARING_TIER
    CrossAdapterRowMajorTextureSupported*: BOOL
    VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation*: BOOL
    ResourceHeapTier*: D3D12_RESOURCE_HEAP_TIER

  D3D12_FEATURE_DATA_ARCHITECTURE* = object
    NodeIndex*: UINT
    TileBasedRenderer*: BOOL
    UMA*: BOOL
    CacheCoherentUMA*: BOOL

  D3D12_FEATURE_DATA_FEATURE_LEVELS* = object
    NumFeatureLevels*: UINT
    pFeatureLevelsRequested*: ptr D3D_FEATURE_LEVEL
    MaxSupportedFeatureLevel*: D3D_FEATURE_LEVEL

  D3D12_FEATURE_DATA_FORMAT_SUPPORT* = object
    Format*: DXGI_FORMAT
    Support1*: D3D12_FORMAT_SUPPORT1
    Support2*: D3D12_FORMAT_SUPPORT2

  D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS* = object
    Format*: DXGI_FORMAT
    SampleCount*: UINT
    Flags*: D3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS
    NumQualityLevels*: UINT

  D3D12_FEATURE_DATA_FORMAT_INFO* = object
    Format*: DXGI_FORMAT
    PlaneCount*: UINT8

  D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT* = object
    MaxGPUVirtualAddressBitsPerResource*: UINT
    MaxGPUVirtualAddressBitsPerProcess*: UINT

  D3D12_RESOURCE_ALLOCATION_INFO* = object
    SizeInBytes*: UINT64
    Alignment*: UINT64

  D3D12_HEAP_TYPE* {.size: sizeof(cint).} = enum
    D3D12_HEAP_TYPE_DEFAULT = 1, D3D12_HEAP_TYPE_UPLOAD = 2,
    D3D12_HEAP_TYPE_READBACK = 3, D3D12_HEAP_TYPE_CUSTOM = 4
  D3D12_CPU_PAGE_PROPERTY* {.size: sizeof(cint).} = enum
    D3D12_CPU_PAGE_PROPERTY_UNKNOWN = 0,
    D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE = 1,
    D3D12_CPU_PAGE_PROPERTY_WRITE_COMBINE = 2,
    D3D12_CPU_PAGE_PROPERTY_WRITE_BACK = 3
  D3D12_MEMORY_POOL* {.size: sizeof(cint).} = enum
    D3D12_MEMORY_POOL_UNKNOWN = 0, D3D12_MEMORY_POOL_L0 = 1,
    D3D12_MEMORY_POOL_L1 = 2
  D3D12_HEAP_PROPERTIES* = object
    Type*: D3D12_HEAP_TYPE
    CPUPageProperty*: D3D12_CPU_PAGE_PROPERTY
    MemoryPoolPreference*: D3D12_MEMORY_POOL
    CreationNodeMask*: UINT
    VisibleNodeMask*: UINT

  D3D12_HEAP_FLAGS* {.size: sizeof(cint).} = enum
    D3D12_HEAP_FLAG_NONE = 0, D3D12_HEAP_FLAG_SHARED = 0x00000001,
    D3D12_HEAP_FLAG_DENY_BUFFERS = 0x00000004,
    D3D12_HEAP_FLAG_ALLOW_DISPLAY = 0x00000008,
    D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER = 0x00000020,
    D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES = 0x00000040,
    D3D12_HEAP_FLAG_ALLOW_ONLY_NON_RT_DS_TEXTURES = 0x00000044,
    D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES = 0x00000080,
    D3D12_HEAP_FLAG_ALLOW_ONLY_RT_DS_TEXTURES = 0x00000084,
    D3D12_HEAP_FLAG_ALLOW_ONLY_BUFFERS = 0x000000C0






const
  D3D12_HEAP_FLAG_ALLOW_ALL_BUFFERS_AND_TEXTURES = D3D12_HEAP_FLAG_NONE


type
  D3D12_HEAP_DESC* = object
    SizeInBytes*: UINT64
    Properties*: D3D12_HEAP_PROPERTIES
    Alignment*: UINT64
    Flags*: D3D12_HEAP_FLAGS

  D3D12_RESOURCE_DIMENSION* {.size: sizeof(cint).} = enum
    D3D12_RESOURCE_DIMENSION_UNKNOWN = 0, D3D12_RESOURCE_DIMENSION_BUFFER = 1,
    D3D12_RESOURCE_DIMENSION_TEXTURE1D = 2,
    D3D12_RESOURCE_DIMENSION_TEXTURE2D = 3,
    D3D12_RESOURCE_DIMENSION_TEXTURE3D = 4
  D3D12_TEXTURE_LAYOUT* {.size: sizeof(cint).} = enum
    D3D12_TEXTURE_LAYOUT_UNKNOWN = 0, D3D12_TEXTURE_LAYOUT_ROW_MAJOR = 1,
    D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE = 2,
    D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE = 3
  D3D12_RESOURCE_FLAGS* {.size: sizeof(cint).} = enum
    D3D12_RESOURCE_FLAG_NONE = 0,
    D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET = 0x00000001,
    D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL = 0x00000002,
    D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS = 0x00000004,
    D3D12_RESOURCE_FLAG_DENY_SHADER_RESOURCE = 0x00000008,
    D3D12_RESOURCE_FLAG_ALLOW_CROSS_ADAPTER = 0x00000010,
    D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS = 0x00000020


type
  INNER_C_UNION_4727299717376012824* = object  {.union.}
    Color*: array[4, FLOAT]
    DepthStencil*: D3D12_DEPTH_STENCIL_VALUE

  D3D12_RESOURCE_DESC* = object
    Dimension*: D3D12_RESOURCE_DIMENSION
    Alignment*: UINT64
    Width*: UINT64
    Height*: UINT
    DepthOrArraySize*: UINT16
    MipLevels*: UINT16
    Format*: DXGI_FORMAT
    SampleDesc*: DXGI_SAMPLE_DESC
    Layout*: D3D12_TEXTURE_LAYOUT
    Flags*: D3D12_RESOURCE_FLAGS

  D3D12_DEPTH_STENCIL_VALUE* = object
    Depth*: FLOAT
    Stencil*: UINT8

  D3D12_CLEAR_VALUE* = object
    Format*: DXGI_FORMAT
    ano_6428163915376192730*: INNER_C_UNION_4727299717376012824

  D3D12_RANGE* = object
    Begin*: SIZE_T
    End*: SIZE_T

  D3D12_SUBRESOURCE_INFO* = object
    Offset*: UINT64
    RowPitch*: UINT
    DepthPitch*: UINT

  D3D12_TILED_RESOURCE_COORDINATE* = object
    X*: UINT
    Y*: UINT
    Z*: UINT
    Subresource*: UINT

  D3D12_TILE_REGION_SIZE* = object
    NumTiles*: UINT
    UseBox*: BOOL
    Width*: UINT
    Height*: UINT16
    Depth*: UINT16

  D3D12_TILE_RANGE_FLAGS* {.size: sizeof(cint).} = enum
    D3D12_TILE_RANGE_FLAG_NONE = 0, D3D12_TILE_RANGE_FLAG_NULL = 1,
    D3D12_TILE_RANGE_FLAG_SKIP = 2, D3D12_TILE_RANGE_FLAG_REUSE_SINGLE_TILE = 4
  D3D12_SUBRESOURCE_TILING* = object
    WidthInTiles*: UINT
    HeightInTiles*: UINT16
    DepthInTiles*: UINT16
    StartTileIndexInOverallResource*: UINT

  D3D12_TILE_SHAPE* = object
    WidthInTexels*: UINT
    HeightInTexels*: UINT
    DepthInTexels*: UINT

  D3D12_PACKED_MIP_INFO* = object
    NumStandardMips*: UINT8
    NumPackedMips*: UINT8
    NumTilesForPackedMips*: UINT
    StartTileIndexInOverallResource*: UINT

  D3D12_TILE_MAPPING_FLAGS* {.size: sizeof(cint).} = enum
    D3D12_TILE_MAPPING_FLAG_NONE = 0,
    D3D12_TILE_MAPPING_FLAG_NO_HAZARD = 0x00000001


type
  ID3D12ResourceVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12Resource; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12Resource): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12Resource): ULONG {.stdcall.}
    GetPrivateData*: proc (This: ptr ID3D12Resource; guid: ptr GUID;
                           pDataSize: ptr UINT; pData: pointer): HRESULT {.
        stdcall.}
    SetPrivateData*: proc (This: ptr ID3D12Resource; guid: ptr GUID;
                           DataSize: UINT; pData: pointer): HRESULT {.stdcall.}
    SetPrivateDataInterface*: proc (This: ptr ID3D12Resource; guid: ptr GUID;
                                    pData: ptr Unknwn.IUnknown): HRESULT {.stdcall.}
    SetName*: proc (This: ptr ID3D12Resource; Name: LPCWSTR): HRESULT {.stdcall.}
    GetDevice*: proc (This: ptr ID3D12Resource; riid: ptr IID;
                      ppvDevice: ptr pointer): HRESULT {.stdcall.}
    Map*: proc (This: ptr ID3D12Resource; Subresource: UINT;
                pReadRange: ptr D3D12_RANGE; ppData: ptr pointer): HRESULT {.
        stdcall.}
    Unmap*: proc (This: ptr ID3D12Resource; Subresource: UINT;
                  pWrittenRange: ptr D3D12_RANGE) {.stdcall.}
    GetDesc*: proc (This: ptr ID3D12Resource): D3D12_RESOURCE_DESC {.stdcall.}
    GetGPUVirtualAddress*: proc (This: ptr ID3D12Resource): D3D12_GPU_VIRTUAL_ADDRESS {.
        stdcall.}
    WriteToSubresource*: proc (This: ptr ID3D12Resource; DstSubresource: UINT;
                               pDstBox: ptr D3D12_BOX; pSrcData: pointer;
                               SrcRowPitch: UINT; SrcDepthPitch: UINT): HRESULT {.
        stdcall.}
    ReadFromSubresource*: proc (This: ptr ID3D12Resource; pDstData: pointer;
                                DstRowPitch: UINT; DstDepthPitch: UINT;
                                SrcSubresource: UINT; pSrcBox: ptr D3D12_BOX): HRESULT {.
        stdcall.}
    GetHeapProperties*: proc (This: ptr ID3D12Resource;
                              pHeapProperties: ptr D3D12_HEAP_PROPERTIES;
                              pHeapFlags: ptr D3D12_HEAP_FLAGS): HRESULT {.
        stdcall.}

  ID3D12Resource* = object
    lpVtbl*: ptr ID3D12ResourceVtbl
type
  D3D12_TILE_COPY_FLAGS* {.size: sizeof(cint).} = enum
    D3D12_TILE_COPY_FLAG_NONE = 0, D3D12_TILE_COPY_FLAG_NO_HAZARD = 0x00000001,
    D3D12_TILE_COPY_FLAG_LINEAR_BUFFER_TO_SWIZZLED_TILED_RESOURCE = 0x00000002,
    D3D12_TILE_COPY_FLAG_SWIZZLED_TILED_RESOURCE_TO_LINEAR_BUFFER = 0x00000004



type
  D3D12_RESOURCE_STATES* {.size: sizeof(cint).} = enum
    D3D12_RESOURCE_STATE_COMMON = 0,
    D3D12_RESOURCE_STATE_VERTEX_AND_CONSTANT_BUFFER = 0x00000001,
    D3D12_RESOURCE_STATE_INDEX_BUFFER = 0x00000002,
    D3D12_RESOURCE_STATE_RENDER_TARGET = 0x00000004,
    D3D12_RESOURCE_STATE_UNORDERED_ACCESS = 0x00000008,
    D3D12_RESOURCE_STATE_DEPTH_WRITE = 0x00000010,
    D3D12_RESOURCE_STATE_DEPTH_READ = 0x00000020,
    D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE = 0x00000040,
    D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE = 0x00000080,
    D3D12_RESOURCE_STATE_STREAM_OUT = 0x00000100,
    D3D12_RESOURCE_STATE_INDIRECT_ARGUMENT = 0x00000200,
    D3D12_RESOURCE_STATE_COPY_DEST = 0x00000400,
    D3D12_RESOURCE_STATE_COPY_SOURCE = 0x00000800,
    D3D12_RESOURCE_STATE_GENERIC_READ = (((
        ((0x00000001 or 0x00000002) or 0x00000040) or 0x00000080) or
        0x00000200) or 0x00000800),
    D3D12_RESOURCE_STATE_RESOLVE_DEST = 0x00001000,
    D3D12_RESOURCE_STATE_RESOLVE_SOURCE = 0x00002000,


const
  D3D12_RESOURCE_STATE_PRESENT* = D3D12_RESOURCE_STATE_COMMON
  D3D12_RESOURCE_STATE_PREDICATION* = D3D12_RESOURCE_STATE_INDIRECT_ARGUMENT

type
  D3D12_RESOURCE_BARRIER_TYPE* {.size: sizeof(cint).} = enum
    D3D12_RESOURCE_BARRIER_TYPE_TRANSITION = 0, D3D12_RESOURCE_BARRIER_TYPE_ALIASING = (
        D3D12_RESOURCE_BARRIER_TYPE_TRANSITION + 1), D3D12_RESOURCE_BARRIER_TYPE_UAV = (
        D3D12_RESOURCE_BARRIER_TYPE_ALIASING + 1)
  D3D12_RESOURCE_TRANSITION_BARRIER* = object
    pResource*: ptr ID3D12Resource
    Subresource*: UINT
    StateBefore*: D3D12_RESOURCE_STATES
    StateAfter*: D3D12_RESOURCE_STATES

  D3D12_RESOURCE_ALIASING_BARRIER* = object
    pResourceBefore*: ptr ID3D12Resource
    pResourceAfter*: ptr ID3D12Resource

  D3D12_RESOURCE_UAV_BARRIER* = object
    pResource*: ptr ID3D12Resource

  D3D12_RESOURCE_BARRIER_FLAGS* {.size: sizeof(cint).} = enum
    D3D12_RESOURCE_BARRIER_FLAG_NONE = 0,
    D3D12_RESOURCE_BARRIER_FLAG_BEGIN_ONLY = 0x00000001,
    D3D12_RESOURCE_BARRIER_FLAG_END_ONLY = 0x00000002


type
  INNER_C_UNION_10217599790570261081* = object  {.union.}
    Transition*: D3D12_RESOURCE_TRANSITION_BARRIER
    Aliasing*: D3D12_RESOURCE_ALIASING_BARRIER
    UAV*: D3D12_RESOURCE_UAV_BARRIER

  INNER_C_UNION_12117044248454607464* = object  {.union.}
    PlacedFootprint*: D3D12_PLACED_SUBRESOURCE_FOOTPRINT
    SubresourceIndex*: UINT

  D3D12_RESOURCE_BARRIER* = object
    Type*: D3D12_RESOURCE_BARRIER_TYPE
    Flags*: D3D12_RESOURCE_BARRIER_FLAGS
    Union*: INNER_C_UNION_10217599790570261081

  D3D12_SUBRESOURCE_FOOTPRINT* = object
    Format*: DXGI_FORMAT
    Width*: UINT
    Height*: UINT
    Depth*: UINT
    RowPitch*: UINT

  D3D12_PLACED_SUBRESOURCE_FOOTPRINT* = object
    Offset*: UINT64
    Footprint*: D3D12_SUBRESOURCE_FOOTPRINT

  D3D12_TEXTURE_COPY_TYPE* {.size: sizeof(cint).} = enum
    D3D12_TEXTURE_COPY_TYPE_SUBRESOURCE_INDEX = 0,
    D3D12_TEXTURE_COPY_TYPE_PLACED_FOOTPRINT = 1
  D3D12_TEXTURE_COPY_LOCATION* = object
    pResource*: ptr ID3D12Resource
    Type*: D3D12_TEXTURE_COPY_TYPE
    ano_13142779812540204455*: INNER_C_UNION_12117044248454607464

  D3D12_SHADER_COMPONENT_MAPPING* {.size: sizeof(cint).} = enum
    D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_0 = 0,
    D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_1 = 1,
    D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_2 = 2,
    D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_3 = 3,
    D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_0 = 4,
    D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_1 = 5
  D3D12_BUFFER_SRV_FLAGS* {.size: sizeof(cint).} = enum
    D3D12_BUFFER_SRV_FLAG_NONE = 0, D3D12_BUFFER_SRV_FLAG_RAW = 0x00000001





type
  INNER_C_UNION_8838039966115797993* = object  {.union.}
    Buffer*: D3D12_BUFFER_SRV
    Texture1D*: D3D12_TEX1D_SRV
    Texture1DArray*: D3D12_TEX1D_ARRAY_SRV
    Texture2D*: D3D12_TEX2D_SRV
    Texture2DArray*: D3D12_TEX2D_ARRAY_SRV
    Texture2DMS*: D3D12_TEX2DMS_SRV
    Texture2DMSArray*: D3D12_TEX2DMS_ARRAY_SRV
    Texture3D*: D3D12_TEX3D_SRV
    TextureCube*: D3D12_TEXCUBE_SRV
    TextureCubeArray*: D3D12_TEXCUBE_ARRAY_SRV

  D3D12_BUFFER_SRV* = object
    FirstElement*: UINT64
    NumElements*: UINT
    StructureByteStride*: UINT
    Flags*: D3D12_BUFFER_SRV_FLAGS

  D3D12_TEX1D_SRV* = object
    MostDetailedMip*: UINT
    MipLevels*: UINT
    ResourceMinLODClamp*: FLOAT

  D3D12_TEX1D_ARRAY_SRV* = object
    MostDetailedMip*: UINT
    MipLevels*: UINT
    FirstArraySlice*: UINT
    ArraySize*: UINT
    ResourceMinLODClamp*: FLOAT

  D3D12_TEX2D_SRV* = object
    MostDetailedMip*: UINT
    MipLevels*: UINT
    PlaneSlice*: UINT
    ResourceMinLODClamp*: FLOAT

  D3D12_TEX2D_ARRAY_SRV* = object
    MostDetailedMip*: UINT
    MipLevels*: UINT
    FirstArraySlice*: UINT
    ArraySize*: UINT
    PlaneSlice*: UINT
    ResourceMinLODClamp*: FLOAT

  D3D12_TEX3D_SRV* = object
    MostDetailedMip*: UINT
    MipLevels*: UINT
    ResourceMinLODClamp*: FLOAT

  D3D12_TEXCUBE_SRV* = object
    MostDetailedMip*: UINT
    MipLevels*: UINT
    ResourceMinLODClamp*: FLOAT

  D3D12_TEXCUBE_ARRAY_SRV* = object
    MostDetailedMip*: UINT
    MipLevels*: UINT
    First2DArrayFace*: UINT
    NumCubes*: UINT
    ResourceMinLODClamp*: FLOAT

  D3D12_TEX2DMS_SRV* = object
    UnusedField_NothingToDefine*: UINT

  D3D12_TEX2DMS_ARRAY_SRV* = object
    FirstArraySlice*: UINT
    ArraySize*: UINT

  D3D12_SRV_DIMENSION* {.size: sizeof(cint).} = enum
    D3D12_SRV_DIMENSION_UNKNOWN = 0, D3D12_SRV_DIMENSION_BUFFER = 1,
    D3D12_SRV_DIMENSION_TEXTURE1D = 2, D3D12_SRV_DIMENSION_TEXTURE1DARRAY = 3,
    D3D12_SRV_DIMENSION_TEXTURE2D = 4, D3D12_SRV_DIMENSION_TEXTURE2DARRAY = 5,
    D3D12_SRV_DIMENSION_TEXTURE2DMS = 6,
    D3D12_SRV_DIMENSION_TEXTURE2DMSARRAY = 7, D3D12_SRV_DIMENSION_TEXTURE3D = 8,
    D3D12_SRV_DIMENSION_TEXTURECUBE = 9,
    D3D12_SRV_DIMENSION_TEXTURECUBEARRAY = 10
  D3D12_SHADER_RESOURCE_VIEW_DESC* = object
    Format*: DXGI_FORMAT
    ViewDimension*: D3D12_SRV_DIMENSION
    Shader4ComponentMapping*: UINT
    ano_15696235992120349969*: INNER_C_UNION_8838039966115797993

  D3D12_CONSTANT_BUFFER_VIEW_DESC* = object
    BufferLocation*: D3D12_GPU_VIRTUAL_ADDRESS
    SizeInBytes*: UINT

  D3D12_FILTER* {.size: sizeof(cint).} = enum
    D3D12_FILTER_MIN_MAG_MIP_POINT = 0,
    D3D12_FILTER_MIN_MAG_POINT_MIP_LINEAR = 0x00000001,
    D3D12_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT = 0x00000004,
    D3D12_FILTER_MIN_POINT_MAG_MIP_LINEAR = 0x00000005,
    D3D12_FILTER_MIN_LINEAR_MAG_MIP_POINT = 0x00000010,
    D3D12_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 0x00000011,
    D3D12_FILTER_MIN_MAG_LINEAR_MIP_POINT = 0x00000014,
    D3D12_FILTER_MIN_MAG_MIP_LINEAR = 0x00000015,
    D3D12_FILTER_ANISOTROPIC = 0x00000055,
    D3D12_FILTER_COMPARISON_MIN_MAG_MIP_POINT = 0x00000080,
    D3D12_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR = 0x00000081,
    D3D12_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT = 0x00000084,
    D3D12_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR = 0x00000085,
    D3D12_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT = 0x00000090,
    D3D12_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 0x00000091,
    D3D12_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT = 0x00000094,
    D3D12_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR = 0x00000095,
    D3D12_FILTER_COMPARISON_ANISOTROPIC = 0x000000D5,
    D3D12_FILTER_MINIMUM_MIN_MAG_MIP_POINT = 0x00000100,
    D3D12_FILTER_MINIMUM_MIN_MAG_POINT_MIP_LINEAR = 0x00000101,
    D3D12_FILTER_MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT = 0x00000104,
    D3D12_FILTER_MINIMUM_MIN_POINT_MAG_MIP_LINEAR = 0x00000105,
    D3D12_FILTER_MINIMUM_MIN_LINEAR_MAG_MIP_POINT = 0x00000110,
    D3D12_FILTER_MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 0x00000111,
    D3D12_FILTER_MINIMUM_MIN_MAG_LINEAR_MIP_POINT = 0x00000114,
    D3D12_FILTER_MINIMUM_MIN_MAG_MIP_LINEAR = 0x00000115,
    D3D12_FILTER_MINIMUM_ANISOTROPIC = 0x00000155,
    D3D12_FILTER_MAXIMUM_MIN_MAG_MIP_POINT = 0x00000180,
    D3D12_FILTER_MAXIMUM_MIN_MAG_POINT_MIP_LINEAR = 0x00000181,
    D3D12_FILTER_MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT = 0x00000184,
    D3D12_FILTER_MAXIMUM_MIN_POINT_MAG_MIP_LINEAR = 0x00000185,
    D3D12_FILTER_MAXIMUM_MIN_LINEAR_MAG_MIP_POINT = 0x00000190,
    D3D12_FILTER_MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 0x00000191,
    D3D12_FILTER_MAXIMUM_MIN_MAG_LINEAR_MIP_POINT = 0x00000194,
    D3D12_FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR = 0x00000195,
    D3D12_FILTER_MAXIMUM_ANISOTROPIC = 0x000001D5
  D3D12_FILTER_TYPE* {.size: sizeof(cint).} = enum
    D3D12_FILTER_TYPE_POINT = 0, D3D12_FILTER_TYPE_LINEAR = 1
  D3D12_FILTER_REDUCTION_TYPE* {.size: sizeof(cint).} = enum
    D3D12_FILTER_REDUCTION_TYPE_STANDARD = 0,
    D3D12_FILTER_REDUCTION_TYPE_COMPARISON = 1,
    D3D12_FILTER_REDUCTION_TYPE_MINIMUM = 2,
    D3D12_FILTER_REDUCTION_TYPE_MAXIMUM = 3
  D3D12_TEXTURE_ADDRESS_MODE* {.size: sizeof(cint).} = enum
    D3D12_TEXTURE_ADDRESS_MODE_WRAP = 1, D3D12_TEXTURE_ADDRESS_MODE_MIRROR = 2,
    D3D12_TEXTURE_ADDRESS_MODE_CLAMP = 3, D3D12_TEXTURE_ADDRESS_MODE_BORDER = 4,
    D3D12_TEXTURE_ADDRESS_MODE_MIRROR_ONCE = 5
  D3D12_SAMPLER_DESC* = object
    Filter*: D3D12_FILTER
    AddressU*: D3D12_TEXTURE_ADDRESS_MODE
    AddressV*: D3D12_TEXTURE_ADDRESS_MODE
    AddressW*: D3D12_TEXTURE_ADDRESS_MODE
    MipLODBias*: FLOAT
    MaxAnisotropy*: UINT
    ComparisonFunc*: D3D12_COMPARISON_FUNC
    BorderColor*: array[4, FLOAT]
    MinLOD*: FLOAT
    MaxLOD*: FLOAT

  D3D12_BUFFER_UAV_FLAGS* {.size: sizeof(cint).} = enum
    D3D12_BUFFER_UAV_FLAG_NONE = 0, D3D12_BUFFER_UAV_FLAG_RAW = 0x00000001

type
  INNER_C_UNION_8578129493610921043* = object  {.union.}
    Buffer*: D3D12_BUFFER_UAV
    Texture1D*: D3D12_TEX1D_UAV
    Texture1DArray*: D3D12_TEX1D_ARRAY_UAV
    Texture2D*: D3D12_TEX2D_UAV
    Texture2DArray*: D3D12_TEX2D_ARRAY_UAV
    Texture3D*: D3D12_TEX3D_UAV

  INNER_C_UNION_5630856590804113740* = object  {.union.}
    Buffer*: D3D12_BUFFER_RTV
    Texture1D*: D3D12_TEX1D_RTV
    Texture1DArray*: D3D12_TEX1D_ARRAY_RTV
    Texture2D*: D3D12_TEX2D_RTV
    Texture2DArray*: D3D12_TEX2D_ARRAY_RTV
    Texture2DMS*: D3D12_TEX2DMS_RTV
    Texture2DMSArray*: D3D12_TEX2DMS_ARRAY_RTV
    Texture3D*: D3D12_TEX3D_RTV

  D3D12_BUFFER_UAV* = object
    FirstElement*: UINT64
    NumElements*: UINT
    StructureByteStride*: UINT
    CounterOffsetInBytes*: UINT64
    Flags*: D3D12_BUFFER_UAV_FLAGS

  D3D12_TEX1D_UAV* = object
    MipSlice*: UINT

  D3D12_TEX1D_ARRAY_UAV* = object
    MipSlice*: UINT
    FirstArraySlice*: UINT
    ArraySize*: UINT

  D3D12_TEX2D_UAV* = object
    MipSlice*: UINT
    PlaneSlice*: UINT

  D3D12_TEX2D_ARRAY_UAV* = object
    MipSlice*: UINT
    FirstArraySlice*: UINT
    ArraySize*: UINT
    PlaneSlice*: UINT

  D3D12_TEX3D_UAV* = object
    MipSlice*: UINT
    FirstWSlice*: UINT
    WSize*: UINT

  D3D12_UAV_DIMENSION* {.size: sizeof(cint).} = enum
    D3D12_UAV_DIMENSION_UNKNOWN = 0, D3D12_UAV_DIMENSION_BUFFER = 1,
    D3D12_UAV_DIMENSION_TEXTURE1D = 2, D3D12_UAV_DIMENSION_TEXTURE1DARRAY = 3,
    D3D12_UAV_DIMENSION_TEXTURE2D = 4, D3D12_UAV_DIMENSION_TEXTURE2DARRAY = 5,
    D3D12_UAV_DIMENSION_TEXTURE3D = 8
  D3D12_UNORDERED_ACCESS_VIEW_DESC* = object
    Format*: DXGI_FORMAT
    ViewDimension*: D3D12_UAV_DIMENSION
    ano_2322651162389907000*: INNER_C_UNION_8578129493610921043

  D3D12_BUFFER_RTV* = object
    FirstElement*: UINT64
    NumElements*: UINT

  D3D12_TEX1D_RTV* = object
    MipSlice*: UINT

  D3D12_TEX1D_ARRAY_RTV* = object
    MipSlice*: UINT
    FirstArraySlice*: UINT
    ArraySize*: UINT

  D3D12_TEX2D_RTV* = object
    MipSlice*: UINT
    PlaneSlice*: UINT

  D3D12_TEX2DMS_RTV* = object
    UnusedField_NothingToDefine*: UINT

  D3D12_TEX2D_ARRAY_RTV* = object
    MipSlice*: UINT
    FirstArraySlice*: UINT
    ArraySize*: UINT
    PlaneSlice*: UINT

  D3D12_TEX2DMS_ARRAY_RTV* = object
    FirstArraySlice*: UINT
    ArraySize*: UINT

  D3D12_TEX3D_RTV* = object
    MipSlice*: UINT
    FirstWSlice*: UINT
    WSize*: UINT

  D3D12_RTV_DIMENSION* {.size: sizeof(cint).} = enum
    D3D12_RTV_DIMENSION_UNKNOWN = 0, D3D12_RTV_DIMENSION_BUFFER = 1,
    D3D12_RTV_DIMENSION_TEXTURE1D = 2, D3D12_RTV_DIMENSION_TEXTURE1DARRAY = 3,
    D3D12_RTV_DIMENSION_TEXTURE2D = 4, D3D12_RTV_DIMENSION_TEXTURE2DARRAY = 5,
    D3D12_RTV_DIMENSION_TEXTURE2DMS = 6,
    D3D12_RTV_DIMENSION_TEXTURE2DMSARRAY = 7, D3D12_RTV_DIMENSION_TEXTURE3D = 8
  D3D12_RENDER_TARGET_VIEW_DESC* = object
    Format*: DXGI_FORMAT
    ViewDimension*: D3D12_RTV_DIMENSION
    ano_4913377831060945013*: INNER_C_UNION_5630856590804113740

  D3D12_TEX1D_DSV* = object
    MipSlice*: UINT

  D3D12_TEX1D_ARRAY_DSV* = object
    MipSlice*: UINT
    FirstArraySlice*: UINT
    ArraySize*: UINT

  D3D12_TEX2D_DSV* = object
    MipSlice*: UINT

  D3D12_TEX2D_ARRAY_DSV* = object
    MipSlice*: UINT
    FirstArraySlice*: UINT
    ArraySize*: UINT

  D3D12_TEX2DMS_DSV* = object
    UnusedField_NothingToDefine*: UINT

  D3D12_TEX2DMS_ARRAY_DSV* = object
    FirstArraySlice*: UINT
    ArraySize*: UINT

  D3D12_DSV_FLAGS* {.size: sizeof(cint).} = enum
    D3D12_DSV_FLAG_NONE = 0, D3D12_DSV_FLAG_READ_ONLY_DEPTH = 0x00000001,
    D3D12_DSV_FLAG_READ_ONLY_STENCIL = 0x00000002

type
  INNER_C_UNION_15388372878276581740* = object  {.union.}
    Texture1D*: D3D12_TEX1D_DSV
    Texture1DArray*: D3D12_TEX1D_ARRAY_DSV
    Texture2D*: D3D12_TEX2D_DSV
    Texture2DArray*: D3D12_TEX2D_ARRAY_DSV
    Texture2DMS*: D3D12_TEX2DMS_DSV
    Texture2DMSArray*: D3D12_TEX2DMS_ARRAY_DSV

  D3D12_DSV_DIMENSION* {.size: sizeof(cint).} = enum
    D3D12_DSV_DIMENSION_UNKNOWN = 0, D3D12_DSV_DIMENSION_TEXTURE1D = 1,
    D3D12_DSV_DIMENSION_TEXTURE1DARRAY = 2, D3D12_DSV_DIMENSION_TEXTURE2D = 3,
    D3D12_DSV_DIMENSION_TEXTURE2DARRAY = 4, D3D12_DSV_DIMENSION_TEXTURE2DMS = 5,
    D3D12_DSV_DIMENSION_TEXTURE2DMSARRAY = 6
  D3D12_DEPTH_STENCIL_VIEW_DESC* = object
    Format*: DXGI_FORMAT
    ViewDimension*: D3D12_DSV_DIMENSION
    Flags*: D3D12_DSV_FLAGS
    ano_4918216866525903652*: INNER_C_UNION_15388372878276581740

  D3D12_CLEAR_FLAGS* {.size: sizeof(cint).} = enum
    D3D12_CLEAR_FLAG_DEPTH = 0x00000001, D3D12_CLEAR_FLAG_STENCIL = 0x00000002

type
  D3D12_FENCE_FLAGS* {.size: sizeof(cint).} = enum
    D3D12_FENCE_FLAG_NONE = 0, D3D12_FENCE_FLAG_SHARED = 0x00000001,
    D3D12_FENCE_FLAG_SHARED_CROSS_ADAPTER = 0x00000002
type
  D3D12_DESCRIPTOR_HEAP_TYPE* {.size: sizeof(cint).} = enum
    D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV = 0, D3D12_DESCRIPTOR_HEAP_TYPE_SAMPLER = (
        D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV + 1),
    D3D12_DESCRIPTOR_HEAP_TYPE_RTV = (D3D12_DESCRIPTOR_HEAP_TYPE_SAMPLER + 1),
    D3D12_DESCRIPTOR_HEAP_TYPE_DSV = (D3D12_DESCRIPTOR_HEAP_TYPE_RTV + 1),
    D3D12_DESCRIPTOR_HEAP_TYPE_NUM_TYPES = (D3D12_DESCRIPTOR_HEAP_TYPE_DSV + 1)
  D3D12_DESCRIPTOR_HEAP_FLAGS* {.size: sizeof(cint).} = enum
    D3D12_DESCRIPTOR_HEAP_FLAG_NONE = 0,
    D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE = 0x00000001
type
  INNER_C_UNION_5675138526744772573* = object  {.union.}
    DescriptorTable*: D3D12_ROOT_DESCRIPTOR_TABLE
    Constants*: D3D12_ROOT_CONSTANTS
    Descriptor*: D3D12_ROOT_DESCRIPTOR

  D3D12_DESCRIPTOR_HEAP_DESC* = object
    Type*: D3D12_DESCRIPTOR_HEAP_TYPE
    NumDescriptors*: UINT
    Flags*: D3D12_DESCRIPTOR_HEAP_FLAGS
    NodeMask*: UINT

  D3D12_DESCRIPTOR_RANGE_TYPE* {.size: sizeof(cint).} = enum
    D3D12_DESCRIPTOR_RANGE_TYPE_SRV = 0,
    D3D12_DESCRIPTOR_RANGE_TYPE_UAV = (D3D12_DESCRIPTOR_RANGE_TYPE_SRV + 1),
    D3D12_DESCRIPTOR_RANGE_TYPE_CBV = (D3D12_DESCRIPTOR_RANGE_TYPE_UAV + 1),
    D3D12_DESCRIPTOR_RANGE_TYPE_SAMPLER = (D3D12_DESCRIPTOR_RANGE_TYPE_CBV + 1)
  D3D12_DESCRIPTOR_RANGE* = object
    RangeType*: D3D12_DESCRIPTOR_RANGE_TYPE
    NumDescriptors*: UINT
    BaseShaderRegister*: UINT
    RegisterSpace*: UINT
    OffsetInDescriptorsFromTableStart*: UINT

  D3D12_ROOT_DESCRIPTOR_TABLE* = object
    NumDescriptorRanges*: UINT
    pDescriptorRanges*: ptr D3D12_DESCRIPTOR_RANGE

  D3D12_ROOT_CONSTANTS* = object
    ShaderRegister*: UINT
    RegisterSpace*: UINT
    Num32BitValues*: UINT

  D3D12_ROOT_DESCRIPTOR* = object
    ShaderRegister*: UINT
    RegisterSpace*: UINT

  D3D12_SHADER_VISIBILITY* {.size: sizeof(cint).} = enum
    D3D12_SHADER_VISIBILITY_ALL = 0, D3D12_SHADER_VISIBILITY_VERTEX = 1,
    D3D12_SHADER_VISIBILITY_HULL = 2, D3D12_SHADER_VISIBILITY_DOMAIN = 3,
    D3D12_SHADER_VISIBILITY_GEOMETRY = 4, D3D12_SHADER_VISIBILITY_PIXEL = 5
  D3D12_ROOT_PARAMETER_TYPE* {.size: sizeof(cint).} = enum
    D3D12_ROOT_PARAMETER_TYPE_DESCRIPTOR_TABLE = 0, D3D12_ROOT_PARAMETER_TYPE_32BIT_CONSTANTS = (
        D3D12_ROOT_PARAMETER_TYPE_DESCRIPTOR_TABLE + 1), D3D12_ROOT_PARAMETER_TYPE_CBV = (
        D3D12_ROOT_PARAMETER_TYPE_32BIT_CONSTANTS + 1),
    D3D12_ROOT_PARAMETER_TYPE_SRV = (D3D12_ROOT_PARAMETER_TYPE_CBV + 1),
    D3D12_ROOT_PARAMETER_TYPE_UAV = (D3D12_ROOT_PARAMETER_TYPE_SRV + 1)
  D3D12_ROOT_PARAMETER* = object
    ParameterType*: D3D12_ROOT_PARAMETER_TYPE
    ano_10046628659722980158*: INNER_C_UNION_5675138526744772573
    ShaderVisibility*: D3D12_SHADER_VISIBILITY

  D3D12_ROOT_SIGNATURE_FLAGS* {.size: sizeof(cint).} = enum
    D3D12_ROOT_SIGNATURE_FLAG_NONE = 0,
    D3D12_ROOT_SIGNATURE_FLAG_ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT = 0x00000001,
    D3D12_ROOT_SIGNATURE_FLAG_DENY_VERTEX_SHADER_ROOT_ACCESS = 0x00000002,
    D3D12_ROOT_SIGNATURE_FLAG_DENY_HULL_SHADER_ROOT_ACCESS = 0x00000004,
    D3D12_ROOT_SIGNATURE_FLAG_DENY_DOMAIN_SHADER_ROOT_ACCESS = 0x00000008,
    D3D12_ROOT_SIGNATURE_FLAG_DENY_GEOMETRY_SHADER_ROOT_ACCESS = 0x00000010,
    D3D12_ROOT_SIGNATURE_FLAG_DENY_PIXEL_SHADER_ROOT_ACCESS = 0x00000020,
    D3D12_ROOT_SIGNATURE_FLAG_ALLOW_STREAM_OUTPUT = 0x00000040


type
  D3D12_STATIC_BORDER_COLOR* {.size: sizeof(cint).} = enum
    D3D12_STATIC_BORDER_COLOR_TRANSPARENT_BLACK = 0, D3D12_STATIC_BORDER_COLOR_OPAQUE_BLACK = (
        D3D12_STATIC_BORDER_COLOR_TRANSPARENT_BLACK + 1), D3D12_STATIC_BORDER_COLOR_OPAQUE_WHITE = (
        D3D12_STATIC_BORDER_COLOR_OPAQUE_BLACK + 1)
  D3D12_STATIC_SAMPLER_DESC* = object
    Filter*: D3D12_FILTER
    AddressU*: D3D12_TEXTURE_ADDRESS_MODE
    AddressV*: D3D12_TEXTURE_ADDRESS_MODE
    AddressW*: D3D12_TEXTURE_ADDRESS_MODE
    MipLODBias*: FLOAT
    MaxAnisotropy*: UINT
    ComparisonFunc*: D3D12_COMPARISON_FUNC
    BorderColor*: D3D12_STATIC_BORDER_COLOR
    MinLOD*: FLOAT
    MaxLOD*: FLOAT
    ShaderRegister*: UINT
    RegisterSpace*: UINT
    ShaderVisibility*: D3D12_SHADER_VISIBILITY

  D3D12_ROOT_SIGNATURE_DESC* = object
    NumParameters*: UINT
    pParameters*: ptr D3D12_ROOT_PARAMETER
    NumStaticSamplers*: UINT
    pStaticSamplers*: ptr D3D12_STATIC_SAMPLER_DESC
    Flags*: D3D12_ROOT_SIGNATURE_FLAGS

  D3D_ROOT_SIGNATURE_VERSION* {.size: sizeof(cint).} = enum
    D3D_ROOT_SIGNATURE_VERSION_1 = 0x00000001





type
  ID3D12RootSignatureDeserializerVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12RootSignatureDeserializer;
                           riid: ptr IID; ppvObject: ptr pointer): HRESULT {.
        stdcall.}
    AddRef*: proc (This: ptr ID3D12RootSignatureDeserializer): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12RootSignatureDeserializer): ULONG {.stdcall.}
    GetRootSignatureDesc*: proc (This: ptr ID3D12RootSignatureDeserializer): ptr D3D12_ROOT_SIGNATURE_DESC {.
        stdcall.}

  ID3D12RootSignatureDeserializer* = object
    lpVtbl*: ptr ID3D12RootSignatureDeserializerVtbl


# interface __MIDL_itf_d3d12_0000_0002
# [local]

type
  PFN_D3D12_SERIALIZE_ROOT_SIGNATURE* = proc (
      pRootSignature: ptr D3D12_ROOT_SIGNATURE_DESC;
      Version: D3D_ROOT_SIGNATURE_VERSION; ppBlob: ptr ptr ID3DBlob;
      ppErrorBlob: ptr ptr ID3DBlob): HRESULT {.stdcall.}

proc D3D12SerializeRootSignature*(pRootSignature: ptr D3D12_ROOT_SIGNATURE_DESC;
                                  Version: D3D_ROOT_SIGNATURE_VERSION;
                                  ppBlob: ptr ptr ID3DBlob;
                                  ppErrorBlob: ptr ptr ID3DBlob): HRESULT {.
    stdcall, importc.}
type
  PFN_D3D12_CREATE_ROOT_SIGNATURE_DESERIALIZER* = proc (pSrcData: LPCVOID;
      SrcDataSizeInBytes: SIZE_T; pRootSignatureDeserializerInterface: ptr IID;
      ppRootSignatureDeserializer: ptr pointer): HRESULT {.stdcall.}

proc D3D12CreateRootSignatureDeserializer*(pSrcData: LPCVOID;
    SrcDataSizeInBytes: SIZE_T; pRootSignatureDeserializerInterface: ptr IID;
    ppRootSignatureDeserializer: ptr pointer): HRESULT {.stdcall, importc.}
type
  D3D12_CPU_DESCRIPTOR_HANDLE* = object
    `ptr`*: SIZE_T

  D3D12_GPU_DESCRIPTOR_HANDLE* = object
    `ptr`*: UINT64


# If rects are supplied in D3D12_DISCARD_REGION, below, the resource
# must have 2D subresources with all specified subresources the same dimension.

type
  INNER_C_STRUCT_4487348530565364173* = object
    Slot*: UINT

  INNER_C_STRUCT_3837263988364380471* = object
    RootParameterIndex*: UINT
    DestOffsetIn32BitValues*: UINT
    Num32BitValuesToSet*: UINT

  INNER_C_STRUCT_17400908672726678848* = object
    RootParameterIndex*: UINT

  INNER_C_STRUCT_16448473605256716114* = object
    RootParameterIndex*: UINT

  INNER_C_STRUCT_12558089386176613029* = object
    RootParameterIndex*: UINT

  INNER_C_UNION_1301674651468563092* = object  {.union.}
    VertexBuffer*: INNER_C_STRUCT_4487348530565364173
    Constant*: INNER_C_STRUCT_3837263988364380471
    ConstantBufferView*: INNER_C_STRUCT_17400908672726678848
    ShaderResourceView*: INNER_C_STRUCT_16448473605256716114
    UnorderedAccessView*: INNER_C_STRUCT_12558089386176613029

  D3D12_DISCARD_REGION* = object
    NumRects*: UINT
    pRects*: ptr D3D12_RECT
    FirstSubresource*: UINT
    NumSubresources*: UINT

  D3D12_QUERY_HEAP_TYPE* {.size: sizeof(cint).} = enum
    D3D12_QUERY_HEAP_TYPE_OCCLUSION = 0, D3D12_QUERY_HEAP_TYPE_TIMESTAMP = 1,
    D3D12_QUERY_HEAP_TYPE_PIPELINE_STATISTICS = 2,
    D3D12_QUERY_HEAP_TYPE_SO_STATISTICS = 3
  D3D12_QUERY_HEAP_DESC* = object
    Type*: D3D12_QUERY_HEAP_TYPE
    Count*: UINT
    NodeMask*: UINT

  D3D12_QUERY_TYPE* {.size: sizeof(cint).} = enum
    D3D12_QUERY_TYPE_OCCLUSION = 0, D3D12_QUERY_TYPE_BINARY_OCCLUSION = 1,
    D3D12_QUERY_TYPE_TIMESTAMP = 2, D3D12_QUERY_TYPE_PIPELINE_STATISTICS = 3,
    D3D12_QUERY_TYPE_SO_STATISTICS_STREAM0 = 4,
    D3D12_QUERY_TYPE_SO_STATISTICS_STREAM1 = 5,
    D3D12_QUERY_TYPE_SO_STATISTICS_STREAM2 = 6,
    D3D12_QUERY_TYPE_SO_STATISTICS_STREAM3 = 7
  D3D12_PREDICATION_OP* {.size: sizeof(cint).} = enum
    D3D12_PREDICATION_OP_EQUAL_ZERO = 0, D3D12_PREDICATION_OP_NOT_EQUAL_ZERO = 1
  D3D12_QUERY_DATA_PIPELINE_STATISTICS* = object
    IAVertices*: UINT64
    IAPrimitives*: UINT64
    VSInvocations*: UINT64
    GSInvocations*: UINT64
    GSPrimitives*: UINT64
    CInvocations*: UINT64
    CPrimitives*: UINT64
    PSInvocations*: UINT64
    HSInvocations*: UINT64
    DSInvocations*: UINT64
    CSInvocations*: UINT64

  D3D12_QUERY_DATA_SO_STATISTICS* = object
    NumPrimitivesWritten*: UINT64
    PrimitivesStorageNeeded*: UINT64

  D3D12_STREAM_OUTPUT_BUFFER_VIEW* = object
    BufferLocation*: D3D12_GPU_VIRTUAL_ADDRESS
    SizeInBytes*: UINT64
    BufferFilledSizeLocation*: D3D12_GPU_VIRTUAL_ADDRESS

  D3D12_DRAW_ARGUMENTS* = object
    VertexCountPerInstance*: UINT
    InstanceCount*: UINT
    StartVertexLocation*: UINT
    StartInstanceLocation*: UINT

  D3D12_DRAW_INDEXED_ARGUMENTS* = object
    IndexCountPerInstance*: UINT
    InstanceCount*: UINT
    StartIndexLocation*: UINT
    BaseVertexLocation*: INT
    StartInstanceLocation*: UINT

  D3D12_DISPATCH_ARGUMENTS* = object
    ThreadGroupCountX*: UINT
    ThreadGroupCountY*: UINT
    ThreadGroupCountZ*: UINT

  D3D12_VERTEX_BUFFER_VIEW* = object
    BufferLocation*: D3D12_GPU_VIRTUAL_ADDRESS
    SizeInBytes*: UINT
    StrideInBytes*: UINT

  D3D12_INDEX_BUFFER_VIEW* = object
    BufferLocation*: D3D12_GPU_VIRTUAL_ADDRESS
    SizeInBytes*: UINT
    Format*: DXGI_FORMAT

  D3D12_INDIRECT_ARGUMENT_TYPE* {.size: sizeof(cint).} = enum
    D3D12_INDIRECT_ARGUMENT_TYPE_DRAW = 0, D3D12_INDIRECT_ARGUMENT_TYPE_DRAW_INDEXED = (
        D3D12_INDIRECT_ARGUMENT_TYPE_DRAW + 1), D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH = (
        D3D12_INDIRECT_ARGUMENT_TYPE_DRAW_INDEXED + 1), D3D12_INDIRECT_ARGUMENT_TYPE_VERTEX_BUFFER_VIEW = (
        D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH + 1), D3D12_INDIRECT_ARGUMENT_TYPE_INDEX_BUFFER_VIEW = (
        D3D12_INDIRECT_ARGUMENT_TYPE_VERTEX_BUFFER_VIEW + 1), D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT = (
        D3D12_INDIRECT_ARGUMENT_TYPE_INDEX_BUFFER_VIEW + 1), D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT_BUFFER_VIEW = (
        D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT + 1), D3D12_INDIRECT_ARGUMENT_TYPE_SHADER_RESOURCE_VIEW = (
        D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT_BUFFER_VIEW + 1), D3D12_INDIRECT_ARGUMENT_TYPE_UNORDERED_ACCESS_VIEW = (
        D3D12_INDIRECT_ARGUMENT_TYPE_SHADER_RESOURCE_VIEW + 1)
  D3D12_INDIRECT_ARGUMENT_DESC* = object
    Type*: D3D12_INDIRECT_ARGUMENT_TYPE
    ano_13459682869932804849*: INNER_C_UNION_1301674651468563092

  D3D12_COMMAND_SIGNATURE_DESC* = object
    ByteStride*: UINT
    NumArgumentDescs*: UINT
    pArgumentDescs*: ptr D3D12_INDIRECT_ARGUMENT_DESC
    NodeMask*: UINT





type
  ID3D12PageableVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12Pageable; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12Pageable): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12Pageable): ULONG {.stdcall.}
    GetPrivateData*: proc (This: ptr ID3D12Pageable; guid: ptr GUID;
                           pDataSize: ptr UINT; pData: pointer): HRESULT {.
        stdcall.}
    SetPrivateData*: proc (This: ptr ID3D12Pageable; guid: ptr GUID;
                           DataSize: UINT; pData: pointer): HRESULT {.stdcall.}
    SetPrivateDataInterface*: proc (This: ptr ID3D12Pageable; guid: ptr GUID;
                                    pData: ptr Unknwn.IUnknown): HRESULT {.stdcall.}
    SetName*: proc (This: ptr ID3D12Pageable; Name: LPCWSTR): HRESULT {.stdcall.}
    GetDevice*: proc (This: ptr ID3D12Pageable; riid: ptr IID;
                      ppvDevice: ptr pointer): HRESULT {.stdcall.}

  ID3D12Pageable* = object
    lpVtbl*: ptr ID3D12PageableVtbl


# interface ID3D12Heap
# [unique][local][object][uuid]


type
  ID3D12HeapVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12Heap; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12Heap): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12Heap): ULONG {.stdcall.}
    GetPrivateData*: proc (This: ptr ID3D12Heap; guid: ptr GUID;
                           pDataSize: ptr UINT; pData: pointer): HRESULT {.
        stdcall.}
    SetPrivateData*: proc (This: ptr ID3D12Heap; guid: ptr GUID; DataSize: UINT;
                           pData: pointer): HRESULT {.stdcall.}
    SetPrivateDataInterface*: proc (This: ptr ID3D12Heap; guid: ptr GUID;
                                    pData: ptr Unknwn.IUnknown): HRESULT {.stdcall.}
    SetName*: proc (This: ptr ID3D12Heap; Name: LPCWSTR): HRESULT {.stdcall.}
    GetDevice*: proc (This: ptr ID3D12Heap; riid: ptr IID;
                      ppvDevice: ptr pointer): HRESULT {.stdcall.}
    GetDesc*: proc (This: ptr ID3D12Heap): D3D12_HEAP_DESC {.stdcall.}

  ID3D12Heap* = object
    lpVtbl*: ptr ID3D12HeapVtbl


# interface ID3D12Resource
# [unique][local][object][uuid]




# interface ID3D12CommandAllocator
# [unique][local][object][uuid]


type
  ID3D12CommandAllocatorVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12CommandAllocator; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12CommandAllocator): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12CommandAllocator): ULONG {.stdcall.}
    GetPrivateData*: proc (This: ptr ID3D12CommandAllocator; guid: ptr GUID;
                           pDataSize: ptr UINT; pData: pointer): HRESULT {.
        stdcall.}
    SetPrivateData*: proc (This: ptr ID3D12CommandAllocator; guid: ptr GUID;
                           DataSize: UINT; pData: pointer): HRESULT {.stdcall.}
    SetPrivateDataInterface*: proc (This: ptr ID3D12CommandAllocator;
                                    guid: ptr GUID; pData: ptr Unknwn.IUnknown): HRESULT {.
        stdcall.}
    SetName*: proc (This: ptr ID3D12CommandAllocator; Name: LPCWSTR): HRESULT {.
        stdcall.}
    GetDevice*: proc (This: ptr ID3D12CommandAllocator; riid: ptr IID;
                      ppvDevice: ptr pointer): HRESULT {.stdcall.}
    Reset*: proc (This: ptr ID3D12CommandAllocator): HRESULT {.stdcall.}

  ID3D12CommandAllocator* = object
    lpVtbl*: ptr ID3D12CommandAllocatorVtbl


# interface ID3D12Fence
# [unique][local][object][uuid]


type
  ID3D12FenceVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12Fence; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12Fence): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12Fence): ULONG {.stdcall.}
    GetPrivateData*: proc (This: ptr ID3D12Fence; guid: ptr GUID;
                           pDataSize: ptr UINT; pData: pointer): HRESULT {.
        stdcall.}
    SetPrivateData*: proc (This: ptr ID3D12Fence; guid: ptr GUID;
                           DataSize: UINT; pData: pointer): HRESULT {.stdcall.}
    SetPrivateDataInterface*: proc (This: ptr ID3D12Fence; guid: ptr GUID;
                                    pData: ptr Unknwn.IUnknown): HRESULT {.stdcall.}
    SetName*: proc (This: ptr ID3D12Fence; Name: LPCWSTR): HRESULT {.stdcall.}
    GetDevice*: proc (This: ptr ID3D12Fence; riid: ptr IID;
                      ppvDevice: ptr pointer): HRESULT {.stdcall.}
    GetCompletedValue*: proc (This: ptr ID3D12Fence): UINT64 {.stdcall.}
    SetEventOnCompletion*: proc (This: ptr ID3D12Fence; Value: UINT64;
                                 hEvent: HANDLE): HRESULT {.stdcall.}
    Signal*: proc (This: ptr ID3D12Fence; Value: UINT64): HRESULT {.stdcall.}

  ID3D12Fence* = object
    lpVtbl*: ptr ID3D12FenceVtbl


# interface ID3D12PipelineState
# [unique][local][object][uuid]


type
  ID3D12PipelineStateVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12PipelineState; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12PipelineState): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12PipelineState): ULONG {.stdcall.}
    GetPrivateData*: proc (This: ptr ID3D12PipelineState; guid: ptr GUID;
                           pDataSize: ptr UINT; pData: pointer): HRESULT {.
        stdcall.}
    SetPrivateData*: proc (This: ptr ID3D12PipelineState; guid: ptr GUID;
                           DataSize: UINT; pData: pointer): HRESULT {.stdcall.}
    SetPrivateDataInterface*: proc (This: ptr ID3D12PipelineState;
                                    guid: ptr GUID; pData: ptr Unknwn.IUnknown): HRESULT {.
        stdcall.}
    SetName*: proc (This: ptr ID3D12PipelineState; Name: LPCWSTR): HRESULT {.
        stdcall.}
    GetDevice*: proc (This: ptr ID3D12PipelineState; riid: ptr IID;
                      ppvDevice: ptr pointer): HRESULT {.stdcall.}
    GetCachedBlob*: proc (This: ptr ID3D12PipelineState;
                          ppBlob: ptr ptr ID3DBlob): HRESULT {.stdcall.}

  ID3D12PipelineState* = object
    lpVtbl*: ptr ID3D12PipelineStateVtbl


# interface ID3D12DescriptorHeap
# [unique][local][object][uuid]


type
  ID3D12DescriptorHeapVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12DescriptorHeap; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12DescriptorHeap): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12DescriptorHeap): ULONG {.stdcall.}
    GetPrivateData*: proc (This: ptr ID3D12DescriptorHeap; guid: ptr GUID;
                           pDataSize: ptr UINT; pData: pointer): HRESULT {.
        stdcall.}
    SetPrivateData*: proc (This: ptr ID3D12DescriptorHeap; guid: ptr GUID;
                           DataSize: UINT; pData: pointer): HRESULT {.stdcall.}
    SetPrivateDataInterface*: proc (This: ptr ID3D12DescriptorHeap;
                                    guid: ptr GUID; pData: ptr Unknwn.IUnknown): HRESULT {.
        stdcall.}
    SetName*: proc (This: ptr ID3D12DescriptorHeap; Name: LPCWSTR): HRESULT {.
        stdcall.}
    GetDevice*: proc (This: ptr ID3D12DescriptorHeap; riid: ptr IID;
                      ppvDevice: ptr pointer): HRESULT {.stdcall.}
    GetDesc*: proc (This: ptr ID3D12DescriptorHeap): D3D12_DESCRIPTOR_HEAP_DESC {.
        stdcall.}
    # these have a different signature from the ones in MSFT headers because of a bug
    # in the microsoft IDL compiler
    GetCPUDescriptorHandleForHeapStart*: proc (This: ptr ID3D12DescriptorHeap, outVal: ptr D3D12_CPU_DESCRIPTOR_HANDLE): ptr D3D12_CPU_DESCRIPTOR_HANDLE {.
        stdcall.}
    GetGPUDescriptorHandleForHeapStart*: proc (This: ptr ID3D12DescriptorHeap, outVal: ptr D3D12_GPU_DESCRIPTOR_HANDLE): ptr D3D12_GPU_DESCRIPTOR_HANDLE {.
        stdcall.}

  ID3D12DescriptorHeap* = object
    lpVtbl*: ptr ID3D12DescriptorHeapVtbl


# interface ID3D12QueryHeap
# [unique][local][object][uuid]

type
  ID3D12QueryHeapVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12QueryHeap; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12QueryHeap): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12QueryHeap): ULONG {.stdcall.}
    GetPrivateData*: proc (This: ptr ID3D12QueryHeap; guid: ptr GUID;
                           pDataSize: ptr UINT; pData: pointer): HRESULT {.
        stdcall.}
    SetPrivateData*: proc (This: ptr ID3D12QueryHeap; guid: ptr GUID;
                           DataSize: UINT; pData: pointer): HRESULT {.stdcall.}
    SetPrivateDataInterface*: proc (This: ptr ID3D12QueryHeap; guid: ptr GUID;
                                    pData: ptr Unknwn.IUnknown): HRESULT {.stdcall.}
    SetName*: proc (This: ptr ID3D12QueryHeap; Name: LPCWSTR): HRESULT {.stdcall.}
    GetDevice*: proc (This: ptr ID3D12QueryHeap; riid: ptr IID;
                      ppvDevice: ptr pointer): HRESULT {.stdcall.}

  ID3D12QueryHeap* = object
    lpVtbl*: ptr ID3D12QueryHeapVtbl


# interface ID3D12CommandSignature
# [unique][local][object][uuid]


type
  ID3D12CommandSignatureVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12CommandSignature; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12CommandSignature): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12CommandSignature): ULONG {.stdcall.}
    GetPrivateData*: proc (This: ptr ID3D12CommandSignature; guid: ptr GUID;
                           pDataSize: ptr UINT; pData: pointer): HRESULT {.
        stdcall.}
    SetPrivateData*: proc (This: ptr ID3D12CommandSignature; guid: ptr GUID;
                           DataSize: UINT; pData: pointer): HRESULT {.stdcall.}
    SetPrivateDataInterface*: proc (This: ptr ID3D12CommandSignature;
                                    guid: ptr GUID; pData: ptr Unknwn.IUnknown): HRESULT {.
        stdcall.}
    SetName*: proc (This: ptr ID3D12CommandSignature; Name: LPCWSTR): HRESULT {.
        stdcall.}
    GetDevice*: proc (This: ptr ID3D12CommandSignature; riid: ptr IID;
                      ppvDevice: ptr pointer): HRESULT {.stdcall.}

  ID3D12CommandSignature* = object
    lpVtbl*: ptr ID3D12CommandSignatureVtbl


# interface ID3D12CommandList
# [unique][local][object][uuid]

type
  ID3D12CommandListVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12CommandList; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12CommandList): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12CommandList): ULONG {.stdcall.}
    GetPrivateData*: proc (This: ptr ID3D12CommandList; guid: ptr GUID;
                           pDataSize: ptr UINT; pData: pointer): HRESULT {.
        stdcall.}
    SetPrivateData*: proc (This: ptr ID3D12CommandList; guid: ptr GUID;
                           DataSize: UINT; pData: pointer): HRESULT {.stdcall.}
    SetPrivateDataInterface*: proc (This: ptr ID3D12CommandList; guid: ptr GUID;
                                    pData: ptr Unknwn.IUnknown): HRESULT {.stdcall.}
    SetName*: proc (This: ptr ID3D12CommandList; Name: LPCWSTR): HRESULT {.
        stdcall.}
    GetDevice*: proc (This: ptr ID3D12CommandList; riid: ptr IID;
                      ppvDevice: ptr pointer): HRESULT {.stdcall.}
    GetType*: proc (This: ptr ID3D12CommandList): D3D12_COMMAND_LIST_TYPE {.
        stdcall.}

  ID3D12CommandList* = object
    lpVtbl*: ptr ID3D12CommandListVtbl


# interface ID3D12GraphicsCommandList
# [unique][local][object][uuid]


type
  ID3D12GraphicsCommandListVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12GraphicsCommandList; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12GraphicsCommandList): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12GraphicsCommandList): ULONG {.stdcall.}
    GetPrivateData*: proc (This: ptr ID3D12GraphicsCommandList; guid: ptr GUID;
                           pDataSize: ptr UINT; pData: pointer): HRESULT {.
        stdcall.}
    SetPrivateData*: proc (This: ptr ID3D12GraphicsCommandList; guid: ptr GUID;
                           DataSize: UINT; pData: pointer): HRESULT {.stdcall.}
    SetPrivateDataInterface*: proc (This: ptr ID3D12GraphicsCommandList;
                                    guid: ptr GUID; pData: ptr Unknwn.IUnknown): HRESULT {.
        stdcall.}
    SetName*: proc (This: ptr ID3D12GraphicsCommandList; Name: LPCWSTR): HRESULT {.
        stdcall.}
    GetDevice*: proc (This: ptr ID3D12GraphicsCommandList; riid: ptr IID;
                      ppvDevice: ptr pointer): HRESULT {.stdcall.}
    GetType*: proc (This: ptr ID3D12GraphicsCommandList): D3D12_COMMAND_LIST_TYPE {.
        stdcall.}
    Close*: proc (This: ptr ID3D12GraphicsCommandList): HRESULT {.stdcall.}
    Reset*: proc (This: ptr ID3D12GraphicsCommandList;
                  pAllocator: ptr ID3D12CommandAllocator;
                  pInitialState: ptr ID3D12PipelineState): HRESULT {.stdcall.}
    ClearState*: proc (This: ptr ID3D12GraphicsCommandList;
                       pPipelineState: ptr ID3D12PipelineState) {.stdcall.}
    DrawInstanced*: proc (This: ptr ID3D12GraphicsCommandList;
                          VertexCountPerInstance: UINT; InstanceCount: UINT;
                          StartVertexLocation: UINT; StartInstanceLocation: UINT) {.
        stdcall.}
    DrawIndexedInstanced*: proc (This: ptr ID3D12GraphicsCommandList;
                                 IndexCountPerInstance: UINT;
                                 InstanceCount: UINT; StartIndexLocation: UINT;
                                 BaseVertexLocation: INT;
                                 StartInstanceLocation: UINT) {.stdcall.}
    Dispatch*: proc (This: ptr ID3D12GraphicsCommandList;
                     ThreadGroupCountX: UINT; ThreadGroupCountY: UINT;
                     ThreadGroupCountZ: UINT) {.stdcall.}
    CopyBufferRegion*: proc (This: ptr ID3D12GraphicsCommandList;
                             pDstBuffer: ptr ID3D12Resource; DstOffset: UINT64;
                             pSrcBuffer: ptr ID3D12Resource; SrcOffset: UINT64;
                             NumBytes: UINT64) {.stdcall.}
    CopyTextureRegion*: proc (This: ptr ID3D12GraphicsCommandList;
                              pDst: ptr D3D12_TEXTURE_COPY_LOCATION; DstX: UINT;
                              DstY: UINT; DstZ: UINT;
                              pSrc: ptr D3D12_TEXTURE_COPY_LOCATION;
                              pSrcBox: ptr D3D12_BOX) {.stdcall.}
    CopyResource*: proc (This: ptr ID3D12GraphicsCommandList;
                         pDstResource: ptr ID3D12Resource;
                         pSrcResource: ptr ID3D12Resource) {.stdcall.}
    CopyTiles*: proc (This: ptr ID3D12GraphicsCommandList;
                      pTiledResource: ptr ID3D12Resource;
        pTileRegionStartCoordinate: ptr D3D12_TILED_RESOURCE_COORDINATE;
                      pTileRegionSize: ptr D3D12_TILE_REGION_SIZE;
                      pBuffer: ptr ID3D12Resource;
                      BufferStartOffsetInBytes: UINT64;
                      Flags: D3D12_TILE_COPY_FLAGS) {.stdcall.}
    ResolveSubresource*: proc (This: ptr ID3D12GraphicsCommandList;
                               pDstResource: ptr ID3D12Resource;
                               DstSubresource: UINT;
                               pSrcResource: ptr ID3D12Resource;
                               SrcSubresource: UINT; Format: DXGI_FORMAT) {.
        stdcall.}
    IASetPrimitiveTopology*: proc (This: ptr ID3D12GraphicsCommandList;
                                   PrimitiveTopology: D3D12_PRIMITIVE_TOPOLOGY) {.
        stdcall.}
    RSSetViewports*: proc (This: ptr ID3D12GraphicsCommandList;
                           NumViewports: UINT; pViewports: ptr D3D12_VIEWPORT) {.
        stdcall.}
    RSSetScissorRects*: proc (This: ptr ID3D12GraphicsCommandList;
                              NumRects: UINT; pRects: ptr D3D12_RECT) {.stdcall.}
    OMSetBlendFactor*: proc (This: ptr ID3D12GraphicsCommandList;
                             BlendFactor: array[4, FLOAT]) {.stdcall.}
    OMSetStencilRef*: proc (This: ptr ID3D12GraphicsCommandList;
                            StencilRef: UINT) {.stdcall.}
    SetPipelineState*: proc (This: ptr ID3D12GraphicsCommandList;
                             pPipelineState: ptr ID3D12PipelineState) {.stdcall.}
    ResourceBarrier*: proc (This: ptr ID3D12GraphicsCommandList;
                            NumBarriers: UINT;
                            pBarriers: ptr D3D12_RESOURCE_BARRIER) {.stdcall.}
    ExecuteBundle*: proc (This: ptr ID3D12GraphicsCommandList;
                          pCommandList: ptr ID3D12GraphicsCommandList) {.stdcall.}
    SetDescriptorHeaps*: proc (This: ptr ID3D12GraphicsCommandList;
                               NumDescriptorHeaps: UINT;
                               ppDescriptorHeaps: ptr ptr ID3D12DescriptorHeap) {.
        stdcall.}
    SetComputeRootSignature*: proc (This: ptr ID3D12GraphicsCommandList;
                                    pRootSignature: ptr ID3D12RootSignature) {.
        stdcall.}
    SetGraphicsRootSignature*: proc (This: ptr ID3D12GraphicsCommandList;
                                     pRootSignature: ptr ID3D12RootSignature) {.
        stdcall.}
    SetComputeRootDescriptorTable*: proc (This: ptr ID3D12GraphicsCommandList;
        RootParameterIndex: UINT; BaseDescriptor: D3D12_GPU_DESCRIPTOR_HANDLE) {.
        stdcall.}
    SetGraphicsRootDescriptorTable*: proc (This: ptr ID3D12GraphicsCommandList;
        RootParameterIndex: UINT; BaseDescriptor: D3D12_GPU_DESCRIPTOR_HANDLE) {.
        stdcall.}
    SetComputeRoot32BitConstant*: proc (This: ptr ID3D12GraphicsCommandList;
                                        RootParameterIndex: UINT; SrcData: UINT;
                                        DestOffsetIn32BitValues: UINT) {.stdcall.}
    SetGraphicsRoot32BitConstant*: proc (This: ptr ID3D12GraphicsCommandList;
        RootParameterIndex: UINT; SrcData: UINT; DestOffsetIn32BitValues: UINT) {.
        stdcall.}
    SetComputeRoot32BitConstants*: proc (This: ptr ID3D12GraphicsCommandList;
        RootParameterIndex: UINT; Num32BitValuesToSet: UINT; pSrcData: pointer;
        DestOffsetIn32BitValues: UINT) {.stdcall.}
    SetGraphicsRoot32BitConstants*: proc (This: ptr ID3D12GraphicsCommandList;
        RootParameterIndex: UINT; Num32BitValuesToSet: UINT; pSrcData: pointer;
        DestOffsetIn32BitValues: UINT) {.stdcall.}
    SetComputeRootConstantBufferView*: proc (
        This: ptr ID3D12GraphicsCommandList; RootParameterIndex: UINT;
        BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS) {.stdcall.}
    SetGraphicsRootConstantBufferView*: proc (
        This: ptr ID3D12GraphicsCommandList; RootParameterIndex: UINT;
        BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS) {.stdcall.}
    SetComputeRootShaderResourceView*: proc (
        This: ptr ID3D12GraphicsCommandList; RootParameterIndex: UINT;
        BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS) {.stdcall.}
    SetGraphicsRootShaderResourceView*: proc (
        This: ptr ID3D12GraphicsCommandList; RootParameterIndex: UINT;
        BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS) {.stdcall.}
    SetComputeRootUnorderedAccessView*: proc (
        This: ptr ID3D12GraphicsCommandList; RootParameterIndex: UINT;
        BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS) {.stdcall.}
    SetGraphicsRootUnorderedAccessView*: proc (
        This: ptr ID3D12GraphicsCommandList; RootParameterIndex: UINT;
        BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS) {.stdcall.}
    IASetIndexBuffer*: proc (This: ptr ID3D12GraphicsCommandList;
                             pView: ptr D3D12_INDEX_BUFFER_VIEW) {.stdcall.}
    IASetVertexBuffers*: proc (This: ptr ID3D12GraphicsCommandList;
                               StartSlot: UINT; NumViews: UINT;
                               pViews: ptr D3D12_VERTEX_BUFFER_VIEW) {.stdcall.}
    SOSetTargets*: proc (This: ptr ID3D12GraphicsCommandList; StartSlot: UINT;
                         NumViews: UINT;
                         pViews: ptr D3D12_STREAM_OUTPUT_BUFFER_VIEW) {.stdcall.}
    OMSetRenderTargets*: proc (This: ptr ID3D12GraphicsCommandList;
                               NumRenderTargetDescriptors: UINT;
        pRenderTargetDescriptors: ptr D3D12_CPU_DESCRIPTOR_HANDLE;
                               RTsSingleHandleToDescriptorRange: BOOL;
        pDepthStencilDescriptor: ptr D3D12_CPU_DESCRIPTOR_HANDLE) {.stdcall.}
    ClearDepthStencilView*: proc (This: ptr ID3D12GraphicsCommandList;
        DepthStencilView: D3D12_CPU_DESCRIPTOR_HANDLE;
                                  ClearFlags: D3D12_CLEAR_FLAGS; Depth: FLOAT;
                                  Stencil: UINT8; NumRects: UINT;
                                  pRects: ptr D3D12_RECT) {.stdcall.}
    ClearRenderTargetView*: proc (This: ptr ID3D12GraphicsCommandList;
        RenderTargetView: D3D12_CPU_DESCRIPTOR_HANDLE;
                                  ColorRGBA: array[4, FLOAT]; NumRects: UINT;
                                  pRects: ptr D3D12_RECT) {.stdcall.}
    ClearUnorderedAccessViewUint*: proc (This: ptr ID3D12GraphicsCommandList;
        ViewGPUHandleInCurrentHeap: D3D12_GPU_DESCRIPTOR_HANDLE;
        ViewCPUHandle: D3D12_CPU_DESCRIPTOR_HANDLE;
        pResource: ptr ID3D12Resource; Values: array[4, UINT]; NumRects: UINT;
        pRects: ptr D3D12_RECT) {.stdcall.}
    ClearUnorderedAccessViewFloat*: proc (This: ptr ID3D12GraphicsCommandList;
        ViewGPUHandleInCurrentHeap: D3D12_GPU_DESCRIPTOR_HANDLE;
        ViewCPUHandle: D3D12_CPU_DESCRIPTOR_HANDLE;
        pResource: ptr ID3D12Resource; Values: array[4, FLOAT]; NumRects: UINT;
        pRects: ptr D3D12_RECT) {.stdcall.}
    DiscardResource*: proc (This: ptr ID3D12GraphicsCommandList;
                            pResource: ptr ID3D12Resource;
                            pRegion: ptr D3D12_DISCARD_REGION) {.stdcall.}
    BeginQuery*: proc (This: ptr ID3D12GraphicsCommandList;
                       pQueryHeap: ptr ID3D12QueryHeap; Type: D3D12_QUERY_TYPE;
                       Index: UINT) {.stdcall.}
    EndQuery*: proc (This: ptr ID3D12GraphicsCommandList;
                     pQueryHeap: ptr ID3D12QueryHeap; Type: D3D12_QUERY_TYPE;
                     Index: UINT) {.stdcall.}
    ResolveQueryData*: proc (This: ptr ID3D12GraphicsCommandList;
                             pQueryHeap: ptr ID3D12QueryHeap;
                             Type: D3D12_QUERY_TYPE; StartIndex: UINT;
                             NumQueries: UINT;
                             pDestinationBuffer: ptr ID3D12Resource;
                             AlignedDestinationBufferOffset: UINT64) {.stdcall.}
    SetPredication*: proc (This: ptr ID3D12GraphicsCommandList;
                           pBuffer: ptr ID3D12Resource;
                           AlignedBufferOffset: UINT64;
                           Operation: D3D12_PREDICATION_OP) {.stdcall.}
    SetMarker*: proc (This: ptr ID3D12GraphicsCommandList; Metadata: UINT;
                      pData: pointer; Size: UINT) {.stdcall.}
    BeginEvent*: proc (This: ptr ID3D12GraphicsCommandList; Metadata: UINT;
                       pData: pointer; Size: UINT) {.stdcall.}
    EndEvent*: proc (This: ptr ID3D12GraphicsCommandList) {.stdcall.}
    ExecuteIndirect*: proc (This: ptr ID3D12GraphicsCommandList;
                            pCommandSignature: ptr ID3D12CommandSignature;
                            MaxCommandCount: UINT;
                            pArgumentBuffer: ptr ID3D12Resource;
                            ArgumentBufferOffset: UINT64;
                            pCountBuffer: ptr ID3D12Resource;
                            CountBufferOffset: UINT64) {.stdcall.}

  ID3D12GraphicsCommandList* = object
    lpVtbl*: ptr ID3D12GraphicsCommandListVtbl


# interface ID3D12CommandQueue
# [unique][local][object][uuid]


type
  ID3D12CommandQueueVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12CommandQueue; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12CommandQueue): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12CommandQueue): ULONG {.stdcall.}
    GetPrivateData*: proc (This: ptr ID3D12CommandQueue; guid: ptr GUID;
                           pDataSize: ptr UINT; pData: pointer): HRESULT {.
        stdcall.}
    SetPrivateData*: proc (This: ptr ID3D12CommandQueue; guid: ptr GUID;
                           DataSize: UINT; pData: pointer): HRESULT {.stdcall.}
    SetPrivateDataInterface*: proc (This: ptr ID3D12CommandQueue;
                                    guid: ptr GUID; pData: ptr Unknwn.IUnknown): HRESULT {.
        stdcall.}
    SetName*: proc (This: ptr ID3D12CommandQueue; Name: LPCWSTR): HRESULT {.
        stdcall.}
    GetDevice*: proc (This: ptr ID3D12CommandQueue; riid: ptr IID;
                      ppvDevice: ptr pointer): HRESULT {.stdcall.}
    UpdateTileMappings*: proc (This: ptr ID3D12CommandQueue;
                               pResource: ptr ID3D12Resource;
                               NumResourceRegions: UINT;
        pResourceRegionStartCoordinates: ptr D3D12_TILED_RESOURCE_COORDINATE;
        pResourceRegionSizes: ptr D3D12_TILE_REGION_SIZE; pHeap: ptr ID3D12Heap;
                               NumRanges: UINT;
                               pRangeFlags: ptr D3D12_TILE_RANGE_FLAGS;
                               pHeapRangeStartOffsets: ptr UINT;
                               pRangeTileCounts: ptr UINT;
                               Flags: D3D12_TILE_MAPPING_FLAGS) {.stdcall.}
    CopyTileMappings*: proc (This: ptr ID3D12CommandQueue;
                             pDstResource: ptr ID3D12Resource;
        pDstRegionStartCoordinate: ptr D3D12_TILED_RESOURCE_COORDINATE;
                             pSrcResource: ptr ID3D12Resource;
        pSrcRegionStartCoordinate: ptr D3D12_TILED_RESOURCE_COORDINATE;
                             pRegionSize: ptr D3D12_TILE_REGION_SIZE;
                             Flags: D3D12_TILE_MAPPING_FLAGS) {.stdcall.}
    ExecuteCommandLists*: proc (This: ptr ID3D12CommandQueue;
                                NumCommandLists: UINT;
                                ppCommandLists: ptr ptr ID3D12CommandList) {.
        stdcall.}
    SetMarker*: proc (This: ptr ID3D12CommandQueue; Metadata: UINT;
                      pData: pointer; Size: UINT) {.stdcall.}
    BeginEvent*: proc (This: ptr ID3D12CommandQueue; Metadata: UINT;
                       pData: pointer; Size: UINT) {.stdcall.}
    EndEvent*: proc (This: ptr ID3D12CommandQueue) {.stdcall.}
    Signal*: proc (This: ptr ID3D12CommandQueue; pFence: ptr ID3D12Fence;
                   Value: UINT64): HRESULT {.stdcall.}
    Wait*: proc (This: ptr ID3D12CommandQueue; pFence: ptr ID3D12Fence;
                 Value: UINT64): HRESULT {.stdcall.}
    GetTimestampFrequency*: proc (This: ptr ID3D12CommandQueue;
                                  pFrequency: ptr UINT64): HRESULT {.stdcall.}
    GetClockCalibration*: proc (This: ptr ID3D12CommandQueue;
                                pGpuTimestamp: ptr UINT64;
                                pCpuTimestamp: ptr UINT64): HRESULT {.stdcall.}
    GetDesc*: proc (This: ptr ID3D12CommandQueue): D3D12_COMMAND_QUEUE_DESC {.
        stdcall.}

  ID3D12CommandQueue* = object
    lpVtbl*: ptr ID3D12CommandQueueVtbl


# interface ID3D12Device
# [unique][local][object][uuid]

type
  ID3D12DeviceVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12Device; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12Device): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12Device): ULONG {.stdcall.}
    GetPrivateData*: proc (This: ptr ID3D12Device; guid: ptr GUID;
                           pDataSize: ptr UINT; pData: pointer): HRESULT {.
        stdcall.}
    SetPrivateData*: proc (This: ptr ID3D12Device; guid: ptr GUID;
                           DataSize: UINT; pData: pointer): HRESULT {.stdcall.}
    SetPrivateDataInterface*: proc (This: ptr ID3D12Device; guid: ptr GUID;
                                    pData: ptr Unknwn.IUnknown): HRESULT {.stdcall.}
    SetName*: proc (This: ptr ID3D12Device; Name: LPCWSTR): HRESULT {.stdcall.}
    GetNodeCount*: proc (This: ptr ID3D12Device): UINT {.stdcall.}
    CreateCommandQueue*: proc (This: ptr ID3D12Device;
                               pDesc: ptr D3D12_COMMAND_QUEUE_DESC;
                               riid: ptr IID; ppCommandQueue: ptr pointer): HRESULT {.
        stdcall.}
    CreateCommandAllocator*: proc (This: ptr ID3D12Device;
                                   `type`: D3D12_COMMAND_LIST_TYPE;
                                   riid: ptr IID;
                                   ppCommandAllocator: ptr pointer): HRESULT {.
        stdcall.}
    CreateGraphicsPipelineState*: proc (This: ptr ID3D12Device; pDesc: ptr D3D12_GRAPHICS_PIPELINE_STATE_DESC;
                                        riid: ptr IID;
                                        ppPipelineState: ptr pointer): HRESULT {.
        stdcall.}
    CreateComputePipelineState*: proc (This: ptr ID3D12Device; pDesc: ptr D3D12_COMPUTE_PIPELINE_STATE_DESC;
                                       riid: ptr IID;
                                       ppPipelineState: ptr pointer): HRESULT {.
        stdcall.}
    CreateCommandList*: proc (This: ptr ID3D12Device; nodeMask: UINT;
                              `type`: D3D12_COMMAND_LIST_TYPE;
                              pCommandAllocator: ptr ID3D12CommandAllocator;
                              pInitialState: ptr ID3D12PipelineState;
                              riid: ptr IID; ppCommandList: ptr pointer): HRESULT {.
        stdcall.}
    CheckFeatureSupport*: proc (This: ptr ID3D12Device; Feature: D3D12_FEATURE;
                                pFeatureSupportData: pointer;
                                FeatureSupportDataSize: UINT): HRESULT {.stdcall.}
    CreateDescriptorHeap*: proc (This: ptr ID3D12Device; pDescriptorHeapDesc: ptr D3D12_DESCRIPTOR_HEAP_DESC;
                                 riid: ptr IID; ppvHeap: ptr pointer): HRESULT {.
        stdcall.}
    GetDescriptorHandleIncrementSize*: proc (This: ptr ID3D12Device;
        DescriptorHeapType: D3D12_DESCRIPTOR_HEAP_TYPE): UINT {.stdcall.}
    CreateRootSignature*: proc (This: ptr ID3D12Device; nodeMask: UINT;
                                pBlobWithRootSignature: pointer;
                                blobLengthInBytes: SIZE_T; riid: ptr IID;
                                ppvRootSignature: ptr pointer): HRESULT {.
        stdcall.}
    CreateConstantBufferView*: proc (This: ptr ID3D12Device; pDesc: ptr D3D12_CONSTANT_BUFFER_VIEW_DESC;
        DestDescriptor: D3D12_CPU_DESCRIPTOR_HANDLE) {.stdcall.}
    CreateShaderResourceView*: proc (This: ptr ID3D12Device;
                                     pResource: ptr ID3D12Resource; pDesc: ptr D3D12_SHADER_RESOURCE_VIEW_DESC;
        DestDescriptor: D3D12_CPU_DESCRIPTOR_HANDLE) {.stdcall.}
    CreateUnorderedAccessView*: proc (This: ptr ID3D12Device;
                                      pResource: ptr ID3D12Resource;
                                      pCounterResource: ptr ID3D12Resource;
        pDesc: ptr D3D12_UNORDERED_ACCESS_VIEW_DESC; DestDescriptor: D3D12_CPU_DESCRIPTOR_HANDLE) {.
        stdcall.}
    CreateRenderTargetView*: proc (This: ptr ID3D12Device;
                                   pResource: ptr ID3D12Resource;
                                   pDesc: ptr D3D12_RENDER_TARGET_VIEW_DESC;
                                   DestDescriptor: D3D12_CPU_DESCRIPTOR_HANDLE) {.
        stdcall.}
    CreateDepthStencilView*: proc (This: ptr ID3D12Device;
                                   pResource: ptr ID3D12Resource;
                                   pDesc: ptr D3D12_DEPTH_STENCIL_VIEW_DESC;
                                   DestDescriptor: D3D12_CPU_DESCRIPTOR_HANDLE) {.
        stdcall.}
    CreateSampler*: proc (This: ptr ID3D12Device; pDesc: ptr D3D12_SAMPLER_DESC;
                          DestDescriptor: D3D12_CPU_DESCRIPTOR_HANDLE) {.stdcall.}
    CopyDescriptors*: proc (This: ptr ID3D12Device;
                            NumDestDescriptorRanges: UINT;
        pDestDescriptorRangeStarts: ptr D3D12_CPU_DESCRIPTOR_HANDLE;
                            pDestDescriptorRangeSizes: ptr UINT;
                            NumSrcDescriptorRanges: UINT;
        pSrcDescriptorRangeStarts: ptr D3D12_CPU_DESCRIPTOR_HANDLE;
                            pSrcDescriptorRangeSizes: ptr UINT;
                            DescriptorHeapsType: D3D12_DESCRIPTOR_HEAP_TYPE) {.
        stdcall.}
    CopyDescriptorsSimple*: proc (This: ptr ID3D12Device; NumDescriptors: UINT;
        DestDescriptorRangeStart: D3D12_CPU_DESCRIPTOR_HANDLE;
        SrcDescriptorRangeStart: D3D12_CPU_DESCRIPTOR_HANDLE;
        DescriptorHeapsType: D3D12_DESCRIPTOR_HEAP_TYPE) {.stdcall.}
    GetResourceAllocationInfo*: proc (This: ptr ID3D12Device; visibleMask: UINT;
                                      numResourceDescs: UINT;
                                      pResourceDescs: ptr D3D12_RESOURCE_DESC): D3D12_RESOURCE_ALLOCATION_INFO {.
        stdcall.}
    GetCustomHeapProperties*: proc (This: ptr ID3D12Device; nodeMask: UINT;
                                    heapType: D3D12_HEAP_TYPE): D3D12_HEAP_PROPERTIES {.
        stdcall.}
    CreateCommittedResource*: proc (This: ptr ID3D12Device;
                                    pHeapProperties: ptr D3D12_HEAP_PROPERTIES;
                                    HeapFlags: D3D12_HEAP_FLAGS;
                                    pResourceDesc: ptr D3D12_RESOURCE_DESC;
        InitialResourceState: D3D12_RESOURCE_STATES; pOptimizedClearValue: ptr D3D12_CLEAR_VALUE;
                                    riidResource: ptr IID;
                                    ppvResource: ptr pointer): HRESULT {.stdcall.}
    CreateHeap*: proc (This: ptr ID3D12Device; pDesc: ptr D3D12_HEAP_DESC;
                       riid: ptr IID; ppvHeap: ptr pointer): HRESULT {.stdcall.}
    CreatePlacedResource*: proc (This: ptr ID3D12Device; pHeap: ptr ID3D12Heap;
                                 HeapOffset: UINT64;
                                 pDesc: ptr D3D12_RESOURCE_DESC;
                                 InitialState: D3D12_RESOURCE_STATES;
                                 pOptimizedClearValue: ptr D3D12_CLEAR_VALUE;
                                 riid: ptr IID; ppvResource: ptr pointer): HRESULT {.
        stdcall.}
    CreateReservedResource*: proc (This: ptr ID3D12Device;
                                   pDesc: ptr D3D12_RESOURCE_DESC;
                                   InitialState: D3D12_RESOURCE_STATES;
                                   pOptimizedClearValue: ptr D3D12_CLEAR_VALUE;
                                   riid: ptr IID; ppvResource: ptr pointer): HRESULT {.
        stdcall.}
    CreateSharedHandle*: proc (This: ptr ID3D12Device;
                               pObject: ptr ID3D12DeviceChild;
                               pAttributes: ptr SECURITY_ATTRIBUTES;
                               Access: DWORD; Name: LPCWSTR; pHandle: ptr HANDLE): HRESULT {.
        stdcall.}
    OpenSharedHandle*: proc (This: ptr ID3D12Device; NTHandle: HANDLE;
                             riid: ptr IID; ppvObj: ptr pointer): HRESULT {.
        stdcall.}
    OpenSharedHandleByName*: proc (This: ptr ID3D12Device; Name: LPCWSTR;
                                   Access: DWORD; pNTHandle: ptr HANDLE): HRESULT {.
        stdcall.}             # [annotation][out]
    MakeResident*: proc (This: ptr ID3D12Device; NumObjects: UINT;
                         ppObjects: ptr ptr ID3D12Pageable): HRESULT {.stdcall.}
    Evict*: proc (This: ptr ID3D12Device; NumObjects: UINT;
                  ppObjects: ptr ptr ID3D12Pageable): HRESULT {.stdcall.}
    CreateFence*: proc (This: ptr ID3D12Device; InitialValue: UINT64;
                        Flags: D3D12_FENCE_FLAGS; riid: ptr IID;
                        ppFence: ptr pointer): HRESULT {.stdcall.}
    GetDeviceRemovedReason*: proc (This: ptr ID3D12Device): HRESULT {.stdcall.}
    GetCopyableFootprints*: proc (This: ptr ID3D12Device;
                                  pResourceDesc: ptr D3D12_RESOURCE_DESC;
                                  FirstSubresource: UINT; NumSubresources: UINT;
                                  BaseOffset: UINT64; pLayouts: ptr D3D12_PLACED_SUBRESOURCE_FOOTPRINT;
                                  pNumRows: ptr UINT;
                                  pRowSizeInBytes: ptr UINT64;
                                  pTotalBytes: ptr UINT64) {.stdcall.}
    CreateQueryHeap*: proc (This: ptr ID3D12Device;
                            pDesc: ptr D3D12_QUERY_HEAP_DESC; riid: ptr IID;
                            ppvHeap: ptr pointer): HRESULT {.stdcall.}
    SetStablePowerState*: proc (This: ptr ID3D12Device; Enable: BOOL): HRESULT {.
        stdcall.}
    CreateCommandSignature*: proc (This: ptr ID3D12Device;
                                   pDesc: ptr D3D12_COMMAND_SIGNATURE_DESC;
                                   pRootSignature: ptr ID3D12RootSignature;
                                   riid: ptr IID;
                                   ppvCommandSignature: ptr pointer): HRESULT {.
        stdcall.}
    GetResourceTiling*: proc (This: ptr ID3D12Device;
                              pTiledResource: ptr ID3D12Resource;
                              pNumTilesForEntireResource: ptr UINT;
                              pPackedMipDesc: ptr D3D12_PACKED_MIP_INFO;
        pStandardTileShapeForNonPackedMips: ptr D3D12_TILE_SHAPE;
                              pNumSubresourceTilings: ptr UINT;
                              FirstSubresourceTilingToGet: UINT;
        pSubresourceTilingsForNonPackedMips: ptr D3D12_SUBRESOURCE_TILING) {.
        stdcall.}
    GetAdapterLuid*: proc (This: ptr ID3D12Device): LUID {.stdcall.}

  ID3D12Device* = object
    lpVtbl*: ptr ID3D12DeviceVtbl


# interface __MIDL_itf_d3d12_0000_0017
# [local]

type
  D3D12_SUBRESOURCE_DATA* = object
    pData*: pointer
    RowPitch*: LONG_PTR
    SlicePitch*: LONG_PTR

  D3D12_MEMCPY_DEST* = object
    pData*: pointer
    RowPitch*: SIZE_T
    SlicePitch*: SIZE_T


#-------------------------------------------------------------------------------------
#
#  Copyright (c) Microsoft Corporation
#
# -------------------------------------------------------------------------------------
# this ALWAYS GENERATED file contains the definitions for the interfaces
# File created by MIDL compiler version 8.00.0613
# verify that the <rpcndr.h> version is high enough to compile this file
# verify that the <rpcsal.h> version is high enough to compile this file

# Forward Declarations


# header files for imported files

#-------------------------------------------------------------------------------------
#
#  Copyright (c) Microsoft Corporation
#
# -------------------------------------------------------------------------------------
# this ALWAYS GENERATED file contains the definitions for the interfaces
# File created by MIDL compiler version 8.00.0613
# verify that the <rpcndr.h> version is high enough to compile this file
# verify that the <rpcsal.h> version is high enough to compile this file

# interface __MIDL_itf_d3d12sdklayers_0000_0000
# [local]


# interface ID3D12Debug
# [unique][local][object][uuid]

type
  ID3D12DebugVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12Debug; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12Debug): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12Debug): ULONG {.stdcall.}
    EnableDebugLayer*: proc (This: ptr ID3D12Debug) {.stdcall.}

  ID3D12Debug* = object
    lpVtbl*: ptr ID3D12DebugVtbl


# interface __MIDL_itf_d3d12sdklayers_0000_0001
# [local]

type
  D3D12_DEBUG_FEATURE* {.size: sizeof(cint).} = enum
    D3D12_DEBUG_FEATURE_NONE = 0,
    D3D12_DEBUG_FEATURE_TREAT_BUNDLE_AS_DRAW = 0x00000001,
    D3D12_DEBUG_FEATURE_TREAT_BUNDLE_AS_DISPATCH = 0x00000002


type
  D3D12_RLDO_FLAGS* {.size: sizeof(cint).} = enum
    D3D12_RLDO_NONE = 0, D3D12_RLDO_SUMMARY = 0x00000001,
    D3D12_RLDO_DETAIL = 0x00000002, D3D12_RLDO_IGNORE_INTERNAL = 0x00000004




type
  ID3D12DebugDeviceVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12DebugDevice; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12DebugDevice): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12DebugDevice): ULONG {.stdcall.}
    SetFeatureMask*: proc (This: ptr ID3D12DebugDevice;
                           Mask: D3D12_DEBUG_FEATURE): HRESULT {.stdcall.}
    GetFeatureMask*: proc (This: ptr ID3D12DebugDevice): D3D12_DEBUG_FEATURE {.
        stdcall.}
    ReportLiveDeviceObjects*: proc (This: ptr ID3D12DebugDevice;
                                    Flags: D3D12_RLDO_FLAGS): HRESULT {.stdcall.}

  ID3D12DebugDevice* = object
    lpVtbl*: ptr ID3D12DebugDeviceVtbl


# interface __MIDL_itf_d3d12sdklayers_0000_0002
# [local]


# interface ID3D12DebugCommandQueue
# [unique][local][object][uuid]

type
  ID3D12DebugCommandQueueVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12DebugCommandQueue; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12DebugCommandQueue): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12DebugCommandQueue): ULONG {.stdcall.}
    AssertResourceState*: proc (This: ptr ID3D12DebugCommandQueue;
                                pResource: ptr ID3D12Resource;
                                Subresource: UINT; State: UINT): BOOL {.stdcall.}

  ID3D12DebugCommandQueue* = object
    lpVtbl*: ptr ID3D12DebugCommandQueueVtbl


# interface ID3D12DebugCommandList
# [unique][local][object][uuid]


type
  ID3D12DebugCommandListVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12DebugCommandList; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12DebugCommandList): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12DebugCommandList): ULONG {.stdcall.}
    AssertResourceState*: proc (This: ptr ID3D12DebugCommandList;
                                pResource: ptr ID3D12Resource;
                                Subresource: UINT; State: UINT): BOOL {.stdcall.}
    SetFeatureMask*: proc (This: ptr ID3D12DebugCommandList;
                           Mask: D3D12_DEBUG_FEATURE): HRESULT {.stdcall.}
    GetFeatureMask*: proc (This: ptr ID3D12DebugCommandList): D3D12_DEBUG_FEATURE {.
        stdcall.}

  ID3D12DebugCommandList* = object
    lpVtbl*: ptr ID3D12DebugCommandListVtbl


# interface __MIDL_itf_d3d12sdklayers_0000_0004
# [local]

type
  D3D12_MESSAGE_CATEGORY* {.size: sizeof(cint).} = enum
    D3D12_MESSAGE_CATEGORY_APPLICATION_DEFINED = 0, D3D12_MESSAGE_CATEGORY_MISCELLANEOUS = (
        D3D12_MESSAGE_CATEGORY_APPLICATION_DEFINED + 1), D3D12_MESSAGE_CATEGORY_INITIALIZATION = (
        D3D12_MESSAGE_CATEGORY_MISCELLANEOUS + 1), D3D12_MESSAGE_CATEGORY_CLEANUP = (
        D3D12_MESSAGE_CATEGORY_INITIALIZATION + 1),
    D3D12_MESSAGE_CATEGORY_COMPILATION = (D3D12_MESSAGE_CATEGORY_CLEANUP + 1), D3D12_MESSAGE_CATEGORY_STATE_CREATION = (
        D3D12_MESSAGE_CATEGORY_COMPILATION + 1), D3D12_MESSAGE_CATEGORY_STATE_SETTING = (
        D3D12_MESSAGE_CATEGORY_STATE_CREATION + 1), D3D12_MESSAGE_CATEGORY_STATE_GETTING = (
        D3D12_MESSAGE_CATEGORY_STATE_SETTING + 1), D3D12_MESSAGE_CATEGORY_RESOURCE_MANIPULATION = (
        D3D12_MESSAGE_CATEGORY_STATE_GETTING + 1), D3D12_MESSAGE_CATEGORY_EXECUTION = (
        D3D12_MESSAGE_CATEGORY_RESOURCE_MANIPULATION + 1),
    D3D12_MESSAGE_CATEGORY_SHADER = (D3D12_MESSAGE_CATEGORY_EXECUTION + 1)
  D3D12_MESSAGE_SEVERITY* {.size: sizeof(cint).} = enum
    D3D12_MESSAGE_SEVERITY_CORRUPTION = 0,
    D3D12_MESSAGE_SEVERITY_ERROR = (D3D12_MESSAGE_SEVERITY_CORRUPTION + 1),
    D3D12_MESSAGE_SEVERITY_WARNING = (D3D12_MESSAGE_SEVERITY_ERROR + 1),
    D3D12_MESSAGE_SEVERITY_INFO = (D3D12_MESSAGE_SEVERITY_WARNING + 1),
    D3D12_MESSAGE_SEVERITY_MESSAGE = (D3D12_MESSAGE_SEVERITY_INFO + 1)
discard """
  D3D12_MESSAGE_ID* {.size: sizeof(cint).} = enum
    D3D12_MESSAGE_ID_UNKNOWN = 0,
    D3D12_MESSAGE_ID_STRING_FROM_APPLICATION = (D3D12_MESSAGE_ID_UNKNOWN + 1), D3D12_MESSAGE_ID_CORRUPTED_THIS = (
        D3D12_MESSAGE_ID_STRING_FROM_APPLICATION + 1), D3D12_MESSAGE_ID_CORRUPTED_PARAMETER1 = (
        D3D12_MESSAGE_ID_CORRUPTED_THIS + 1), D3D12_MESSAGE_ID_CORRUPTED_PARAMETER2 = (
        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER1 + 1), D3D12_MESSAGE_ID_CORRUPTED_PARAMETER3 = (
        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER2 + 1), D3D12_MESSAGE_ID_CORRUPTED_PARAMETER4 = (
        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER3 + 1), D3D12_MESSAGE_ID_CORRUPTED_PARAMETER5 = (
        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER4 + 1), D3D12_MESSAGE_ID_CORRUPTED_PARAMETER6 = (
        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER5 + 1), D3D12_MESSAGE_ID_CORRUPTED_PARAMETER7 = (
        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER6 + 1), D3D12_MESSAGE_ID_CORRUPTED_PARAMETER8 = (
        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER7 + 1), D3D12_MESSAGE_ID_CORRUPTED_PARAMETER9 = (
        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER8 + 1), D3D12_MESSAGE_ID_CORRUPTED_PARAMETER10 = (
        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER9 + 1), D3D12_MESSAGE_ID_CORRUPTED_PARAMETER11 = (
        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER10 + 1), D3D12_MESSAGE_ID_CORRUPTED_PARAMETER12 = (
        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER11 + 1), D3D12_MESSAGE_ID_CORRUPTED_PARAMETER13 = (
        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER12 + 1), D3D12_MESSAGE_ID_CORRUPTED_PARAMETER14 = (
        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER13 + 1), D3D12_MESSAGE_ID_CORRUPTED_PARAMETER15 = (
        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER14 + 1), D3D12_MESSAGE_ID_CORRUPTED_MULTITHREADING = (
        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER15 + 1), D3D12_MESSAGE_ID_MESSAGE_REPORTING_OUTOFMEMORY = (
        D3D12_MESSAGE_ID_CORRUPTED_MULTITHREADING + 1), D3D12_MESSAGE_ID_GETPRIVATEDATA_MOREDATA = (
        D3D12_MESSAGE_ID_MESSAGE_REPORTING_OUTOFMEMORY + 1), D3D12_MESSAGE_ID_SETPRIVATEDATA_INVALIDFREEDATA = (
        D3D12_MESSAGE_ID_GETPRIVATEDATA_MOREDATA + 1), D3D12_MESSAGE_ID_SETPRIVATEDATA_INVALIDIUNKNOWN = (
        D3D12_MESSAGE_ID_SETPRIVATEDATA_INVALIDFREEDATA + 1), D3D12_MESSAGE_ID_SETPRIVATEDATA_INVALIDFLAGS = (
        D3D12_MESSAGE_ID_SETPRIVATEDATA_INVALIDIUNKNOWN + 1), D3D12_MESSAGE_ID_SETPRIVATEDATA_CHANGINGPARAMS = (
        D3D12_MESSAGE_ID_SETPRIVATEDATA_INVALIDFLAGS + 1), D3D12_MESSAGE_ID_SETPRIVATEDATA_OUTOFMEMORY = (
        D3D12_MESSAGE_ID_SETPRIVATEDATA_CHANGINGPARAMS + 1), D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_UNRECOGNIZEDFORMAT = (
        D3D12_MESSAGE_ID_SETPRIVATEDATA_OUTOFMEMORY + 1), D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDESC = (
        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_UNRECOGNIZEDFORMAT + 1), D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFORMAT = (
        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDESC + 1), D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDVIDEOPLANESLICE = (
        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFORMAT + 1), D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDPLANESLICE = (
        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDVIDEOPLANESLICE + 1), D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDIMENSIONS = (
        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDPLANESLICE + 1), D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDRESOURCE = (
        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDIMENSIONS + 1), D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDARG_RETURN = (
        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDRESOURCE + 1), D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_OUTOFMEMORY_RETURN = (
        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDARG_RETURN + 1), D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_UNRECOGNIZEDFORMAT = (
        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_OUTOFMEMORY_RETURN + 1), D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_UNSUPPORTEDFORMAT = (
        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_UNRECOGNIZEDFORMAT + 1), D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDESC = (
        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_UNSUPPORTEDFORMAT + 1), D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDFORMAT = (
        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDESC + 1), D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDVIDEOPLANESLICE = (
        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDFORMAT + 1), D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDPLANESLICE = (
        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDVIDEOPLANESLICE + 1), D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDIMENSIONS = (
        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDPLANESLICE + 1), D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDRESOURCE = (
        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDIMENSIONS + 1), D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDARG_RETURN = (
        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDRESOURCE + 1), D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_OUTOFMEMORY_RETURN = (
        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDARG_RETURN + 1), D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_UNRECOGNIZEDFORMAT = (
        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_OUTOFMEMORY_RETURN + 1), D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDESC = (
        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_UNRECOGNIZEDFORMAT + 1), D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFORMAT = (
        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDESC + 1), D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDIMENSIONS = (
        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFORMAT + 1), D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDRESOURCE = (
        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDIMENSIONS + 1), D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDARG_RETURN = (
        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDRESOURCE + 1), D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_OUTOFMEMORY_RETURN = (
        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDARG_RETURN + 1), D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_OUTOFMEMORY = (
        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_OUTOFMEMORY_RETURN + 1), D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TOOMANYELEMENTS = (
        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_OUTOFMEMORY + 1), D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDFORMAT = (
        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TOOMANYELEMENTS + 1), D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INCOMPATIBLEFORMAT = (
        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDFORMAT + 1), D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOT = (
        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INCOMPATIBLEFORMAT + 1), D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDINPUTSLOTCLASS = (
        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOT + 1), D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_STEPRATESLOTCLASSMISMATCH = (
        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDINPUTSLOTCLASS + 1), D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOTCLASSCHANGE = (
        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_STEPRATESLOTCLASSMISMATCH + 1), D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSTEPRATECHANGE = (
        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOTCLASSCHANGE + 1), D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDALIGNMENT = (
        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSTEPRATECHANGE + 1), D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_DUPLICATESEMANTIC = (
        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDALIGNMENT + 1), D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_UNPARSEABLEINPUTSIGNATURE = (
        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_DUPLICATESEMANTIC + 1), D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_NULLSEMANTIC = (
        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_UNPARSEABLEINPUTSIGNATURE + 1), D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_MISSINGELEMENT = (
        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_NULLSEMANTIC + 1), D3D12_MESSAGE_ID_CREATEVERTEXSHADER_OUTOFMEMORY = (
        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_MISSINGELEMENT + 1), D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERBYTECODE = (
        D3D12_MESSAGE_ID_CREATEVERTEXSHADER_OUTOFMEMORY + 1), D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERTYPE = (
        D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERBYTECODE + 1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_OUTOFMEMORY = (
        D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERTYPE + 1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERBYTECODE = (
        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_OUTOFMEMORY + 1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERTYPE = (
        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERBYTECODE + 1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTOFMEMORY = (
        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERTYPE + 1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERBYTECODE = (
        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTOFMEMORY + 1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERTYPE = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERBYTECODE +
        1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMENTRIES = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERTYPE +
        1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSTREAMSTRIDEUNUSED = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMENTRIES +
        1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDDECL = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSTREAMSTRIDEUNUSED +
        1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_EXPECTEDDECL = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDDECL +
        1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSLOT0EXPECTED = (
        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_EXPECTEDDECL + 1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSLOT = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSLOT0EXPECTED +
        1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_ONLYONEELEMENTPERSLOT = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSLOT +
        1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCOMPONENTCOUNT = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_ONLYONEELEMENTPERSLOT +
        1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTARTCOMPONENTANDCOMPONENTCOUNT = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCOMPONENTCOUNT +
        1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDGAPDEFINITION = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTARTCOMPONENTANDCOMPONENTCOUNT +
        1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_REPEATEDOUTPUT = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDGAPDEFINITION +
        1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSTREAMSTRIDE = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_REPEATEDOUTPUT +
        1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGSEMANTIC = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSTREAMSTRIDE +
        1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MASKMISMATCH = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGSEMANTIC +
        1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_CANTHAVEONLYGAPS = (
        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MASKMISMATCH + 1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DECLTOOCOMPLEX = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_CANTHAVEONLYGAPS +
        1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGOUTPUTSIGNATURE = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DECLTOOCOMPLEX +
        1), D3D12_MESSAGE_ID_CREATEPIXELSHADER_OUTOFMEMORY = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGOUTPUTSIGNATURE +
        1), D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERBYTECODE = (
        D3D12_MESSAGE_ID_CREATEPIXELSHADER_OUTOFMEMORY + 1), D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERTYPE = (
        D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERBYTECODE + 1), D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFILLMODE = (
        D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERTYPE + 1), D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDCULLMODE = (
        D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFILLMODE + 1), D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDDEPTHBIASCLAMP = (
        D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDCULLMODE + 1), D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDSLOPESCALEDDEPTHBIAS = (
        D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDDEPTHBIASCLAMP + 1), D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_NULLDESC = (
        D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDSLOPESCALEDDEPTHBIAS + 1), D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHWRITEMASK = (
        D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_NULLDESC + 1), D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHFUNC = (
        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHWRITEMASK + 1), D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFAILOP = (
        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHFUNC + 1), D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILZFAILOP = (D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFAILOP +
        1), D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILPASSOP = (D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILZFAILOP +
        1), D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFUNC = (D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILPASSOP +
        1), D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFAILOP = (D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFUNC +
        1), D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILZFAILOP = (D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFAILOP +
        1), D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILPASSOP = (D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILZFAILOP +
        1), D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFUNC = (D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILPASSOP +
        1), D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_NULLDESC = (
        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFUNC + 1), D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLEND = (
        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_NULLDESC + 1), D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLEND = (
        D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLEND + 1), D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOP = (
        D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLEND + 1), D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLENDALPHA = (
        D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOP + 1), D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLENDALPHA = (
        D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLENDALPHA + 1), D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOPALPHA = (
        D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLENDALPHA + 1), D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDRENDERTARGETWRITEMASK = (
        D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOPALPHA + 1), D3D12_MESSAGE_ID_CREATEBLENDSTATE_NULLDESC = (
        D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDRENDERTARGETWRITEMASK + 1), D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDFILTER = (
        D3D12_MESSAGE_ID_CREATEBLENDSTATE_NULLDESC + 1), D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSU = (
        D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDFILTER + 1), D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSV = (
        D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSU + 1), D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSW = (
        D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSV + 1), D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMIPLODBIAS = (
        D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSW + 1), D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMAXANISOTROPY = (
        D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMIPLODBIAS + 1), D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDCOMPARISONFUNC = (
        D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMAXANISOTROPY + 1), D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMINLOD = (
        D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDCOMPARISONFUNC + 1), D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMAXLOD = (
        D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMINLOD + 1), D3D12_MESSAGE_ID_CREATESAMPLERSTATE_NULLDESC = (
        D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMAXLOD + 1), D3D12_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNRECOGNIZED = (
        D3D12_MESSAGE_ID_CREATESAMPLERSTATE_NULLDESC + 1), D3D12_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNDEFINED = (D3D12_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNRECOGNIZED +
        1), D3D12_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_INVALIDVIEWPORT = (
        D3D12_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNDEFINED + 1), D3D12_MESSAGE_ID_DEVICE_RSSETSCISSORRECTS_INVALIDSCISSOR = (
        D3D12_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_INVALIDVIEWPORT + 1), D3D12_MESSAGE_ID_CLEARRENDERTARGETVIEW_DENORMFLUSH = (
        D3D12_MESSAGE_ID_DEVICE_RSSETSCISSORRECTS_INVALIDSCISSOR + 1), D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_DENORMFLUSH = (
        D3D12_MESSAGE_ID_CLEARRENDERTARGETVIEW_DENORMFLUSH + 1), D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_INVALID = (
        D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_DENORMFLUSH + 1), D3D12_MESSAGE_ID_COPYRESOURCE_INVALIDSOURCE = (
        D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_INVALID + 1), D3D12_MESSAGE_ID_COPYRESOURCE_INVALIDDESTINATIONSTATE = (
        D3D12_MESSAGE_ID_COPYRESOURCE_INVALIDSOURCE + 1), D3D12_MESSAGE_ID_COPYRESOURCE_INVALIDSOURCESTATE = (
        D3D12_MESSAGE_ID_COPYRESOURCE_INVALIDDESTINATIONSTATE + 1), D3D12_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONSUBRESOURCE = (
        D3D12_MESSAGE_ID_COPYRESOURCE_INVALIDSOURCESTATE + 1), D3D12_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONBOX = (
        D3D12_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONSUBRESOURCE + 1), D3D12_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONSTATE = (
        D3D12_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONBOX + 1), D3D12_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_DESTINATION_INVALID = (
        D3D12_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONSTATE + 1), D3D12_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_DESTINATION_SUBRESOURCE_INVALID = (
        D3D12_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_DESTINATION_INVALID + 1), D3D12_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_SOURCE_INVALID = (D3D12_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_DESTINATION_SUBRESOURCE_INVALID +
        1), D3D12_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_SOURCE_SUBRESOURCE_INVALID = (
        D3D12_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_SOURCE_INVALID + 1), D3D12_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_FORMAT_INVALID = (D3D12_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_SOURCE_SUBRESOURCE_INVALID +
        1), D3D12_MESSAGE_ID_BUFFER_MAP_INVALIDMAPTYPE = (
        D3D12_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_FORMAT_INVALID + 1), D3D12_MESSAGE_ID_BUFFER_MAP_INVALIDFLAGS = (
        D3D12_MESSAGE_ID_BUFFER_MAP_INVALIDMAPTYPE + 1), D3D12_MESSAGE_ID_BUFFER_MAP_ALREADYMAPPED = (
        D3D12_MESSAGE_ID_BUFFER_MAP_INVALIDFLAGS + 1), D3D12_MESSAGE_ID_BUFFER_MAP_DEVICEREMOVED_RETURN = (
        D3D12_MESSAGE_ID_BUFFER_MAP_ALREADYMAPPED + 1), D3D12_MESSAGE_ID_BUFFER_UNMAP_NOTMAPPED = (
        D3D12_MESSAGE_ID_BUFFER_MAP_DEVICEREMOVED_RETURN + 1), D3D12_MESSAGE_ID_TEXTURE1D_MAP_INVALIDMAPTYPE = (
        D3D12_MESSAGE_ID_BUFFER_UNMAP_NOTMAPPED + 1), D3D12_MESSAGE_ID_TEXTURE1D_MAP_INVALIDSUBRESOURCE = (
        D3D12_MESSAGE_ID_TEXTURE1D_MAP_INVALIDMAPTYPE + 1), D3D12_MESSAGE_ID_TEXTURE1D_MAP_INVALIDFLAGS = (
        D3D12_MESSAGE_ID_TEXTURE1D_MAP_INVALIDSUBRESOURCE + 1), D3D12_MESSAGE_ID_TEXTURE1D_MAP_ALREADYMAPPED = (
        D3D12_MESSAGE_ID_TEXTURE1D_MAP_INVALIDFLAGS + 1), D3D12_MESSAGE_ID_TEXTURE1D_MAP_DEVICEREMOVED_RETURN = (
        D3D12_MESSAGE_ID_TEXTURE1D_MAP_ALREADYMAPPED + 1), D3D12_MESSAGE_ID_TEXTURE1D_UNMAP_INVALIDSUBRESOURCE = (
        D3D12_MESSAGE_ID_TEXTURE1D_MAP_DEVICEREMOVED_RETURN + 1), D3D12_MESSAGE_ID_TEXTURE1D_UNMAP_NOTMAPPED = (
        D3D12_MESSAGE_ID_TEXTURE1D_UNMAP_INVALIDSUBRESOURCE + 1), D3D12_MESSAGE_ID_TEXTURE2D_MAP_INVALIDMAPTYPE = (
        D3D12_MESSAGE_ID_TEXTURE1D_UNMAP_NOTMAPPED + 1), D3D12_MESSAGE_ID_TEXTURE2D_MAP_INVALIDSUBRESOURCE = (
        D3D12_MESSAGE_ID_TEXTURE2D_MAP_INVALIDMAPTYPE + 1), D3D12_MESSAGE_ID_TEXTURE2D_MAP_INVALIDFLAGS = (
        D3D12_MESSAGE_ID_TEXTURE2D_MAP_INVALIDSUBRESOURCE + 1), D3D12_MESSAGE_ID_TEXTURE2D_MAP_ALREADYMAPPED = (
        D3D12_MESSAGE_ID_TEXTURE2D_MAP_INVALIDFLAGS + 1), D3D12_MESSAGE_ID_TEXTURE2D_MAP_DEVICEREMOVED_RETURN = (
        D3D12_MESSAGE_ID_TEXTURE2D_MAP_ALREADYMAPPED + 1), D3D12_MESSAGE_ID_TEXTURE2D_UNMAP_INVALIDSUBRESOURCE = (
        D3D12_MESSAGE_ID_TEXTURE2D_MAP_DEVICEREMOVED_RETURN + 1), D3D12_MESSAGE_ID_TEXTURE2D_UNMAP_NOTMAPPED = (
        D3D12_MESSAGE_ID_TEXTURE2D_UNMAP_INVALIDSUBRESOURCE + 1), D3D12_MESSAGE_ID_TEXTURE3D_MAP_INVALIDMAPTYPE = (
        D3D12_MESSAGE_ID_TEXTURE2D_UNMAP_NOTMAPPED + 1), D3D12_MESSAGE_ID_TEXTURE3D_MAP_INVALIDSUBRESOURCE = (
        D3D12_MESSAGE_ID_TEXTURE3D_MAP_INVALIDMAPTYPE + 1), D3D12_MESSAGE_ID_TEXTURE3D_MAP_INVALIDFLAGS = (
        D3D12_MESSAGE_ID_TEXTURE3D_MAP_INVALIDSUBRESOURCE + 1), D3D12_MESSAGE_ID_TEXTURE3D_MAP_ALREADYMAPPED = (
        D3D12_MESSAGE_ID_TEXTURE3D_MAP_INVALIDFLAGS + 1), D3D12_MESSAGE_ID_TEXTURE3D_MAP_DEVICEREMOVED_RETURN = (
        D3D12_MESSAGE_ID_TEXTURE3D_MAP_ALREADYMAPPED + 1), D3D12_MESSAGE_ID_TEXTURE3D_UNMAP_INVALIDSUBRESOURCE = (
        D3D12_MESSAGE_ID_TEXTURE3D_MAP_DEVICEREMOVED_RETURN + 1), D3D12_MESSAGE_ID_TEXTURE3D_UNMAP_NOTMAPPED = (
        D3D12_MESSAGE_ID_TEXTURE3D_UNMAP_INVALIDSUBRESOURCE + 1), D3D12_MESSAGE_ID_CHECKFORMATSUPPORT_FORMAT_DEPRECATED = (
        D3D12_MESSAGE_ID_TEXTURE3D_UNMAP_NOTMAPPED + 1), D3D12_MESSAGE_ID_CHECKMULTISAMPLEQUALITYLEVELS_FORMAT_DEPRECATED = (
        D3D12_MESSAGE_ID_CHECKFORMATSUPPORT_FORMAT_DEPRECATED + 1), D3D12_MESSAGE_ID_SETEXCEPTIONMODE_UNRECOGNIZEDFLAGS = (
        D3D12_MESSAGE_ID_CHECKMULTISAMPLEQUALITYLEVELS_FORMAT_DEPRECATED + 1), D3D12_MESSAGE_ID_SETEXCEPTIONMODE_INVALIDARG_RETURN = (
        D3D12_MESSAGE_ID_SETEXCEPTIONMODE_UNRECOGNIZEDFLAGS + 1), D3D12_MESSAGE_ID_SETEXCEPTIONMODE_DEVICEREMOVED_RETURN = (
        D3D12_MESSAGE_ID_SETEXCEPTIONMODE_INVALIDARG_RETURN + 1), D3D12_MESSAGE_ID_REF_SIMULATING_INFINITELY_FAST_HARDWARE = (
        D3D12_MESSAGE_ID_SETEXCEPTIONMODE_DEVICEREMOVED_RETURN + 1), D3D12_MESSAGE_ID_REF_THREADING_MODE = (
        D3D12_MESSAGE_ID_REF_SIMULATING_INFINITELY_FAST_HARDWARE + 1), D3D12_MESSAGE_ID_REF_UMDRIVER_EXCEPTION = (
        D3D12_MESSAGE_ID_REF_THREADING_MODE + 1), D3D12_MESSAGE_ID_REF_KMDRIVER_EXCEPTION = (
        D3D12_MESSAGE_ID_REF_UMDRIVER_EXCEPTION + 1), D3D12_MESSAGE_ID_REF_HARDWARE_EXCEPTION = (
        D3D12_MESSAGE_ID_REF_KMDRIVER_EXCEPTION + 1), D3D12_MESSAGE_ID_REF_ACCESSING_INDEXABLE_TEMP_OUT_OF_RANGE = (
        D3D12_MESSAGE_ID_REF_HARDWARE_EXCEPTION + 1), D3D12_MESSAGE_ID_REF_PROBLEM_PARSING_SHADER = (
        D3D12_MESSAGE_ID_REF_ACCESSING_INDEXABLE_TEMP_OUT_OF_RANGE + 1), D3D12_MESSAGE_ID_REF_OUT_OF_MEMORY = (
        D3D12_MESSAGE_ID_REF_PROBLEM_PARSING_SHADER + 1),
    D3D12_MESSAGE_ID_REF_INFO = (D3D12_MESSAGE_ID_REF_OUT_OF_MEMORY + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_VERTEXPOS_OVERFLOW = (
        D3D12_MESSAGE_ID_REF_INFO + 1), D3D12_MESSAGE_ID_DEVICE_DRAWINDEXED_INDEXPOS_OVERFLOW = (
        D3D12_MESSAGE_ID_DEVICE_DRAW_VERTEXPOS_OVERFLOW + 1), D3D12_MESSAGE_ID_DEVICE_DRAWINSTANCED_VERTEXPOS_OVERFLOW = (
        D3D12_MESSAGE_ID_DEVICE_DRAWINDEXED_INDEXPOS_OVERFLOW + 1), D3D12_MESSAGE_ID_DEVICE_DRAWINSTANCED_INSTANCEPOS_OVERFLOW = (
        D3D12_MESSAGE_ID_DEVICE_DRAWINSTANCED_VERTEXPOS_OVERFLOW + 1), D3D12_MESSAGE_ID_DEVICE_DRAWINDEXEDINSTANCED_INSTANCEPOS_OVERFLOW = (
        D3D12_MESSAGE_ID_DEVICE_DRAWINSTANCED_INSTANCEPOS_OVERFLOW + 1), D3D12_MESSAGE_ID_DEVICE_DRAWINDEXEDINSTANCED_INDEXPOS_OVERFLOW = (
        D3D12_MESSAGE_ID_DEVICE_DRAWINDEXEDINSTANCED_INSTANCEPOS_OVERFLOW + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_VERTEX_SHADER_NOT_SET = (
        D3D12_MESSAGE_ID_DEVICE_DRAWINDEXEDINSTANCED_INDEXPOS_OVERFLOW + 1), D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_SEMANTICNAME_NOT_FOUND = (
        D3D12_MESSAGE_ID_DEVICE_DRAW_VERTEX_SHADER_NOT_SET + 1), D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_REGISTERINDEX = (
        D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_SEMANTICNAME_NOT_FOUND + 1), D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_COMPONENTTYPE = (
        D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_REGISTERINDEX + 1), D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_REGISTERMASK = (
        D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_COMPONENTTYPE + 1), D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_SYSTEMVALUE = (
        D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_REGISTERMASK + 1), D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_NEVERWRITTEN_ALWAYSREADS = (
        D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_SYSTEMVALUE + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_ROOT_SIGNATURE_NOT_SET = (
        D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_NEVERWRITTEN_ALWAYSREADS + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_ROOT_SIGNATURE_MISMATCH = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_ROOT_SIGNATURE_NOT_SET + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_NOT_SET = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_ROOT_SIGNATURE_MISMATCH + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INPUTLAYOUT_NOT_SET = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_NOT_SET + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_CONSTANT_BUFFER_NOT_SET = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INPUTLAYOUT_NOT_SET + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_CONSTANT_BUFFER_TOO_SMALL = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_CONSTANT_BUFFER_NOT_SET + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_SAMPLER_NOT_SET = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_CONSTANT_BUFFER_TOO_SMALL + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_SHADERRESOURCEVIEW_NOT_SET = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_SAMPLER_NOT_SET + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VIEW_DIMENSION_MISMATCH = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_SHADERRESOURCEVIEW_NOT_SET + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_STRIDE_TOO_SMALL = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VIEW_DIMENSION_MISMATCH + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_TOO_SMALL = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_STRIDE_TOO_SMALL + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_NOT_SET = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_TOO_SMALL + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_FORMAT_INVALID = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_NOT_SET + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_TOO_SMALL = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_FORMAT_INVALID + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_GS_INPUT_PRIMITIVE_MISMATCH = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_TOO_SMALL + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RESOURCE_RETURN_TYPE_MISMATCH = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_GS_INPUT_PRIMITIVE_MISMATCH + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_POSITION_NOT_PRESENT = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RESOURCE_RETURN_TYPE_MISMATCH + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_OUTPUT_STREAM_NOT_SET = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_POSITION_NOT_PRESENT + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_BOUND_RESOURCE_MAPPED = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_OUTPUT_STREAM_NOT_SET + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INVALID_PRIMITIVETOPOLOGY = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_BOUND_RESOURCE_MAPPED + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_OFFSET_UNALIGNED = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INVALID_PRIMITIVETOPOLOGY + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_STRIDE_UNALIGNED = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_OFFSET_UNALIGNED + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_OFFSET_UNALIGNED = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_STRIDE_UNALIGNED + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_OUTPUT_STREAM_OFFSET_UNALIGNED = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_OFFSET_UNALIGNED + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RESOURCE_FORMAT_LD_UNSUPPORTED = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_OUTPUT_STREAM_OFFSET_UNALIGNED + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RESOURCE_FORMAT_SAMPLE_UNSUPPORTED = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RESOURCE_FORMAT_LD_UNSUPPORTED + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RESOURCE_FORMAT_SAMPLE_C_UNSUPPORTED = (D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RESOURCE_FORMAT_SAMPLE_UNSUPPORTED +
        1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RESOURCE_MULTISAMPLE_UNSUPPORTED = (D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RESOURCE_FORMAT_SAMPLE_C_UNSUPPORTED +
        1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_SO_TARGETS_BOUND_WITHOUT_SOURCE = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RESOURCE_MULTISAMPLE_UNSUPPORTED + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_SO_STRIDE_LARGER_THAN_BUFFER = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_SO_TARGETS_BOUND_WITHOUT_SOURCE + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_OM_RENDER_TARGET_DOES_NOT_SUPPORT_BLENDING = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_SO_STRIDE_LARGER_THAN_BUFFER + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_OM_DUAL_SOURCE_BLENDING_CAN_ONLY_HAVE_RENDER_TARGET_0 = (D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_OM_RENDER_TARGET_DOES_NOT_SUPPORT_BLENDING +
        1), D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_AT_FAULT = (D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_OM_DUAL_SOURCE_BLENDING_CAN_ONLY_HAVE_RENDER_TARGET_0 +
        1), D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_POSSIBLY_AT_FAULT = (
        D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_AT_FAULT + 1), D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_NOT_AT_FAULT = (
        D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_POSSIBLY_AT_FAULT + 1), D3D12_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_INVALIDARG_RETURN = (
        D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_NOT_AT_FAULT + 1), D3D12_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_OUTOFMEMORY_RETURN = (
        D3D12_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_INVALIDARG_RETURN + 1), D3D12_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_BADINTERFACE_RETURN = (
        D3D12_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_OUTOFMEMORY_RETURN + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_VIEWPORT_NOT_SET = (
        D3D12_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_BADINTERFACE_RETURN + 1), D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TRAILING_DIGIT_IN_SEMANTIC = (
        D3D12_MESSAGE_ID_DEVICE_DRAW_VIEWPORT_NOT_SET + 1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_TRAILING_DIGIT_IN_SEMANTIC = (
        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TRAILING_DIGIT_IN_SEMANTIC + 1), D3D12_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_DENORMFLUSH = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_TRAILING_DIGIT_IN_SEMANTIC +
        1), D3D12_MESSAGE_ID_OMSETRENDERTARGETS_INVALIDVIEW = (
        D3D12_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_DENORMFLUSH + 1), D3D12_MESSAGE_ID_DEVICE_SETTEXTFILTERSIZE_INVALIDDIMENSIONS = (
        D3D12_MESSAGE_ID_OMSETRENDERTARGETS_INVALIDVIEW + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_SAMPLER_MISMATCH = (
        D3D12_MESSAGE_ID_DEVICE_SETTEXTFILTERSIZE_INVALIDDIMENSIONS + 1), D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TYPE_MISMATCH = (
        D3D12_MESSAGE_ID_DEVICE_DRAW_SAMPLER_MISMATCH + 1), D3D12_MESSAGE_ID_BLENDSTATE_GETDESC_LEGACY = (
        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TYPE_MISMATCH + 1), D3D12_MESSAGE_ID_SHADERRESOURCEVIEW_GETDESC_LEGACY = (
        D3D12_MESSAGE_ID_BLENDSTATE_GETDESC_LEGACY + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_PS_OUTPUT_TYPE_MISMATCH = (
        D3D12_MESSAGE_ID_SHADERRESOURCEVIEW_GETDESC_LEGACY + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_GATHER_UNSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_DRAW_PS_OUTPUT_TYPE_MISMATCH + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_INVALID_USE_OF_CENTER_MULTISAMPLE_PATTERN = (
        D3D12_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_GATHER_UNSUPPORTED + 1), D3D12_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_STRIDE_TOO_LARGE = (D3D12_MESSAGE_ID_DEVICE_DRAW_INVALID_USE_OF_CENTER_MULTISAMPLE_PATTERN +
        1), D3D12_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_INVALIDRANGE = (
        D3D12_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_STRIDE_TOO_LARGE + 1), D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_EMPTY_LAYOUT = (
        D3D12_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_INVALIDRANGE + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_RESOURCE_SAMPLE_COUNT_MISMATCH = (
        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_EMPTY_LAYOUT + 1), D3D12_MESSAGE_ID_LIVE_OBJECT_SUMMARY = (
        D3D12_MESSAGE_ID_DEVICE_DRAW_RESOURCE_SAMPLE_COUNT_MISMATCH + 1),
    D3D12_MESSAGE_ID_LIVE_BUFFER = (D3D12_MESSAGE_ID_LIVE_OBJECT_SUMMARY + 1),
    D3D12_MESSAGE_ID_LIVE_TEXTURE1D = (D3D12_MESSAGE_ID_LIVE_BUFFER + 1),
    D3D12_MESSAGE_ID_LIVE_TEXTURE2D = (D3D12_MESSAGE_ID_LIVE_TEXTURE1D + 1),
    D3D12_MESSAGE_ID_LIVE_TEXTURE3D = (D3D12_MESSAGE_ID_LIVE_TEXTURE2D + 1), D3D12_MESSAGE_ID_LIVE_SHADERRESOURCEVIEW = (
        D3D12_MESSAGE_ID_LIVE_TEXTURE3D + 1), D3D12_MESSAGE_ID_LIVE_RENDERTARGETVIEW = (
        D3D12_MESSAGE_ID_LIVE_SHADERRESOURCEVIEW + 1), D3D12_MESSAGE_ID_LIVE_DEPTHSTENCILVIEW = (
        D3D12_MESSAGE_ID_LIVE_RENDERTARGETVIEW + 1), D3D12_MESSAGE_ID_LIVE_VERTEXSHADER = (
        D3D12_MESSAGE_ID_LIVE_DEPTHSTENCILVIEW + 1), D3D12_MESSAGE_ID_LIVE_GEOMETRYSHADER = (
        D3D12_MESSAGE_ID_LIVE_VERTEXSHADER + 1), D3D12_MESSAGE_ID_LIVE_PIXELSHADER = (
        D3D12_MESSAGE_ID_LIVE_GEOMETRYSHADER + 1), D3D12_MESSAGE_ID_LIVE_INPUTLAYOUT = (
        D3D12_MESSAGE_ID_LIVE_PIXELSHADER + 1),
    D3D12_MESSAGE_ID_LIVE_SAMPLER = (D3D12_MESSAGE_ID_LIVE_INPUTLAYOUT + 1),
    D3D12_MESSAGE_ID_LIVE_BLENDSTATE = (D3D12_MESSAGE_ID_LIVE_SAMPLER + 1), D3D12_MESSAGE_ID_LIVE_DEPTHSTENCILSTATE = (
        D3D12_MESSAGE_ID_LIVE_BLENDSTATE + 1), D3D12_MESSAGE_ID_LIVE_RASTERIZERSTATE = (
        D3D12_MESSAGE_ID_LIVE_DEPTHSTENCILSTATE + 1),
    D3D12_MESSAGE_ID_LIVE_QUERY = (D3D12_MESSAGE_ID_LIVE_RASTERIZERSTATE + 1),
    D3D12_MESSAGE_ID_LIVE_PREDICATE = (D3D12_MESSAGE_ID_LIVE_QUERY + 1),
    D3D12_MESSAGE_ID_LIVE_COUNTER = (D3D12_MESSAGE_ID_LIVE_PREDICATE + 1),
    D3D12_MESSAGE_ID_LIVE_DEVICE = (D3D12_MESSAGE_ID_LIVE_COUNTER + 1),
    D3D12_MESSAGE_ID_LIVE_SWAPCHAIN = (D3D12_MESSAGE_ID_LIVE_DEVICE + 1), D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFLAGS = (
        D3D12_MESSAGE_ID_LIVE_SWAPCHAIN + 1), D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDCLASSLINKAGE = (
        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFLAGS + 1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDCLASSLINKAGE = (
        D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDCLASSLINKAGE + 1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTREAMS = (
        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDCLASSLINKAGE + 1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAMTORASTERIZER = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTREAMS +
        1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTREAMS = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAMTORASTERIZER +
        1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCLASSLINKAGE = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTREAMS +
        1), D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDCLASSLINKAGE = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCLASSLINKAGE +
        1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAM = (
        D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDCLASSLINKAGE + 1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDENTRIES = (
        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAM + 1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTRIDES = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDENTRIES +
        1), D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTRIDES = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTRIDES +
        1), D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDCALL = (D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTRIDES +
        1), D3D12_MESSAGE_ID_CREATEHULLSHADER_OUTOFMEMORY = (
        D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDCALL + 1), D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERBYTECODE = (
        D3D12_MESSAGE_ID_CREATEHULLSHADER_OUTOFMEMORY + 1), D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERTYPE = (
        D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERBYTECODE + 1), D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDCLASSLINKAGE = (
        D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERTYPE + 1), D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCALL = (
        D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDCLASSLINKAGE + 1), D3D12_MESSAGE_ID_CREATEDOMAINSHADER_OUTOFMEMORY = (
        D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCALL + 1), D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERBYTECODE = (
        D3D12_MESSAGE_ID_CREATEDOMAINSHADER_OUTOFMEMORY + 1), D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERTYPE = (
        D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERBYTECODE + 1), D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCLASSLINKAGE = (
        D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERTYPE + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_HS_XOR_DS_MISMATCH = (
        D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCLASSLINKAGE + 1), D3D12_MESSAGE_ID_DEVICE_DRAWINDIRECT_INVALID_ARG_BUFFER = (
        D3D12_MESSAGE_ID_DEVICE_DRAW_HS_XOR_DS_MISMATCH + 1), D3D12_MESSAGE_ID_DEVICE_DRAWINDIRECT_OFFSET_UNALIGNED = (
        D3D12_MESSAGE_ID_DEVICE_DRAWINDIRECT_INVALID_ARG_BUFFER + 1), D3D12_MESSAGE_ID_DEVICE_DRAWINDIRECT_OFFSET_OVERFLOW = (
        D3D12_MESSAGE_ID_DEVICE_DRAWINDIRECT_OFFSET_UNALIGNED + 1), D3D12_MESSAGE_ID_RESOURCE_MAP_INVALIDMAPTYPE = (
        D3D12_MESSAGE_ID_DEVICE_DRAWINDIRECT_OFFSET_OVERFLOW + 1), D3D12_MESSAGE_ID_RESOURCE_MAP_INVALIDSUBRESOURCE = (
        D3D12_MESSAGE_ID_RESOURCE_MAP_INVALIDMAPTYPE + 1), D3D12_MESSAGE_ID_RESOURCE_MAP_INVALIDFLAGS = (
        D3D12_MESSAGE_ID_RESOURCE_MAP_INVALIDSUBRESOURCE + 1), D3D12_MESSAGE_ID_RESOURCE_MAP_ALREADYMAPPED = (
        D3D12_MESSAGE_ID_RESOURCE_MAP_INVALIDFLAGS + 1), D3D12_MESSAGE_ID_RESOURCE_MAP_DEVICEREMOVED_RETURN = (
        D3D12_MESSAGE_ID_RESOURCE_MAP_ALREADYMAPPED + 1), D3D12_MESSAGE_ID_RESOURCE_MAP_OUTOFMEMORY_RETURN = (
        D3D12_MESSAGE_ID_RESOURCE_MAP_DEVICEREMOVED_RETURN + 1), D3D12_MESSAGE_ID_RESOURCE_MAP_WITHOUT_INITIAL_DISCARD = (
        D3D12_MESSAGE_ID_RESOURCE_MAP_OUTOFMEMORY_RETURN + 1), D3D12_MESSAGE_ID_RESOURCE_UNMAP_INVALIDSUBRESOURCE = (
        D3D12_MESSAGE_ID_RESOURCE_MAP_WITHOUT_INITIAL_DISCARD + 1), D3D12_MESSAGE_ID_RESOURCE_UNMAP_NOTMAPPED = (
        D3D12_MESSAGE_ID_RESOURCE_UNMAP_INVALIDSUBRESOURCE + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_RASTERIZING_CONTROL_POINTS = (
        D3D12_MESSAGE_ID_RESOURCE_UNMAP_NOTMAPPED + 1), D3D12_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_DRAW_RASTERIZING_CONTROL_POINTS + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_HS_DS_SIGNATURE_MISMATCH = (
        D3D12_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNSUPPORTED + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_HULL_SHADER_INPUT_TOPOLOGY_MISMATCH = (
        D3D12_MESSAGE_ID_DEVICE_DRAW_HS_DS_SIGNATURE_MISMATCH + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_HS_DS_CONTROL_POINT_COUNT_MISMATCH = (
        D3D12_MESSAGE_ID_DEVICE_DRAW_HULL_SHADER_INPUT_TOPOLOGY_MISMATCH + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_HS_DS_TESSELLATOR_DOMAIN_MISMATCH = (
        D3D12_MESSAGE_ID_DEVICE_DRAW_HS_DS_CONTROL_POINT_COUNT_MISMATCH + 1), D3D12_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_UNRECOGNIZED_FEATURE = (
        D3D12_MESSAGE_ID_DEVICE_DRAW_HS_DS_TESSELLATOR_DOMAIN_MISMATCH + 1), D3D12_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_MISMATCHED_DATA_SIZE = (
        D3D12_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_UNRECOGNIZED_FEATURE + 1), D3D12_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_INVALIDARG_RETURN = (
        D3D12_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_MISMATCHED_DATA_SIZE + 1), D3D12_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCALL = (
        D3D12_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_INVALIDARG_RETURN + 1), D3D12_MESSAGE_ID_CREATECOMPUTESHADER_OUTOFMEMORY = (
        D3D12_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCALL + 1), D3D12_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDSHADERBYTECODE = (
        D3D12_MESSAGE_ID_CREATECOMPUTESHADER_OUTOFMEMORY + 1), D3D12_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCLASSLINKAGE = (
        D3D12_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDSHADERBYTECODE + 1), D3D12_MESSAGE_ID_DEVICE_CSSETSHADERRESOURCES_VIEWS_EMPTY = (
        D3D12_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCLASSLINKAGE + 1), D3D12_MESSAGE_ID_CSSETCONSTANTBUFFERS_INVALIDBUFFER = (
        D3D12_MESSAGE_ID_DEVICE_CSSETSHADERRESOURCES_VIEWS_EMPTY + 1), D3D12_MESSAGE_ID_DEVICE_CSSETCONSTANTBUFFERS_BUFFERS_EMPTY = (
        D3D12_MESSAGE_ID_CSSETCONSTANTBUFFERS_INVALIDBUFFER + 1), D3D12_MESSAGE_ID_DEVICE_CSSETSAMPLERS_SAMPLERS_EMPTY = (
        D3D12_MESSAGE_ID_DEVICE_CSSETCONSTANTBUFFERS_BUFFERS_EMPTY + 1), D3D12_MESSAGE_ID_DEVICE_CSGETSHADERRESOURCES_VIEWS_EMPTY = (
        D3D12_MESSAGE_ID_DEVICE_CSSETSAMPLERS_SAMPLERS_EMPTY + 1), D3D12_MESSAGE_ID_DEVICE_CSGETCONSTANTBUFFERS_BUFFERS_EMPTY = (
        D3D12_MESSAGE_ID_DEVICE_CSGETSHADERRESOURCES_VIEWS_EMPTY + 1), D3D12_MESSAGE_ID_DEVICE_CSGETSAMPLERS_SAMPLERS_EMPTY = (
        D3D12_MESSAGE_ID_DEVICE_CSGETCONSTANTBUFFERS_BUFFERS_EMPTY + 1), D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEFLOATOPSNOTSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_CSGETSAMPLERS_SAMPLERS_EMPTY + 1), D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEFLOATOPSNOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEFLOATOPSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEFLOATOPSNOTSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEFLOATOPSNOTSUPPORTED + 1), D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEFLOATOPSNOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEFLOATOPSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEFLOATOPSNOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEFLOATOPSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEFLOATOPSNOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEFLOATOPSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEFLOATOPSNOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEFLOATOPSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_CREATEBUFFER_INVALIDSTRUCTURESTRIDE = (D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEFLOATOPSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFLAGS = (
        D3D12_MESSAGE_ID_CREATEBUFFER_INVALIDSTRUCTURESTRIDE + 1), D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDRESOURCE = (
        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFLAGS + 1), D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDESC = (
        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDRESOURCE + 1), D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFORMAT = (
        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDESC + 1), D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDVIDEOPLANESLICE = (
        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFORMAT + 1), D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDPLANESLICE = (
        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDVIDEOPLANESLICE + 1), D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS = (
        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDPLANESLICE + 1), D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_UNRECOGNIZEDFORMAT = (
        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS + 1), D3D12_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_OVERLAPPING_OLD_SLOTS = (
        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_UNRECOGNIZEDFORMAT + 1), D3D12_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_NO_OP = (D3D12_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_OVERLAPPING_OLD_SLOTS +
        1), D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDARG_RETURN = (D3D12_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_NO_OP +
        1), D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_OUTOFMEMORY_RETURN = (
        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDARG_RETURN + 1), D3D12_MESSAGE_ID_CLEARUNORDEREDACCESSVIEW_DENORMFLUSH = (
        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_OUTOFMEMORY_RETURN + 1), D3D12_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSS_VIEWS_EMPTY = (
        D3D12_MESSAGE_ID_CLEARUNORDEREDACCESSVIEW_DENORMFLUSH + 1), D3D12_MESSAGE_ID_DEVICE_CSGETUNORDEREDACCESSS_VIEWS_EMPTY = (
        D3D12_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSS_VIEWS_EMPTY + 1), D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFLAGS = (
        D3D12_MESSAGE_ID_DEVICE_CSGETUNORDEREDACCESSS_VIEWS_EMPTY + 1), D3D12_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_INVALID_ARG_BUFFER = (
        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFLAGS + 1), D3D12_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_OFFSET_UNALIGNED = (
        D3D12_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_INVALID_ARG_BUFFER + 1), D3D12_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_OFFSET_OVERFLOW = (
        D3D12_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_OFFSET_UNALIGNED + 1), D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_DEPTH_READONLY = (
        D3D12_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_OFFSET_OVERFLOW + 1), D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_STENCIL_READONLY = (
        D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_DEPTH_READONLY + 1), D3D12_MESSAGE_ID_CHECKFEATURESUPPORT_FORMAT_DEPRECATED = (
        D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_STENCIL_READONLY + 1), D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_RETURN_TYPE_MISMATCH = (
        D3D12_MESSAGE_ID_CHECKFEATURESUPPORT_FORMAT_DEPRECATED + 1), D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_NOT_SET = (
        D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_RETURN_TYPE_MISMATCH + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_UNORDEREDACCESSVIEW_RENDERTARGETVIEW_OVERLAP = (
        D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_NOT_SET + 1), D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_DIMENSION_MISMATCH = (D3D12_MESSAGE_ID_DEVICE_DRAW_UNORDEREDACCESSVIEW_RENDERTARGETVIEW_OVERLAP +
        1), D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_APPEND_UNSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_DIMENSION_MISMATCH + 1), D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMICS_UNSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_APPEND_UNSUPPORTED + 1), D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_STRUCTURE_STRIDE_MISMATCH = (
        D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMICS_UNSUPPORTED + 1), D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_BUFFER_TYPE_MISMATCH = (D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_STRUCTURE_STRIDE_MISMATCH +
        1), D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_RAW_UNSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_BUFFER_TYPE_MISMATCH + 1), D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_FORMAT_LD_UNSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_RAW_UNSUPPORTED + 1), D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_FORMAT_STORE_UNSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_FORMAT_LD_UNSUPPORTED + 1), D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_ADD_UNSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_FORMAT_STORE_UNSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_BITWISE_OPS_UNSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_ADD_UNSUPPORTED + 1), D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_CMPSTORE_CMPEXCHANGE_UNSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_BITWISE_OPS_UNSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_EXCHANGE_UNSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_CMPSTORE_CMPEXCHANGE_UNSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_SIGNED_MINMAX_UNSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_EXCHANGE_UNSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_UNSIGNED_MINMAX_UNSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_SIGNED_MINMAX_UNSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_DISPATCH_BOUND_RESOURCE_MAPPED = (D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_UNSIGNED_MINMAX_UNSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_DISPATCH_THREADGROUPCOUNT_OVERFLOW = (
        D3D12_MESSAGE_ID_DEVICE_DISPATCH_BOUND_RESOURCE_MAPPED + 1), D3D12_MESSAGE_ID_DEVICE_DISPATCH_THREADGROUPCOUNT_ZERO = (
        D3D12_MESSAGE_ID_DEVICE_DISPATCH_THREADGROUPCOUNT_OVERFLOW + 1), D3D12_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_STRUCTURE_STRIDE_MISMATCH = (
        D3D12_MESSAGE_ID_DEVICE_DISPATCH_THREADGROUPCOUNT_ZERO + 1), D3D12_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_BUFFER_TYPE_MISMATCH = (D3D12_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_STRUCTURE_STRIDE_MISMATCH +
        1), D3D12_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_RAW_UNSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_BUFFER_TYPE_MISMATCH + 1), D3D12_MESSAGE_ID_DEVICE_DISPATCH_UNSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_RAW_UNSUPPORTED + 1), D3D12_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_UNSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_DISPATCH_UNSUPPORTED + 1), D3D12_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDOFFSET = (
        D3D12_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_UNSUPPORTED + 1), D3D12_MESSAGE_ID_COPYSTRUCTURECOUNT_LARGEOFFSET = (
        D3D12_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDOFFSET + 1), D3D12_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDDESTINATIONSTATE = (
        D3D12_MESSAGE_ID_COPYSTRUCTURECOUNT_LARGEOFFSET + 1), D3D12_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDSOURCESTATE = (
        D3D12_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDDESTINATIONSTATE + 1), D3D12_MESSAGE_ID_CHECKFORMATSUPPORT_FORMAT_NOT_SUPPORTED = (
        D3D12_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDSOURCESTATE + 1), D3D12_MESSAGE_ID_CLEARUNORDEREDACCESSVIEWFLOAT_INVALIDFORMAT = (
        D3D12_MESSAGE_ID_CHECKFORMATSUPPORT_FORMAT_NOT_SUPPORTED + 1), D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_COUNTER_UNSUPPORTED = (
        D3D12_MESSAGE_ID_CLEARUNORDEREDACCESSVIEWFLOAT_INVALIDFORMAT + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_PIXEL_SHADER_WITHOUT_RTV_OR_DSV = (
        D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_COUNTER_UNSUPPORTED + 1), D3D12_MESSAGE_ID_SHADER_ABORT = (
        D3D12_MESSAGE_ID_DEVICE_DRAW_PIXEL_SHADER_WITHOUT_RTV_OR_DSV + 1),
    D3D12_MESSAGE_ID_SHADER_MESSAGE = (D3D12_MESSAGE_ID_SHADER_ABORT + 1),
    D3D12_MESSAGE_ID_SHADER_ERROR = (D3D12_MESSAGE_ID_SHADER_MESSAGE + 1), D3D12_MESSAGE_ID_OFFERRESOURCES_INVALIDRESOURCE = (
        D3D12_MESSAGE_ID_SHADER_ERROR + 1), D3D12_MESSAGE_ID_ENQUEUESETEVENT_INVALIDARG_RETURN = (
        D3D12_MESSAGE_ID_OFFERRESOURCES_INVALIDRESOURCE + 1), D3D12_MESSAGE_ID_ENQUEUESETEVENT_OUTOFMEMORY_RETURN = (
        D3D12_MESSAGE_ID_ENQUEUESETEVENT_INVALIDARG_RETURN + 1), D3D12_MESSAGE_ID_ENQUEUESETEVENT_ACCESSDENIED_RETURN = (
        D3D12_MESSAGE_ID_ENQUEUESETEVENT_OUTOFMEMORY_RETURN + 1), D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFORCEDSAMPLECOUNT = (
        D3D12_MESSAGE_ID_ENQUEUESETEVENT_ACCESSDENIED_RETURN + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_INVALID_USE_OF_FORCED_SAMPLE_COUNT = (
        D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFORCEDSAMPLECOUNT + 1), D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDLOGICOPS = (
        D3D12_MESSAGE_ID_DEVICE_DRAW_INVALID_USE_OF_FORCED_SAMPLE_COUNT + 1), D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDARRAYWITHDECODER = (
        D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDLOGICOPS + 1), D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDARRAYWITHDECODER = (
        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDARRAYWITHDECODER + 1), D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDARRAYWITHDECODER = (
        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDARRAYWITHDECODER + 1), D3D12_MESSAGE_ID_DEVICE_LOCKEDOUT_INTERFACE = (
        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDARRAYWITHDECODER + 1), D3D12_MESSAGE_ID_OFFERRESOURCES_INVALIDPRIORITY = (
        D3D12_MESSAGE_ID_DEVICE_LOCKEDOUT_INTERFACE + 1), D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDVIEW = (
        D3D12_MESSAGE_ID_OFFERRESOURCES_INVALIDPRIORITY + 1), D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDVIEW + 1), D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_SHADEREXTENSIONSNOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEEXTENSIONSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_SHADEREXTENSIONSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_SHADEREXTENSIONSNOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEEXTENSIONSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_SHADEREXTENSIONSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_SHADEREXTENSIONSNOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEEXTENSIONSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_SHADEREXTENSIONSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_SHADEREXTENSIONSNOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEEXTENSIONSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEEXTENSIONSNOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_SHADEREXTENSIONSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_SHADEREXTENSIONSNOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEEXTENSIONSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_SHADEREXTENSIONSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_SHADEREXTENSIONSNOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEEXTENSIONSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEEXTENSIONSNOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_SHADEREXTENSIONSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_SHADEREXTENSIONSNOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEEXTENSIONSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_MINPRECISION = (D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_SHADEREXTENSIONSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_UAVSNOTSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_MINPRECISION + 1), D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_UAVSNOTSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_UAVSNOTSUPPORTED + 1), D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_UAVSNOTSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_UAVSNOTSUPPORTED + 1), D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_UAVSNOTSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_UAVSNOTSUPPORTED + 1), D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UAVSNOTSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_UAVSNOTSUPPORTED + 1), D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_UAVSNOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UAVSNOTSUPPORTED +
        1), D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_UAVSNOTSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_UAVSNOTSUPPORTED + 1), D3D12_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_INVALIDOFFSET = (
        D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_UAVSNOTSUPPORTED + 1), D3D12_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_TOOMANYVIEWS = (D3D12_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_INVALIDOFFSET +
        1), D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_NOTSUPPORTED = (D3D12_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_TOOMANYVIEWS +
        1), D3D12_MESSAGE_ID_SWAPDEVICECONTEXTSTATE_NOTSUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_NOTSUPPORTED + 1), D3D12_MESSAGE_ID_UPDATESUBRESOURCE_PREFERUPDATESUBRESOURCE1 = (
        D3D12_MESSAGE_ID_SWAPDEVICECONTEXTSTATE_NOTSUPPORTED + 1), D3D12_MESSAGE_ID_GETDC_INACCESSIBLE = (
        D3D12_MESSAGE_ID_UPDATESUBRESOURCE_PREFERUPDATESUBRESOURCE1 + 1), D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDRECT = (
        D3D12_MESSAGE_ID_GETDC_INACCESSIBLE + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_SAMPLE_MASK_IGNORED_ON_FL9 = (
        D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDRECT + 1), D3D12_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE1_NOT_SUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_DRAW_SAMPLE_MASK_IGNORED_ON_FL9 + 1), D3D12_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_BY_NAME_NOT_SUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE1_NOT_SUPPORTED + 1), D3D12_MESSAGE_ID_ENQUEUESETEVENT_NOT_SUPPORTED = (
        D3D12_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_BY_NAME_NOT_SUPPORTED + 1), D3D12_MESSAGE_ID_OFFERRELEASE_NOT_SUPPORTED = (
        D3D12_MESSAGE_ID_ENQUEUESETEVENT_NOT_SUPPORTED + 1), D3D12_MESSAGE_ID_OFFERRESOURCES_INACCESSIBLE = (
        D3D12_MESSAGE_ID_OFFERRELEASE_NOT_SUPPORTED + 1), D3D12_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDMSAA = (
        D3D12_MESSAGE_ID_OFFERRESOURCES_INACCESSIBLE + 1), D3D12_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDMSAA = (
        D3D12_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDMSAA + 1), D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDSOURCERECT = (
        D3D12_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDMSAA + 1), D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_EMPTYRECT = (
        D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDSOURCERECT + 1), D3D12_MESSAGE_ID_UPDATESUBRESOURCE_EMPTYDESTBOX = (
        D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_EMPTYRECT + 1), D3D12_MESSAGE_ID_COPYSUBRESOURCEREGION_EMPTYSOURCEBOX = (
        D3D12_MESSAGE_ID_UPDATESUBRESOURCE_EMPTYDESTBOX + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_OM_RENDER_TARGET_DOES_NOT_SUPPORT_LOGIC_OPS = (
        D3D12_MESSAGE_ID_COPYSUBRESOURCEREGION_EMPTYSOURCEBOX + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_DEPTHSTENCILVIEW_NOT_SET = (D3D12_MESSAGE_ID_DEVICE_DRAW_OM_RENDER_TARGET_DOES_NOT_SUPPORT_LOGIC_OPS +
        1), D3D12_MESSAGE_ID_DEVICE_DRAW_RENDERTARGETVIEW_NOT_SET = (
        D3D12_MESSAGE_ID_DEVICE_DRAW_DEPTHSTENCILVIEW_NOT_SET + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_RENDERTARGETVIEW_NOT_SET_DUE_TO_FLIP_PRESENT = (
        D3D12_MESSAGE_ID_DEVICE_DRAW_RENDERTARGETVIEW_NOT_SET + 1), D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_NOT_SET_DUE_TO_FLIP_PRESENT = (D3D12_MESSAGE_ID_DEVICE_DRAW_RENDERTARGETVIEW_NOT_SET_DUE_TO_FLIP_PRESENT +
        1), D3D12_MESSAGE_ID_GETDATAFORNEWHARDWAREKEY_NULLPARAM = (D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_NOT_SET_DUE_TO_FLIP_PRESENT +
        1), D3D12_MESSAGE_ID_CHECKCRYPTOSESSIONSTATUS_NULLPARAM = (
        D3D12_MESSAGE_ID_GETDATAFORNEWHARDWAREKEY_NULLPARAM + 1), D3D12_MESSAGE_ID_SETEVENTONHARDWARECONTENTPROTECTIONTILT_NULLPARAM = (
        D3D12_MESSAGE_ID_CHECKCRYPTOSESSIONSTATUS_NULLPARAM + 1), D3D12_MESSAGE_ID_GETVIDEODECODERCAPS_NULLPARAM = (
        D3D12_MESSAGE_ID_SETEVENTONHARDWARECONTENTPROTECTIONTILT_NULLPARAM + 1), D3D12_MESSAGE_ID_GETVIDEODECODERCAPS_ZEROWIDTHHEIGHT = (
        D3D12_MESSAGE_ID_GETVIDEODECODERCAPS_NULLPARAM + 1), D3D12_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_NULLPARAM = (
        D3D12_MESSAGE_ID_GETVIDEODECODERCAPS_ZEROWIDTHHEIGHT + 1), D3D12_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_INVALIDCOLORSPACE = (
        D3D12_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_NULLPARAM + 1), D3D12_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_ZEROWIDTHHEIGHT = (
        D3D12_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_INVALIDCOLORSPACE + 1), D3D12_MESSAGE_ID_VIDEODECODERENABLEDOWNSAMPLING_NULLPARAM = (
        D3D12_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_ZEROWIDTHHEIGHT + 1), D3D12_MESSAGE_ID_VIDEODECODERENABLEDOWNSAMPLING_UNSUPPORTED = (
        D3D12_MESSAGE_ID_VIDEODECODERENABLEDOWNSAMPLING_NULLPARAM + 1), D3D12_MESSAGE_ID_VIDEODECODERUPDATEDOWNSAMPLING_NULLPARAM = (
        D3D12_MESSAGE_ID_VIDEODECODERENABLEDOWNSAMPLING_UNSUPPORTED + 1), D3D12_MESSAGE_ID_VIDEODECODERUPDATEDOWNSAMPLING_UNSUPPORTED = (
        D3D12_MESSAGE_ID_VIDEODECODERUPDATEDOWNSAMPLING_NULLPARAM + 1), D3D12_MESSAGE_ID_CHECKVIDEOPROCESSORFORMATCONVERSION_NULLPARAM = (
        D3D12_MESSAGE_ID_VIDEODECODERUPDATEDOWNSAMPLING_UNSUPPORTED + 1), D3D12_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCOLORSPACE1_NULLPARAM = (
        D3D12_MESSAGE_ID_CHECKVIDEOPROCESSORFORMATCONVERSION_NULLPARAM + 1), D3D12_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTCOLORSPACE1_NULLPARAM = (
        D3D12_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCOLORSPACE1_NULLPARAM + 1), D3D12_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE1_NULLPARAM = (
        D3D12_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTCOLORSPACE1_NULLPARAM + 1), D3D12_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE1_INVALIDSTREAM = (
        D3D12_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE1_NULLPARAM + 1), D3D12_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_NULLPARAM = (
        D3D12_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE1_INVALIDSTREAM + 1), D3D12_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_INVALIDSTREAM = (
        D3D12_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_NULLPARAM + 1), D3D12_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_UNSUPPORTED = (
        D3D12_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_INVALIDSTREAM + 1), D3D12_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE1_NULLPARAM = (
        D3D12_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_UNSUPPORTED + 1), D3D12_MESSAGE_ID_VIDEOPROCESSORGETSTREAMMIRROR_NULLPARAM = (
        D3D12_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE1_NULLPARAM + 1), D3D12_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_NULLPARAM = (
        D3D12_MESSAGE_ID_VIDEOPROCESSORGETSTREAMMIRROR_NULLPARAM + 1), D3D12_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_INVALIDCOLORSPACE = (
        D3D12_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_NULLPARAM + 1), D3D12_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_ZEROWIDTHHEIGHT = (D3D12_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_INVALIDCOLORSPACE +
        1), D3D12_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTSHADERUSAGE_NULLPARAM = (
        D3D12_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_ZEROWIDTHHEIGHT + 1), D3D12_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTSHADERUSAGE_NULLPARAM = (
        D3D12_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTSHADERUSAGE_NULLPARAM + 1), D3D12_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_NULLPARAM = (
        D3D12_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTSHADERUSAGE_NULLPARAM + 1), D3D12_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDSTREAMCOUNT = (
        D3D12_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_NULLPARAM + 1), D3D12_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_TARGETRECT = (
        D3D12_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDSTREAMCOUNT + 1), D3D12_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDSOURCERECT = (
        D3D12_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_TARGETRECT + 1), D3D12_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDDESTRECT = (
        D3D12_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDSOURCERECT + 1), D3D12_MESSAGE_ID_CREATEBUFFER_INVALIDUSAGE = (
        D3D12_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDDESTRECT + 1), D3D12_MESSAGE_ID_CREATETEXTURE1D_INVALIDUSAGE = (
        D3D12_MESSAGE_ID_CREATEBUFFER_INVALIDUSAGE + 1), D3D12_MESSAGE_ID_CREATETEXTURE2D_INVALIDUSAGE = (
        D3D12_MESSAGE_ID_CREATETEXTURE1D_INVALIDUSAGE + 1), D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_LEVEL9_STEPRATE_NOT_1 = (
        D3D12_MESSAGE_ID_CREATETEXTURE2D_INVALIDUSAGE + 1), D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_LEVEL9_INSTANCING_NOT_SUPPORTED = (
        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_LEVEL9_STEPRATE_NOT_1 + 1), D3D12_MESSAGE_ID_UPDATETILEMAPPINGS_INVALID_PARAMETER = (
        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_LEVEL9_INSTANCING_NOT_SUPPORTED + 1), D3D12_MESSAGE_ID_COPYTILEMAPPINGS_INVALID_PARAMETER = (
        D3D12_MESSAGE_ID_UPDATETILEMAPPINGS_INVALID_PARAMETER + 1), D3D12_MESSAGE_ID_COPYTILES_INVALID_PARAMETER = (
        D3D12_MESSAGE_ID_COPYTILEMAPPINGS_INVALID_PARAMETER + 1), D3D12_MESSAGE_ID_NULL_TILE_MAPPING_ACCESS_WARNING = (
        D3D12_MESSAGE_ID_COPYTILES_INVALID_PARAMETER + 1), D3D12_MESSAGE_ID_NULL_TILE_MAPPING_ACCESS_ERROR = (
        D3D12_MESSAGE_ID_NULL_TILE_MAPPING_ACCESS_WARNING + 1), D3D12_MESSAGE_ID_DIRTY_TILE_MAPPING_ACCESS = (
        D3D12_MESSAGE_ID_NULL_TILE_MAPPING_ACCESS_ERROR + 1), D3D12_MESSAGE_ID_DUPLICATE_TILE_MAPPINGS_IN_COVERED_AREA = (
        D3D12_MESSAGE_ID_DIRTY_TILE_MAPPING_ACCESS + 1), D3D12_MESSAGE_ID_TILE_MAPPINGS_IN_COVERED_AREA_DUPLICATED_OUTSIDE = (
        D3D12_MESSAGE_ID_DUPLICATE_TILE_MAPPINGS_IN_COVERED_AREA + 1), D3D12_MESSAGE_ID_TILE_MAPPINGS_SHARED_BETWEEN_INCOMPATIBLE_RESOURCES = (
        D3D12_MESSAGE_ID_TILE_MAPPINGS_IN_COVERED_AREA_DUPLICATED_OUTSIDE + 1), D3D12_MESSAGE_ID_TILE_MAPPINGS_SHARED_BETWEEN_INPUT_AND_OUTPUT = (D3D12_MESSAGE_ID_TILE_MAPPINGS_SHARED_BETWEEN_INCOMPATIBLE_RESOURCES +
        1), D3D12_MESSAGE_ID_CHECKMULTISAMPLEQUALITYLEVELS_INVALIDFLAGS = (
        D3D12_MESSAGE_ID_TILE_MAPPINGS_SHARED_BETWEEN_INPUT_AND_OUTPUT + 1), D3D12_MESSAGE_ID_GETRESOURCETILING_NONTILED_RESOURCE = (
        D3D12_MESSAGE_ID_CHECKMULTISAMPLEQUALITYLEVELS_INVALIDFLAGS + 1), D3D12_MESSAGE_ID_NEED_TO_CALL_TILEDRESOURCEBARRIER = (
        D3D12_MESSAGE_ID_GETRESOURCETILING_NONTILED_RESOURCE + 1), D3D12_MESSAGE_ID_CREATEDEVICE_INVALIDARGS = (
        D3D12_MESSAGE_ID_NEED_TO_CALL_TILEDRESOURCEBARRIER + 1), D3D12_MESSAGE_ID_CREATEDEVICE_WARNING = (
        D3D12_MESSAGE_ID_CREATEDEVICE_INVALIDARGS + 1), D3D12_MESSAGE_ID_TILED_RESOURCE_TIER_1_BUFFER_TEXTURE_MISMATCH = (
        D3D12_MESSAGE_ID_CREATEDEVICE_WARNING + 1), D3D12_MESSAGE_ID_CREATE_CRYPTOSESSION = (
        D3D12_MESSAGE_ID_TILED_RESOURCE_TIER_1_BUFFER_TEXTURE_MISMATCH + 1), D3D12_MESSAGE_ID_CREATE_AUTHENTICATEDCHANNEL = (
        D3D12_MESSAGE_ID_CREATE_CRYPTOSESSION + 1), D3D12_MESSAGE_ID_LIVE_CRYPTOSESSION = (
        D3D12_MESSAGE_ID_CREATE_AUTHENTICATEDCHANNEL + 1), D3D12_MESSAGE_ID_LIVE_AUTHENTICATEDCHANNEL = (
        D3D12_MESSAGE_ID_LIVE_CRYPTOSESSION + 1), D3D12_MESSAGE_ID_DESTROY_CRYPTOSESSION = (
        D3D12_MESSAGE_ID_LIVE_AUTHENTICATEDCHANNEL + 1), D3D12_MESSAGE_ID_DESTROY_AUTHENTICATEDCHANNEL = (
        D3D12_MESSAGE_ID_DESTROY_CRYPTOSESSION + 1), D3D12_MESSAGE_ID_MAP_INVALID_SUBRESOURCE = (
        D3D12_MESSAGE_ID_DESTROY_AUTHENTICATEDCHANNEL + 1), D3D12_MESSAGE_ID_MAP_INVALID_TYPE = (
        D3D12_MESSAGE_ID_MAP_INVALID_SUBRESOURCE + 1), D3D12_MESSAGE_ID_MAP_UNSUPPORTED_TYPE = (
        D3D12_MESSAGE_ID_MAP_INVALID_TYPE + 1), D3D12_MESSAGE_ID_UNMAP_INVALID_SUBRESOURCE = (
        D3D12_MESSAGE_ID_MAP_UNSUPPORTED_TYPE + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_TYPE = (
        D3D12_MESSAGE_ID_UNMAP_INVALID_SUBRESOURCE + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_NULL_POINTER = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_TYPE + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_SUBRESOURCE = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_NULL_POINTER + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_RESERVED_BITS = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_SUBRESOURCE + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISSING_BIND_FLAGS = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_RESERVED_BITS + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISMATCHING_MISC_FLAGS = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISSING_BIND_FLAGS + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_MATCHING_STATES = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISMATCHING_MISC_FLAGS + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMBINATION = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_MATCHING_STATES + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_BEFORE_AFTER_MISMATCH = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMBINATION + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_RESOURCE = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_BEFORE_AFTER_MISMATCH + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_SAMPLE_COUNT = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_RESOURCE + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAGS = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_SAMPLE_COUNT + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMBINED_FLAGS = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAGS + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAGS_FOR_FORMAT = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMBINED_FLAGS + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_SPLIT_BARRIER = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAGS_FOR_FORMAT + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_UNMATCHED_END = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_SPLIT_BARRIER + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_UNMATCHED_BEGIN = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_UNMATCHED_END + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAG = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_UNMATCHED_BEGIN + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMMAND_LIST_TYPE = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAG + 1), D3D12_MESSAGE_ID_INVALID_SUBRESOURCE_STATE = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMMAND_LIST_TYPE + 1), D3D12_MESSAGE_ID_INEFFICIENT_PRESENT = (
        D3D12_MESSAGE_ID_INVALID_SUBRESOURCE_STATE + 1), D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_CONTENTION = (
        D3D12_MESSAGE_ID_INEFFICIENT_PRESENT + 1), D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_RESET = (
        D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_CONTENTION + 1), D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_RESET_BUNDLE = (
        D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_RESET + 1), D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_CANNOT_RESET = (
        D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_RESET_BUNDLE + 1), D3D12_MESSAGE_ID_COMMAND_LIST_OPEN = (
        D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_CANNOT_RESET + 1), D3D12_MESSAGE_ID_QUERY_STATE_MISMATCH = (
        D3D12_MESSAGE_ID_COMMAND_LIST_OPEN + 1), D3D12_MESSAGE_ID_INVALID_BUNDLE_API = (
        D3D12_MESSAGE_ID_QUERY_STATE_MISMATCH + 1), D3D12_MESSAGE_ID_COMMAND_LIST_CLOSED = (
        D3D12_MESSAGE_ID_INVALID_BUNDLE_API + 1), D3D12_MESSAGE_ID_COMMAND_LIST_CLOSED_WITH_INVALID_RESOURCE = (
        D3D12_MESSAGE_ID_COMMAND_LIST_CLOSED + 1), D3D12_MESSAGE_ID_WRONG_COMMAND_ALLOCATOR_TYPE = (
        D3D12_MESSAGE_ID_COMMAND_LIST_CLOSED_WITH_INVALID_RESOURCE + 1), D3D12_MESSAGE_ID_INVALID_INDIRECT_ARGUMENT_BUFFER = (
        D3D12_MESSAGE_ID_WRONG_COMMAND_ALLOCATOR_TYPE + 1), D3D12_MESSAGE_ID_COMPUTE_AND_GRAPHICS_PIPELINE = (
        D3D12_MESSAGE_ID_INVALID_INDIRECT_ARGUMENT_BUFFER + 1), D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_SYNC = (
        D3D12_MESSAGE_ID_COMPUTE_AND_GRAPHICS_PIPELINE + 1), D3D12_MESSAGE_ID_COMMAND_LIST_SYNC = (
        D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_SYNC + 1), D3D12_MESSAGE_ID_SET_DESCRIPTOR_HEAP_INVALID = (
        D3D12_MESSAGE_ID_COMMAND_LIST_SYNC + 1), D3D12_MESSAGE_ID_CREATE_QUEUE_IMAGE_NOT_SUPPORTED = (
        D3D12_MESSAGE_ID_SET_DESCRIPTOR_HEAP_INVALID + 1), D3D12_MESSAGE_ID_CREATE_COMMAND_ALLOCATOR_IMAGE_NOT_SUPPORTED = (
        D3D12_MESSAGE_ID_CREATE_QUEUE_IMAGE_NOT_SUPPORTED + 1), D3D12_MESSAGE_ID_CREATE_COMMANDQUEUE = (
        D3D12_MESSAGE_ID_CREATE_COMMAND_ALLOCATOR_IMAGE_NOT_SUPPORTED + 1), D3D12_MESSAGE_ID_CREATE_COMMANDALLOCATOR = (
        D3D12_MESSAGE_ID_CREATE_COMMANDQUEUE + 1), D3D12_MESSAGE_ID_CREATE_PIPELINESTATE = (
        D3D12_MESSAGE_ID_CREATE_COMMANDALLOCATOR + 1), D3D12_MESSAGE_ID_CREATE_COMMANDLIST12 = (
        D3D12_MESSAGE_ID_CREATE_PIPELINESTATE + 1), D3D12_MESSAGE_ID_CREATE_IMAGECOMMANDLIST = (
        D3D12_MESSAGE_ID_CREATE_COMMANDLIST12 + 1), D3D12_MESSAGE_ID_CREATE_RESOURCE = (
        D3D12_MESSAGE_ID_CREATE_IMAGECOMMANDLIST + 1), D3D12_MESSAGE_ID_CREATE_DESCRIPTORHEAP = (
        D3D12_MESSAGE_ID_CREATE_RESOURCE + 1), D3D12_MESSAGE_ID_CREATE_ROOTSIGNATURE = (
        D3D12_MESSAGE_ID_CREATE_DESCRIPTORHEAP + 1), D3D12_MESSAGE_ID_CREATE_LIBRARY = (
        D3D12_MESSAGE_ID_CREATE_ROOTSIGNATURE + 1),
    D3D12_MESSAGE_ID_CREATE_HEAP = (D3D12_MESSAGE_ID_CREATE_LIBRARY + 1), D3D12_MESSAGE_ID_CREATE_MONITOREDFENCE = (
        D3D12_MESSAGE_ID_CREATE_HEAP + 1), D3D12_MESSAGE_ID_CREATE_QUERYHEAP = (
        D3D12_MESSAGE_ID_CREATE_MONITOREDFENCE + 1), D3D12_MESSAGE_ID_CREATE_COMMANDSIGNATURE = (
        D3D12_MESSAGE_ID_CREATE_QUERYHEAP + 1), D3D12_MESSAGE_ID_LIVE_COMMANDQUEUE = (
        D3D12_MESSAGE_ID_CREATE_COMMANDSIGNATURE + 1), D3D12_MESSAGE_ID_LIVE_COMMANDALLOCATOR = (
        D3D12_MESSAGE_ID_LIVE_COMMANDQUEUE + 1), D3D12_MESSAGE_ID_LIVE_PIPELINESTATE = (
        D3D12_MESSAGE_ID_LIVE_COMMANDALLOCATOR + 1), D3D12_MESSAGE_ID_LIVE_COMMANDLIST12 = (
        D3D12_MESSAGE_ID_LIVE_PIPELINESTATE + 1), D3D12_MESSAGE_ID_LIVE_IMAGECOMMANDLIST = (
        D3D12_MESSAGE_ID_LIVE_COMMANDLIST12 + 1), D3D12_MESSAGE_ID_LIVE_RESOURCE = (
        D3D12_MESSAGE_ID_LIVE_IMAGECOMMANDLIST + 1), D3D12_MESSAGE_ID_LIVE_DESCRIPTORHEAP = (
        D3D12_MESSAGE_ID_LIVE_RESOURCE + 1), D3D12_MESSAGE_ID_LIVE_ROOTSIGNATURE = (
        D3D12_MESSAGE_ID_LIVE_DESCRIPTORHEAP + 1),
    D3D12_MESSAGE_ID_LIVE_LIBRARY = (D3D12_MESSAGE_ID_LIVE_ROOTSIGNATURE + 1),
    D3D12_MESSAGE_ID_LIVE_HEAP = (D3D12_MESSAGE_ID_LIVE_LIBRARY + 1),
    D3D12_MESSAGE_ID_LIVE_MONITOREDFENCE = (D3D12_MESSAGE_ID_LIVE_HEAP + 1), D3D12_MESSAGE_ID_LIVE_QUERYHEAP = (
        D3D12_MESSAGE_ID_LIVE_MONITOREDFENCE + 1), D3D12_MESSAGE_ID_LIVE_COMMANDSIGNATURE = (
        D3D12_MESSAGE_ID_LIVE_QUERYHEAP + 1), D3D12_MESSAGE_ID_DESTROY_COMMANDQUEUE = (
        D3D12_MESSAGE_ID_LIVE_COMMANDSIGNATURE + 1), D3D12_MESSAGE_ID_DESTROY_COMMANDALLOCATOR = (
        D3D12_MESSAGE_ID_DESTROY_COMMANDQUEUE + 1), D3D12_MESSAGE_ID_DESTROY_PIPELINESTATE = (
        D3D12_MESSAGE_ID_DESTROY_COMMANDALLOCATOR + 1), D3D12_MESSAGE_ID_DESTROY_COMMANDLIST12 = (
        D3D12_MESSAGE_ID_DESTROY_PIPELINESTATE + 1), D3D12_MESSAGE_ID_DESTROY_IMAGECOMMANDLIST = (
        D3D12_MESSAGE_ID_DESTROY_COMMANDLIST12 + 1), D3D12_MESSAGE_ID_DESTROY_RESOURCE = (
        D3D12_MESSAGE_ID_DESTROY_IMAGECOMMANDLIST + 1), D3D12_MESSAGE_ID_DESTROY_DESCRIPTORHEAP = (
        D3D12_MESSAGE_ID_DESTROY_RESOURCE + 1), D3D12_MESSAGE_ID_DESTROY_ROOTSIGNATURE = (
        D3D12_MESSAGE_ID_DESTROY_DESCRIPTORHEAP + 1), D3D12_MESSAGE_ID_DESTROY_LIBRARY = (
        D3D12_MESSAGE_ID_DESTROY_ROOTSIGNATURE + 1),
    D3D12_MESSAGE_ID_DESTROY_HEAP = (D3D12_MESSAGE_ID_DESTROY_LIBRARY + 1), D3D12_MESSAGE_ID_DESTROY_MONITOREDFENCE = (
        D3D12_MESSAGE_ID_DESTROY_HEAP + 1), D3D12_MESSAGE_ID_DESTROY_QUERYHEAP = (
        D3D12_MESSAGE_ID_DESTROY_MONITOREDFENCE + 1), D3D12_MESSAGE_ID_DESTROY_COMMANDSIGNATURE = (
        D3D12_MESSAGE_ID_DESTROY_QUERYHEAP + 1), D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDHEAPTYPE = (
        D3D12_MESSAGE_ID_DESTROY_COMMANDSIGNATURE + 1), D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDIMENSIONS = (
        D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDHEAPTYPE + 1), D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDMISCFLAGS = (
        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDIMENSIONS + 1), D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDMISCFLAGS = (
        D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDMISCFLAGS + 1), D3D12_MESSAGE_ID_CREATERESOURCE_LARGEALLOCATION = (
        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDMISCFLAGS + 1), D3D12_MESSAGE_ID_CREATERESOURCE_SMALLALLOCATION = (
        D3D12_MESSAGE_ID_CREATERESOURCE_LARGEALLOCATION + 1), D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDARG_RETURN = (
        D3D12_MESSAGE_ID_CREATERESOURCE_SMALLALLOCATION + 1), D3D12_MESSAGE_ID_CREATERESOURCE_OUTOFMEMORY_RETURN = (
        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDARG_RETURN + 1), D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDESC = (
        D3D12_MESSAGE_ID_CREATERESOURCE_OUTOFMEMORY_RETURN + 1), D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDINITIALSTATE = (
        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDESC + 1), D3D12_MESSAGE_ID_RESOURCE_HAS_PENDING_INITIAL_DATA = (
        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDINITIALSTATE + 1), D3D12_MESSAGE_ID_POSSIBLY_INVALID_SUBRESOURCE_STATE = (
        D3D12_MESSAGE_ID_RESOURCE_HAS_PENDING_INITIAL_DATA + 1), D3D12_MESSAGE_ID_INVALID_USE_OF_NON_RESIDENT_RESOURCE = (
        D3D12_MESSAGE_ID_POSSIBLY_INVALID_SUBRESOURCE_STATE + 1), D3D12_MESSAGE_ID_POSSIBLE_INVALID_USE_OF_NON_RESIDENT_RESOURCE = (
        D3D12_MESSAGE_ID_INVALID_USE_OF_NON_RESIDENT_RESOURCE + 1), D3D12_MESSAGE_ID_BUNDLE_PIPELINE_STATE_MISMATCH = (
        D3D12_MESSAGE_ID_POSSIBLE_INVALID_USE_OF_NON_RESIDENT_RESOURCE + 1), D3D12_MESSAGE_ID_PRIMITIVE_TOPOLOGY_MISMATCH_PIPELINE_STATE = (
        D3D12_MESSAGE_ID_BUNDLE_PIPELINE_STATE_MISMATCH + 1), D3D12_MESSAGE_ID_RENDER_TARGET_NUMBER_MISMATCH_PIPELINE_STATE = (
        D3D12_MESSAGE_ID_PRIMITIVE_TOPOLOGY_MISMATCH_PIPELINE_STATE + 1), D3D12_MESSAGE_ID_RENDER_TARGET_FORMAT_MISMATCH_PIPELINE_STATE = (
        D3D12_MESSAGE_ID_RENDER_TARGET_NUMBER_MISMATCH_PIPELINE_STATE + 1), D3D12_MESSAGE_ID_RENDER_TARGET_SAMPLE_DESC_MISMATCH_PIPELINE_STATE = (
        D3D12_MESSAGE_ID_RENDER_TARGET_FORMAT_MISMATCH_PIPELINE_STATE + 1), D3D12_MESSAGE_ID_DEPTH_STENCIL_FORMAT_MISMATCH_PIPELINE_STATE = (
        D3D12_MESSAGE_ID_RENDER_TARGET_SAMPLE_DESC_MISMATCH_PIPELINE_STATE + 1), D3D12_MESSAGE_ID_DEPTH_STENCIL_SAMPLE_DESC_MISMATCH_PIPELINE_STATE = (
        D3D12_MESSAGE_ID_DEPTH_STENCIL_FORMAT_MISMATCH_PIPELINE_STATE + 1), D3D12_MESSAGE_ID_RENDER_TARGET_NUMBER_MISMATCH_BUNDLE_PIPELINE_STATE = (
        D3D12_MESSAGE_ID_DEPTH_STENCIL_SAMPLE_DESC_MISMATCH_PIPELINE_STATE + 1), D3D12_MESSAGE_ID_RENDER_TARGET_FORMAT_MISMATCH_BUNDLE_PIPELINE_STATE = (D3D12_MESSAGE_ID_RENDER_TARGET_NUMBER_MISMATCH_BUNDLE_PIPELINE_STATE +
        1), D3D12_MESSAGE_ID_RENDER_TARGET_SAMPLE_DESC_MISMATCH_BUNDLE_PIPELINE_STATE = (D3D12_MESSAGE_ID_RENDER_TARGET_FORMAT_MISMATCH_BUNDLE_PIPELINE_STATE +
        1), D3D12_MESSAGE_ID_DEPTH_STENCIL_FORMAT_MISMATCH_BUNDLE_PIPELINE_STATE = (D3D12_MESSAGE_ID_RENDER_TARGET_SAMPLE_DESC_MISMATCH_BUNDLE_PIPELINE_STATE +
        1), D3D12_MESSAGE_ID_DEPTH_STENCIL_SAMPLE_DESC_MISMATCH_BUNDLE_PIPELINE_STATE = (D3D12_MESSAGE_ID_DEPTH_STENCIL_FORMAT_MISMATCH_BUNDLE_PIPELINE_STATE +
        1), D3D12_MESSAGE_ID_CREATESHADER_INVALIDBYTECODE = (D3D12_MESSAGE_ID_DEPTH_STENCIL_SAMPLE_DESC_MISMATCH_BUNDLE_PIPELINE_STATE +
        1), D3D12_MESSAGE_ID_CREATEHEAP_NULLDESC = (
        D3D12_MESSAGE_ID_CREATESHADER_INVALIDBYTECODE + 1), D3D12_MESSAGE_ID_CREATEHEAP_INVALIDSIZE = (
        D3D12_MESSAGE_ID_CREATEHEAP_NULLDESC + 1), D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDHEAPTYPE = (
        D3D12_MESSAGE_ID_CREATEHEAP_INVALIDSIZE + 1), D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDCPUPAGEPROPERTIES = (
        D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDHEAPTYPE + 1), D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDMEMORYPOOL = (
        D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDCPUPAGEPROPERTIES + 1), D3D12_MESSAGE_ID_CREATEHEAP_INVALIDPROPERTIES = (
        D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDMEMORYPOOL + 1), D3D12_MESSAGE_ID_CREATEHEAP_INVALIDALIGNMENT = (
        D3D12_MESSAGE_ID_CREATEHEAP_INVALIDPROPERTIES + 1), D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDMISCFLAGS = (
        D3D12_MESSAGE_ID_CREATEHEAP_INVALIDALIGNMENT + 1), D3D12_MESSAGE_ID_CREATEHEAP_INVALIDMISCFLAGS = (
        D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDMISCFLAGS + 1), D3D12_MESSAGE_ID_CREATEHEAP_INVALIDARG_RETURN = (
        D3D12_MESSAGE_ID_CREATEHEAP_INVALIDMISCFLAGS + 1), D3D12_MESSAGE_ID_CREATEHEAP_OUTOFMEMORY_RETURN = (
        D3D12_MESSAGE_ID_CREATEHEAP_INVALIDARG_RETURN + 1), D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLHEAPPROPERTIES = (
        D3D12_MESSAGE_ID_CREATEHEAP_OUTOFMEMORY_RETURN + 1), D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDHEAPTYPE = (
        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLHEAPPROPERTIES + 1), D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDCPUPAGEPROPERTIES = (
        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDHEAPTYPE + 1), D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDMEMORYPOOL = (D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDCPUPAGEPROPERTIES +
        1), D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDHEAPPROPERTIES = (
        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDMEMORYPOOL + 1), D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDHEAPMISCFLAGS = (
        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDHEAPPROPERTIES + 1), D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDHEAPMISCFLAGS = (
        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDHEAPMISCFLAGS + 1), D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDARG_RETURN = (
        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDHEAPMISCFLAGS + 1), D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_OUTOFMEMORY_RETURN = (
        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDARG_RETURN + 1), D3D12_MESSAGE_ID_GETCUSTOMHEAPPROPERTIES_UNRECOGNIZEDHEAPTYPE = (
        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_OUTOFMEMORY_RETURN + 1), D3D12_MESSAGE_ID_GETCUSTOMHEAPPROPERTIES_INVALIDHEAPTYPE = (
        D3D12_MESSAGE_ID_GETCUSTOMHEAPPROPERTIES_UNRECOGNIZEDHEAPTYPE + 1), D3D12_MESSAGE_ID_CREATE_DESCRIPTOR_HEAP_INVALID_DESC = (
        D3D12_MESSAGE_ID_GETCUSTOMHEAPPROPERTIES_INVALIDHEAPTYPE + 1), D3D12_MESSAGE_ID_INVALID_DESCRIPTOR_HANDLE = (
        D3D12_MESSAGE_ID_CREATE_DESCRIPTOR_HEAP_INVALID_DESC + 1), D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALID_CONSERVATIVERASTERMODE = (
        D3D12_MESSAGE_ID_INVALID_DESCRIPTOR_HANDLE + 1), D3D12_MESSAGE_ID_DEVICE_DRAW_INVALID_SYSTEMVALUE = (D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALID_CONSERVATIVERASTERMODE +
        1), D3D12_MESSAGE_ID_CREATE_CONSTANT_BUFFER_VIEW_INVALID_RESOURCE = (
        D3D12_MESSAGE_ID_DEVICE_DRAW_INVALID_SYSTEMVALUE + 1), D3D12_MESSAGE_ID_CREATE_CONSTANT_BUFFER_VIEW_INVALID_DESC = (
        D3D12_MESSAGE_ID_CREATE_CONSTANT_BUFFER_VIEW_INVALID_RESOURCE + 1), D3D12_MESSAGE_ID_CREATE_CONSTANT_BUFFER_VIEW_LARGE_OFFSET = (
        D3D12_MESSAGE_ID_CREATE_CONSTANT_BUFFER_VIEW_INVALID_DESC + 1), D3D12_MESSAGE_ID_CREATE_UNORDEREDACCESS_VIEW_INVALID_COUNTER_USAGE = (
        D3D12_MESSAGE_ID_CREATE_CONSTANT_BUFFER_VIEW_LARGE_OFFSET + 1), D3D12_MESSAGE_ID_COPY_DESCRIPTORS_INVALID_RANGES = (
        D3D12_MESSAGE_ID_CREATE_UNORDEREDACCESS_VIEW_INVALID_COUNTER_USAGE + 1), D3D12_MESSAGE_ID_COPY_DESCRIPTORS_WRITE_ONLY_DESCRIPTOR = (
        D3D12_MESSAGE_ID_COPY_DESCRIPTORS_INVALID_RANGES + 1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RTV_FORMAT_NOT_UNKNOWN = (
        D3D12_MESSAGE_ID_COPY_DESCRIPTORS_WRITE_ONLY_DESCRIPTOR + 1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_RENDER_TARGET_COUNT = (
        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RTV_FORMAT_NOT_UNKNOWN + 1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_VERTEX_SHADER_NOT_SET = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_RENDER_TARGET_COUNT +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INPUTLAYOUT_NOT_SET = (
        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_VERTEX_SHADER_NOT_SET + 1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_HS_DS_SIGNATURE_MISMATCH = (
        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INPUTLAYOUT_NOT_SET + 1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_REGISTERINDEX = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_HS_DS_SIGNATURE_MISMATCH +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_COMPONENTTYPE = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_REGISTERINDEX +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_REGISTERMASK = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_COMPONENTTYPE +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_SYSTEMVALUE = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_REGISTERMASK +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_NEVERWRITTEN_ALWAYSREADS = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_SYSTEMVALUE +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_MINPRECISION = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_NEVERWRITTEN_ALWAYSREADS +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_SEMANTICNAME_NOT_FOUND = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_MINPRECISION +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_XOR_DS_MISMATCH = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_SEMANTICNAME_NOT_FOUND +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HULL_SHADER_INPUT_TOPOLOGY_MISMATCH = (
        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_XOR_DS_MISMATCH + 1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_DS_CONTROL_POINT_COUNT_MISMATCH = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HULL_SHADER_INPUT_TOPOLOGY_MISMATCH +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_DS_TESSELLATOR_DOMAIN_MISMATCH = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_DS_CONTROL_POINT_COUNT_MISMATCH +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_USE_OF_CENTER_MULTISAMPLE_PATTERN = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_DS_TESSELLATOR_DOMAIN_MISMATCH +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_USE_OF_FORCED_SAMPLE_COUNT = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_USE_OF_CENTER_MULTISAMPLE_PATTERN +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_PRIMITIVETOPOLOGY = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_USE_OF_FORCED_SAMPLE_COUNT +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_SYSTEMVALUE = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_PRIMITIVETOPOLOGY +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_DUAL_SOURCE_BLENDING_CAN_ONLY_HAVE_RENDER_TARGET_0 = (
        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_SYSTEMVALUE + 1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_RENDER_TARGET_DOES_NOT_SUPPORT_BLENDING = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_DUAL_SOURCE_BLENDING_CAN_ONLY_HAVE_RENDER_TARGET_0 +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_PS_OUTPUT_TYPE_MISMATCH = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_RENDER_TARGET_DOES_NOT_SUPPORT_BLENDING +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_RENDER_TARGET_DOES_NOT_SUPPORT_LOGIC_OPS = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_PS_OUTPUT_TYPE_MISMATCH +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RENDERTARGETVIEW_NOT_SET = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_RENDER_TARGET_DOES_NOT_SUPPORT_LOGIC_OPS +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_DEPTHSTENCILVIEW_NOT_SET = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RENDERTARGETVIEW_NOT_SET +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_GS_INPUT_PRIMITIVE_MISMATCH = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_DEPTHSTENCILVIEW_NOT_SET +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_POSITION_NOT_PRESENT = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_GS_INPUT_PRIMITIVE_MISMATCH +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MISSING_ROOT_SIGNATURE_FLAGS = (
        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_POSITION_NOT_PRESENT + 1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_INDEX_BUFFER_PROPERTIES = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MISSING_ROOT_SIGNATURE_FLAGS +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_SAMPLE_DESC = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_INDEX_BUFFER_PROPERTIES +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_ROOT_SIGNATURE_MISMATCH = (
        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_SAMPLE_DESC + 1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_DS_ROOT_SIGNATURE_MISMATCH = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_ROOT_SIGNATURE_MISMATCH +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_VS_ROOT_SIGNATURE_MISMATCH = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_DS_ROOT_SIGNATURE_MISMATCH +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_GS_ROOT_SIGNATURE_MISMATCH = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_VS_ROOT_SIGNATURE_MISMATCH +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_PS_ROOT_SIGNATURE_MISMATCH = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_GS_ROOT_SIGNATURE_MISMATCH +
        1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MISSING_ROOT_SIGNATURE = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_PS_ROOT_SIGNATURE_MISMATCH +
        1), D3D12_MESSAGE_ID_EXECUTE_BUNDLE_OPEN_BUNDLE = (
        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MISSING_ROOT_SIGNATURE + 1), D3D12_MESSAGE_ID_EXECUTE_BUNDLE_DESCRIPTOR_HEAP_MISMATCH = (
        D3D12_MESSAGE_ID_EXECUTE_BUNDLE_OPEN_BUNDLE + 1), D3D12_MESSAGE_ID_EXECUTE_BUNDLE_TYPE = (
        D3D12_MESSAGE_ID_EXECUTE_BUNDLE_DESCRIPTOR_HEAP_MISMATCH + 1), D3D12_MESSAGE_ID_DRAW_EMPTY_SCISSOR_RECTANGLE = (
        D3D12_MESSAGE_ID_EXECUTE_BUNDLE_TYPE + 1), D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_BLOB_NOT_FOUND = (
        D3D12_MESSAGE_ID_DRAW_EMPTY_SCISSOR_RECTANGLE + 1), D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_DESERIALIZE_FAILED = (
        D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_BLOB_NOT_FOUND + 1), D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_INVALID_CONFIGURATION = (
        D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_DESERIALIZE_FAILED + 1), D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_NOT_SUPPORTED_ON_DEVICE = (
        D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_INVALID_CONFIGURATION + 1), D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLRESOURCEPROPERTIES = (
        D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_NOT_SUPPORTED_ON_DEVICE + 1), D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLHEAP = (
        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLRESOURCEPROPERTIES + 1), D3D12_MESSAGE_ID_GETRESOURCEALLOCATIONINFO_INVALIDRDESCS = (
        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLHEAP + 1), D3D12_MESSAGE_ID_MAKERESIDENT_NULLOBJECTARRAY = (
        D3D12_MESSAGE_ID_GETRESOURCEALLOCATIONINFO_INVALIDRDESCS + 1), D3D12_MESSAGE_ID_MAKERESIDENT_INVALIDOBJECT = (
        D3D12_MESSAGE_ID_MAKERESIDENT_NULLOBJECTARRAY + 1), D3D12_MESSAGE_ID_EVICT_NULLOBJECTARRAY = (
        D3D12_MESSAGE_ID_MAKERESIDENT_INVALIDOBJECT + 1), D3D12_MESSAGE_ID_EVICT_INVALIDOBJECT = (
        D3D12_MESSAGE_ID_EVICT_NULLOBJECTARRAY + 1), D3D12_MESSAGE_ID_HEAPS_UNSUPPORTED = (
        D3D12_MESSAGE_ID_EVICT_INVALIDOBJECT + 1), D3D12_MESSAGE_ID_SET_DESCRIPTOR_TABLE_INVALID = (
        D3D12_MESSAGE_ID_HEAPS_UNSUPPORTED + 1), D3D12_MESSAGE_ID_SET_ROOT_CONSTANT_INVALID = (
        D3D12_MESSAGE_ID_SET_DESCRIPTOR_TABLE_INVALID + 1), D3D12_MESSAGE_ID_SET_ROOT_CONSTANT_BUFFER_VIEW_INVALID = (
        D3D12_MESSAGE_ID_SET_ROOT_CONSTANT_INVALID + 1), D3D12_MESSAGE_ID_SET_ROOT_SHADER_RESOURCE_VIEW_INVALID = (
        D3D12_MESSAGE_ID_SET_ROOT_CONSTANT_BUFFER_VIEW_INVALID + 1), D3D12_MESSAGE_ID_SET_ROOT_UNORDERED_ACCESS_VIEW_INVALID = (
        D3D12_MESSAGE_ID_SET_ROOT_SHADER_RESOURCE_VIEW_INVALID + 1), D3D12_MESSAGE_ID_SET_VERTEX_BUFFERS_INVALID_DESC = (
        D3D12_MESSAGE_ID_SET_ROOT_UNORDERED_ACCESS_VIEW_INVALID + 1), D3D12_MESSAGE_ID_SET_VERTEX_BUFFERS_LARGE_OFFSET = (
        D3D12_MESSAGE_ID_SET_VERTEX_BUFFERS_INVALID_DESC + 1), D3D12_MESSAGE_ID_SET_INDEX_BUFFER_INVALID_DESC = (
        D3D12_MESSAGE_ID_SET_VERTEX_BUFFERS_LARGE_OFFSET + 1), D3D12_MESSAGE_ID_SET_INDEX_BUFFER_LARGE_OFFSET = (
        D3D12_MESSAGE_ID_SET_INDEX_BUFFER_INVALID_DESC + 1), D3D12_MESSAGE_ID_SET_STREAM_OUTPUT_BUFFERS_INVALID_DESC = (
        D3D12_MESSAGE_ID_SET_INDEX_BUFFER_LARGE_OFFSET + 1), D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDDIMENSIONALITY = (
        D3D12_MESSAGE_ID_SET_STREAM_OUTPUT_BUFFERS_INVALID_DESC + 1), D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDLAYOUT = (
        D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDDIMENSIONALITY + 1), D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDIMENSIONALITY = (
        D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDLAYOUT + 1), D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDALIGNMENT = (
        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDIMENSIONALITY + 1), D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDMIPLEVELS = (
        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDALIGNMENT + 1), D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDSAMPLEDESC = (
        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDMIPLEVELS + 1), D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDLAYOUT = (
        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDSAMPLEDESC + 1), D3D12_MESSAGE_ID_SET_INDEX_BUFFER_INVALID = (
        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDLAYOUT + 1), D3D12_MESSAGE_ID_SET_VERTEX_BUFFERS_INVALID = (
        D3D12_MESSAGE_ID_SET_INDEX_BUFFER_INVALID + 1), D3D12_MESSAGE_ID_SET_STREAM_OUTPUT_BUFFERS_INVALID = (
        D3D12_MESSAGE_ID_SET_VERTEX_BUFFERS_INVALID + 1), D3D12_MESSAGE_ID_SET_RENDER_TARGETS_INVALID = (
        D3D12_MESSAGE_ID_SET_STREAM_OUTPUT_BUFFERS_INVALID + 1), D3D12_MESSAGE_ID_CREATEQUERY_HEAP_INVALID_PARAMETERS = (
        D3D12_MESSAGE_ID_SET_RENDER_TARGETS_INVALID + 1), D3D12_MESSAGE_ID_CREATEQUERY_HEAP_JPEG_NOT_SUPPORTED = (
        D3D12_MESSAGE_ID_CREATEQUERY_HEAP_INVALID_PARAMETERS + 1), D3D12_MESSAGE_ID_BEGIN_END_QUERY_INVALID_PARAMETERS = (
        D3D12_MESSAGE_ID_CREATEQUERY_HEAP_JPEG_NOT_SUPPORTED + 1), D3D12_MESSAGE_ID_CLOSE_COMMAND_LIST_OPEN_QUERY = (
        D3D12_MESSAGE_ID_BEGIN_END_QUERY_INVALID_PARAMETERS + 1), D3D12_MESSAGE_ID_RESOLVE_QUERY_DATA_INVALID_PARAMETERS = (
        D3D12_MESSAGE_ID_CLOSE_COMMAND_LIST_OPEN_QUERY + 1), D3D12_MESSAGE_ID_SET_PREDICATION_INVALID_PARAMETERS = (
        D3D12_MESSAGE_ID_RESOLVE_QUERY_DATA_INVALID_PARAMETERS + 1), D3D12_MESSAGE_ID_TIMESTAMPS_NOT_SUPPORTED = (
        D3D12_MESSAGE_ID_SET_PREDICATION_INVALID_PARAMETERS + 1), D3D12_MESSAGE_ID_UNSTABLE_POWER_STATE = (
        D3D12_MESSAGE_ID_TIMESTAMPS_NOT_SUPPORTED + 1), D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDFORMAT = (
        D3D12_MESSAGE_ID_UNSTABLE_POWER_STATE + 1), D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDFORMAT = (
        D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDFORMAT + 1), D3D12_MESSAGE_ID_GETCOPYABLELAYOUT_INVALIDSUBRESOURCERANGE = (
        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDFORMAT + 1), D3D12_MESSAGE_ID_GETCOPYABLELAYOUT_INVALIDBASEOFFSET = (
        D3D12_MESSAGE_ID_GETCOPYABLELAYOUT_INVALIDSUBRESOURCERANGE + 1), D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_HEAP = (
        D3D12_MESSAGE_ID_GETCOPYABLELAYOUT_INVALIDBASEOFFSET + 1), D3D12_MESSAGE_ID_CREATE_SAMPLER_INVALID = (
        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_HEAP + 1), D3D12_MESSAGE_ID_CREATECOMMANDSIGNATURE_INVALID = (
        D3D12_MESSAGE_ID_CREATE_SAMPLER_INVALID + 1), D3D12_MESSAGE_ID_EXECUTE_INDIRECT_INVALID_PARAMETERS = (
        D3D12_MESSAGE_ID_CREATECOMMANDSIGNATURE_INVALID + 1), D3D12_MESSAGE_ID_GETGPUVIRTUALADDRESS_INVALID_RESOURCE_DIMENSION = (
        D3D12_MESSAGE_ID_EXECUTE_INDIRECT_INVALID_PARAMETERS + 1), D3D12_MESSAGE_ID_CREATEQUERYORPREDICATE_INVALIDCONTEXTTYPE = (
        D3D12_MESSAGE_ID_GETGPUVIRTUALADDRESS_INVALID_RESOURCE_DIMENSION + 1), D3D12_MESSAGE_ID_CREATEQUERYORPREDICATE_DECODENOTSUPPORTED = (
        D3D12_MESSAGE_ID_CREATEQUERYORPREDICATE_INVALIDCONTEXTTYPE + 1), D3D12_MESSAGE_ID_CREATEQUERYORPREDICATE_ENCODENOTSUPPORTED = (
        D3D12_MESSAGE_ID_CREATEQUERYORPREDICATE_DECODENOTSUPPORTED + 1), D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDPLANEINDEX = (
        D3D12_MESSAGE_ID_CREATEQUERYORPREDICATE_ENCODENOTSUPPORTED + 1), D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDVIDEOPLANEINDEX = (
        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDPLANEINDEX + 1), D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_AMBIGUOUSVIDEOPLANEINDEX = (
        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDVIDEOPLANEINDEX + 1), D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDPLANEINDEX = (
        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_AMBIGUOUSVIDEOPLANEINDEX + 1), D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDVIDEOPLANEINDEX = (
        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDPLANEINDEX + 1), D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_AMBIGUOUSVIDEOPLANEINDEX = (
        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDVIDEOPLANEINDEX + 1), D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDPLANEINDEX = (
        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_AMBIGUOUSVIDEOPLANEINDEX + 1), D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDVIDEOPLANEINDEX = (
        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDPLANEINDEX + 1), D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_AMBIGUOUSVIDEOPLANEINDEX = (
        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDVIDEOPLANEINDEX + 1), D3D12_MESSAGE_ID_JPEGDECODE_INVALIDSCANDATAOFFSET = (
        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_AMBIGUOUSVIDEOPLANEINDEX + 1), D3D12_MESSAGE_ID_JPEGDECODE_NOTSUPPORTED = (
        D3D12_MESSAGE_ID_JPEGDECODE_INVALIDSCANDATAOFFSET + 1), D3D12_MESSAGE_ID_JPEGDECODE_DIMENSIONSTOOLARGE = (
        D3D12_MESSAGE_ID_JPEGDECODE_NOTSUPPORTED + 1), D3D12_MESSAGE_ID_JPEGDECODE_INVALIDCOMPONENTS = (
        D3D12_MESSAGE_ID_JPEGDECODE_DIMENSIONSTOOLARGE + 1), D3D12_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDCOMPONENTS = (
        D3D12_MESSAGE_ID_JPEGDECODE_INVALIDCOMPONENTS + 1), D3D12_MESSAGE_ID_JPEGDECODE_DESTINATIONNOT2D = (
        D3D12_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDCOMPONENTS + 1), D3D12_MESSAGE_ID_JPEGDECODE_TILEDRESOURCESUNSUPPORTED = (
        D3D12_MESSAGE_ID_JPEGDECODE_DESTINATIONNOT2D + 1), D3D12_MESSAGE_ID_JPEGDECODE_GUARDRECTSUNSUPPORTED = (
        D3D12_MESSAGE_ID_JPEGDECODE_TILEDRESOURCESUNSUPPORTED + 1), D3D12_MESSAGE_ID_JPEGDECODE_FORMATUNSUPPORTED = (
        D3D12_MESSAGE_ID_JPEGDECODE_GUARDRECTSUNSUPPORTED + 1), D3D12_MESSAGE_ID_JPEGDECODE_INVALIDSUBRESOURCE = (
        D3D12_MESSAGE_ID_JPEGDECODE_FORMATUNSUPPORTED + 1), D3D12_MESSAGE_ID_JPEGDECODE_INVALIDMIPLEVEL = (
        D3D12_MESSAGE_ID_JPEGDECODE_INVALIDSUBRESOURCE + 1), D3D12_MESSAGE_ID_JPEGDECODE_EMPTYDESTBOX = (
        D3D12_MESSAGE_ID_JPEGDECODE_INVALIDMIPLEVEL + 1), D3D12_MESSAGE_ID_JPEGDECODE_DESTBOXNOT2D = (
        D3D12_MESSAGE_ID_JPEGDECODE_EMPTYDESTBOX + 1), D3D12_MESSAGE_ID_JPEGDECODE_DESTBOXNOTSUB = (
        D3D12_MESSAGE_ID_JPEGDECODE_DESTBOXNOT2D + 1), D3D12_MESSAGE_ID_JPEGDECODE_DESTBOXESINTERSECT = (
        D3D12_MESSAGE_ID_JPEGDECODE_DESTBOXNOTSUB + 1), D3D12_MESSAGE_ID_JPEGDECODE_XSUBSAMPLEMISMATCH = (
        D3D12_MESSAGE_ID_JPEGDECODE_DESTBOXESINTERSECT + 1), D3D12_MESSAGE_ID_JPEGDECODE_YSUBSAMPLEMISMATCH = (
        D3D12_MESSAGE_ID_JPEGDECODE_XSUBSAMPLEMISMATCH + 1), D3D12_MESSAGE_ID_JPEGDECODE_XSUBSAMPLEODD = (
        D3D12_MESSAGE_ID_JPEGDECODE_YSUBSAMPLEMISMATCH + 1), D3D12_MESSAGE_ID_JPEGDECODE_YSUBSAMPLEODD = (
        D3D12_MESSAGE_ID_JPEGDECODE_XSUBSAMPLEODD + 1), D3D12_MESSAGE_ID_JPEGDECODE_UPSCALEUNSUPPORTED = (
        D3D12_MESSAGE_ID_JPEGDECODE_YSUBSAMPLEODD + 1), D3D12_MESSAGE_ID_JPEGDECODE_TIER4DOWNSCALETOLARGE = (
        D3D12_MESSAGE_ID_JPEGDECODE_UPSCALEUNSUPPORTED + 1), D3D12_MESSAGE_ID_JPEGDECODE_TIER3DOWNSCALEUNSUPPORTED = (
        D3D12_MESSAGE_ID_JPEGDECODE_TIER4DOWNSCALETOLARGE + 1), D3D12_MESSAGE_ID_JPEGDECODE_CHROMASIZEMISMATCH = (
        D3D12_MESSAGE_ID_JPEGDECODE_TIER3DOWNSCALEUNSUPPORTED + 1), D3D12_MESSAGE_ID_JPEGDECODE_LUMACHROMASIZEMISMATCH = (
        D3D12_MESSAGE_ID_JPEGDECODE_CHROMASIZEMISMATCH + 1), D3D12_MESSAGE_ID_JPEGDECODE_INVALIDNUMDESTINATIONS = (
        D3D12_MESSAGE_ID_JPEGDECODE_LUMACHROMASIZEMISMATCH + 1), D3D12_MESSAGE_ID_JPEGDECODE_SUBBOXUNSUPPORTED = (
        D3D12_MESSAGE_ID_JPEGDECODE_INVALIDNUMDESTINATIONS + 1), D3D12_MESSAGE_ID_JPEGDECODE_1DESTUNSUPPORTEDFORMAT = (
        D3D12_MESSAGE_ID_JPEGDECODE_SUBBOXUNSUPPORTED + 1), D3D12_MESSAGE_ID_JPEGDECODE_3DESTUNSUPPORTEDFORMAT = (
        D3D12_MESSAGE_ID_JPEGDECODE_1DESTUNSUPPORTEDFORMAT + 1), D3D12_MESSAGE_ID_JPEGDECODE_SCALEUNSUPPORTED = (
        D3D12_MESSAGE_ID_JPEGDECODE_3DESTUNSUPPORTEDFORMAT + 1), D3D12_MESSAGE_ID_JPEGDECODE_INVALIDSOURCESIZE = (
        D3D12_MESSAGE_ID_JPEGDECODE_SCALEUNSUPPORTED + 1), D3D12_MESSAGE_ID_JPEGDECODE_INVALIDCOPYFLAGS = (
        D3D12_MESSAGE_ID_JPEGDECODE_INVALIDSOURCESIZE + 1), D3D12_MESSAGE_ID_JPEGDECODE_HAZARD = (
        D3D12_MESSAGE_ID_JPEGDECODE_INVALIDCOPYFLAGS + 1), D3D12_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDSRCBUFFERUSAGE = (
        D3D12_MESSAGE_ID_JPEGDECODE_HAZARD + 1), D3D12_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDSRCBUFFERMISCFLAGS = (
        D3D12_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDSRCBUFFERUSAGE + 1), D3D12_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDDSTTEXTUREUSAGE = (
        D3D12_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDSRCBUFFERMISCFLAGS + 1), D3D12_MESSAGE_ID_JPEGDECODE_BACKBUFFERNOTSUPPORTED = (
        D3D12_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDDSTTEXTUREUSAGE + 1), D3D12_MESSAGE_ID_JPEGDECODE_UNSUPPRTEDCOPYFLAGS = (
        D3D12_MESSAGE_ID_JPEGDECODE_BACKBUFFERNOTSUPPORTED + 1), D3D12_MESSAGE_ID_JPEGENCODE_NOTSUPPORTED = (
        D3D12_MESSAGE_ID_JPEGDECODE_UNSUPPRTEDCOPYFLAGS + 1), D3D12_MESSAGE_ID_JPEGENCODE_INVALIDSCANDATAOFFSET = (
        D3D12_MESSAGE_ID_JPEGENCODE_NOTSUPPORTED + 1), D3D12_MESSAGE_ID_JPEGENCODE_INVALIDCOMPONENTS = (
        D3D12_MESSAGE_ID_JPEGENCODE_INVALIDSCANDATAOFFSET + 1), D3D12_MESSAGE_ID_JPEGENCODE_SOURCENOT2D = (
        D3D12_MESSAGE_ID_JPEGENCODE_INVALIDCOMPONENTS + 1), D3D12_MESSAGE_ID_JPEGENCODE_TILEDRESOURCESUNSUPPORTED = (
        D3D12_MESSAGE_ID_JPEGENCODE_SOURCENOT2D + 1), D3D12_MESSAGE_ID_JPEGENCODE_GUARDRECTSUNSUPPORTED = (
        D3D12_MESSAGE_ID_JPEGENCODE_TILEDRESOURCESUNSUPPORTED + 1), D3D12_MESSAGE_ID_JPEGENCODE_XSUBSAMPLEMISMATCH = (
        D3D12_MESSAGE_ID_JPEGENCODE_GUARDRECTSUNSUPPORTED + 1), D3D12_MESSAGE_ID_JPEGENCODE_YSUBSAMPLEMISMATCH = (
        D3D12_MESSAGE_ID_JPEGENCODE_XSUBSAMPLEMISMATCH + 1), D3D12_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDCOMPONENTS = (
        D3D12_MESSAGE_ID_JPEGENCODE_YSUBSAMPLEMISMATCH + 1), D3D12_MESSAGE_ID_JPEGENCODE_FORMATUNSUPPORTED = (
        D3D12_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDCOMPONENTS + 1), D3D12_MESSAGE_ID_JPEGENCODE_INVALIDSUBRESOURCE = (
        D3D12_MESSAGE_ID_JPEGENCODE_FORMATUNSUPPORTED + 1), D3D12_MESSAGE_ID_JPEGENCODE_INVALIDMIPLEVEL = (
        D3D12_MESSAGE_ID_JPEGENCODE_INVALIDSUBRESOURCE + 1), D3D12_MESSAGE_ID_JPEGENCODE_DIMENSIONSTOOLARGE = (
        D3D12_MESSAGE_ID_JPEGENCODE_INVALIDMIPLEVEL + 1), D3D12_MESSAGE_ID_JPEGENCODE_HAZARD = (
        D3D12_MESSAGE_ID_JPEGENCODE_DIMENSIONSTOOLARGE + 1), D3D12_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDDSTBUFFERUSAGE = (
        D3D12_MESSAGE_ID_JPEGENCODE_HAZARD + 1), D3D12_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDDSTBUFFERMISCFLAGS = (
        D3D12_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDDSTBUFFERUSAGE + 1), D3D12_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDSRCTEXTUREUSAGE = (
        D3D12_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDDSTBUFFERMISCFLAGS + 1), D3D12_MESSAGE_ID_JPEGENCODE_BACKBUFFERNOTSUPPORTED = (
        D3D12_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDSRCTEXTUREUSAGE + 1), D3D12_MESSAGE_ID_CREATEQUERYORPREDICATE_UNSUPPORTEDCONTEXTTTYPEFORQUERY = (
        D3D12_MESSAGE_ID_JPEGENCODE_BACKBUFFERNOTSUPPORTED + 1), D3D12_MESSAGE_ID_FLUSH1_INVALIDCONTEXTTYPE = (D3D12_MESSAGE_ID_CREATEQUERYORPREDICATE_UNSUPPORTEDCONTEXTTTYPEFORQUERY +
        1), D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDCLEARVALUE = (
        D3D12_MESSAGE_ID_FLUSH1_INVALIDCONTEXTTYPE + 1), D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDCLEARVALUEFORMAT = (
        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDCLEARVALUE + 1), D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDCLEARVALUEFORMAT = (
        D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDCLEARVALUEFORMAT + 1), D3D12_MESSAGE_ID_CREATERESOURCE_CLEARVALUEDENORMFLUSH = (
        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDCLEARVALUEFORMAT + 1), D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_INVALIDDEPTH = (
        D3D12_MESSAGE_ID_CREATERESOURCE_CLEARVALUEDENORMFLUSH + 1), D3D12_MESSAGE_ID_CLEARRENDERTARGETVIEW_MISMATCHINGCLEARVALUE = (
        D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_INVALIDDEPTH + 1), D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_MISMATCHINGCLEARVALUE = (
        D3D12_MESSAGE_ID_CLEARRENDERTARGETVIEW_MISMATCHINGCLEARVALUE + 1), D3D12_MESSAGE_ID_MAP_INVALIDHEAP = (
        D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_MISMATCHINGCLEARVALUE + 1), D3D12_MESSAGE_ID_UNMAP_INVALIDHEAP = (
        D3D12_MESSAGE_ID_MAP_INVALIDHEAP + 1), D3D12_MESSAGE_ID_MAP_INVALIDRESOURCE = (
        D3D12_MESSAGE_ID_UNMAP_INVALIDHEAP + 1), D3D12_MESSAGE_ID_UNMAP_INVALIDRESOURCE = (
        D3D12_MESSAGE_ID_MAP_INVALIDRESOURCE + 1), D3D12_MESSAGE_ID_MAP_INVALIDSUBRESOURCE = (
        D3D12_MESSAGE_ID_UNMAP_INVALIDRESOURCE + 1), D3D12_MESSAGE_ID_UNMAP_INVALIDSUBRESOURCE = (
        D3D12_MESSAGE_ID_MAP_INVALIDSUBRESOURCE + 1), D3D12_MESSAGE_ID_MAP_INVALIDRANGE = (
        D3D12_MESSAGE_ID_UNMAP_INVALIDSUBRESOURCE + 1), D3D12_MESSAGE_ID_UNMAP_INVALIDRANGE = (
        D3D12_MESSAGE_ID_MAP_INVALIDRANGE + 1),
    D3D12_MESSAGE_ID_MAP_NULLRANGE = (D3D12_MESSAGE_ID_UNMAP_INVALIDRANGE + 1),
    D3D12_MESSAGE_ID_UNMAP_NULLRANGE = (D3D12_MESSAGE_ID_MAP_NULLRANGE + 1), D3D12_MESSAGE_ID_MAP_INVALIDDATAPOINTER = (
        D3D12_MESSAGE_ID_UNMAP_NULLRANGE + 1), D3D12_MESSAGE_ID_MAP_INVALIDARG_RETURN = (
        D3D12_MESSAGE_ID_MAP_INVALIDDATAPOINTER + 1), D3D12_MESSAGE_ID_MAP_OUTOFMEMORY_RETURN = (
        D3D12_MESSAGE_ID_MAP_INVALIDARG_RETURN + 1), D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_BUNDLENOTSUPPORTED = (
        D3D12_MESSAGE_ID_MAP_OUTOFMEMORY_RETURN + 1), D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_COMMANDLISTMISMATCH = (
        D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_BUNDLENOTSUPPORTED + 1), D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_OPENCOMMANDLIST = (
        D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_COMMANDLISTMISMATCH + 1), D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_FAILEDCOMMANDLIST = (
        D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_OPENCOMMANDLIST + 1), D3D12_MESSAGE_ID_COPYBUFFERREGION_NULLDST = (
        D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_FAILEDCOMMANDLIST + 1), D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDDSTRESOURCEDIMENSION = (
        D3D12_MESSAGE_ID_COPYBUFFERREGION_NULLDST + 1), D3D12_MESSAGE_ID_COPYBUFFERREGION_DSTRANGEOUTOFBOUNDS = (
        D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDDSTRESOURCEDIMENSION + 1), D3D12_MESSAGE_ID_COPYBUFFERREGION_NULLSRC = (
        D3D12_MESSAGE_ID_COPYBUFFERREGION_DSTRANGEOUTOFBOUNDS + 1), D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDSRCRESOURCEDIMENSION = (
        D3D12_MESSAGE_ID_COPYBUFFERREGION_NULLSRC + 1), D3D12_MESSAGE_ID_COPYBUFFERREGION_SRCRANGEOUTOFBOUNDS = (
        D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDSRCRESOURCEDIMENSION + 1), D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDCOPYFLAGS = (
        D3D12_MESSAGE_ID_COPYBUFFERREGION_SRCRANGEOUTOFBOUNDS + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_NULLDST = (
        D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDCOPYFLAGS + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDDSTTYPE = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_NULLDST + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTRESOURCEDIMENSION = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDDSTTYPE + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTRESOURCE = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTRESOURCEDIMENSION + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTSUBRESOURCE = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTRESOURCE + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTOFFSET = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTSUBRESOURCE + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDDSTFORMAT = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTOFFSET + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTFORMAT = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDDSTFORMAT + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTDIMENSIONS = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTFORMAT + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTROWPITCH = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTDIMENSIONS + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTPLACEMENT = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTROWPITCH + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTDSPLACEDFOOTPRINTFORMAT = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTPLACEMENT + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_DSTREGIONOUTOFBOUNDS = (D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTDSPLACEDFOOTPRINTFORMAT +
        1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_NULLSRC = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_DSTREGIONOUTOFBOUNDS + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDSRCTYPE = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_NULLSRC + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCRESOURCEDIMENSION = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDSRCTYPE + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCRESOURCE = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCRESOURCEDIMENSION + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCSUBRESOURCE = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCRESOURCE + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCOFFSET = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCSUBRESOURCE + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDSRCFORMAT = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCOFFSET + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCFORMAT = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDSRCFORMAT + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCDIMENSIONS = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCFORMAT + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCROWPITCH = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCDIMENSIONS + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCPLACEMENT = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCROWPITCH + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCDSPLACEDFOOTPRINTFORMAT = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCPLACEMENT + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_SRCREGIONOUTOFBOUNDS = (D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCDSPLACEDFOOTPRINTFORMAT +
        1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTCOORDINATES = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_SRCREGIONOUTOFBOUNDS + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCBOX = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTCOORDINATES + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_FORMATMISMATCH = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCBOX + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_EMPTYBOX = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_FORMATMISMATCH + 1), D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDCOPYFLAGS = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_EMPTYBOX + 1), D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_SUBRESOURCE_INDEX = (
        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDCOPYFLAGS + 1), D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_FORMAT = (
        D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_SUBRESOURCE_INDEX + 1), D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_RESOURCE_MISMATCH = (
        D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_FORMAT + 1), D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_SAMPLE_COUNT = (
        D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_RESOURCE_MISMATCH + 1), D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_INVALID_SHADER = (
        D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_SAMPLE_COUNT + 1), D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_CS_ROOT_SIGNATURE_MISMATCH = (
        D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_INVALID_SHADER + 1), D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_MISSING_ROOT_SIGNATURE = (D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_CS_ROOT_SIGNATURE_MISMATCH +
        1), D3D12_MESSAGE_ID_CREATEPIPELINESTATE_INVALIDCACHEDBLOB = (
        D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_MISSING_ROOT_SIGNATURE + 1), D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBADAPTERMISMATCH = (
        D3D12_MESSAGE_ID_CREATEPIPELINESTATE_INVALIDCACHEDBLOB + 1), D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBDRIVERVERSIONMISMATCH = (
        D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBADAPTERMISMATCH + 1), D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBDESCMISMATCH = (D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBDRIVERVERSIONMISMATCH +
        1), D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBIGNORED = (
        D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBDESCMISMATCH + 1), D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDHEAP = (
        D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBIGNORED + 1), D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDRESOURCE = (
        D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDHEAP + 1), D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDBOX = (
        D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDRESOURCE + 1), D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDSUBRESOURCE = (
        D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDBOX + 1), D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_EMPTYBOX = (
        D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDSUBRESOURCE + 1), D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDHEAP = (
        D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_EMPTYBOX + 1), D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDRESOURCE = (
        D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDHEAP + 1), D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDBOX = (
        D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDRESOURCE + 1), D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDSUBRESOURCE = (
        D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDBOX + 1), D3D12_MESSAGE_ID_READFROMSUBRESOURCE_EMPTYBOX = (
        D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDSUBRESOURCE + 1), D3D12_MESSAGE_ID_TOO_MANY_NODES_SPECIFIED = (
        D3D12_MESSAGE_ID_READFROMSUBRESOURCE_EMPTYBOX + 1), D3D12_MESSAGE_ID_INVALID_NODE_INDEX = (
        D3D12_MESSAGE_ID_TOO_MANY_NODES_SPECIFIED + 1), D3D12_MESSAGE_ID_GETHEAPPROPERTIES_INVALIDRESOURCE = (
        D3D12_MESSAGE_ID_INVALID_NODE_INDEX + 1), D3D12_MESSAGE_ID_NODE_MASK_MISMATCH = (
        D3D12_MESSAGE_ID_GETHEAPPROPERTIES_INVALIDRESOURCE + 1), D3D12_MESSAGE_ID_COMMAND_LIST_OUTOFMEMORY = (
        D3D12_MESSAGE_ID_NODE_MASK_MISMATCH + 1), D3D12_MESSAGE_ID_COMMAND_LIST_MULTIPLE_SWAPCHAIN_BUFFER_REFERENCES = (
        D3D12_MESSAGE_ID_COMMAND_LIST_OUTOFMEMORY + 1), D3D12_MESSAGE_ID_COMMAND_LIST_TOO_MANY_SWAPCHAIN_REFERENCES = (
        D3D12_MESSAGE_ID_COMMAND_LIST_MULTIPLE_SWAPCHAIN_BUFFER_REFERENCES + 1), D3D12_MESSAGE_ID_COMMAND_QUEUE_TOO_MANY_SWAPCHAIN_REFERENCES = (
        D3D12_MESSAGE_ID_COMMAND_LIST_TOO_MANY_SWAPCHAIN_REFERENCES + 1), D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_WRONGSWAPCHAINBUFFERREFERENCE = (
        D3D12_MESSAGE_ID_COMMAND_QUEUE_TOO_MANY_SWAPCHAIN_REFERENCES + 1), D3D12_MESSAGE_ID_COMMAND_LIST_SETRENDERTARGETS_INVALIDNUMRENDERTARGETS = (
        D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_WRONGSWAPCHAINBUFFERREFERENCE + 1), D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_TYPE = (D3D12_MESSAGE_ID_COMMAND_LIST_SETRENDERTARGETS_INVALIDNUMRENDERTARGETS +
        1), D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_FLAGS = (
        D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_TYPE + 1), D3D12_MESSAGE_ID_CREATESHAREDRESOURCE_INVALIDFLAGS = (
        D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_FLAGS + 1), D3D12_MESSAGE_ID_CREATESHAREDRESOURCE_INVALIDFORMAT = (
        D3D12_MESSAGE_ID_CREATESHAREDRESOURCE_INVALIDFLAGS + 1), D3D12_MESSAGE_ID_CREATESHAREDHEAP_INVALIDFLAGS = (
        D3D12_MESSAGE_ID_CREATESHAREDRESOURCE_INVALIDFORMAT + 1), D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_UNRECOGNIZEDPROPERTIES = (
        D3D12_MESSAGE_ID_CREATESHAREDHEAP_INVALIDFLAGS + 1), D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_INVALIDSIZE = (
        D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_UNRECOGNIZEDPROPERTIES + 1), D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_INVALIDOBJECT = (
        D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_INVALIDSIZE + 1), D3D12_MESSAGE_ID_KEYEDMUTEX_INVALIDOBJECT = (
        D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_INVALIDOBJECT + 1), D3D12_MESSAGE_ID_KEYEDMUTEX_INVALIDKEY = (
        D3D12_MESSAGE_ID_KEYEDMUTEX_INVALIDOBJECT + 1), D3D12_MESSAGE_ID_KEYEDMUTEX_WRONGSTATE = (
        D3D12_MESSAGE_ID_KEYEDMUTEX_INVALIDKEY + 1), D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_PRIORITY = (
        D3D12_MESSAGE_ID_KEYEDMUTEX_WRONGSTATE + 1), D3D12_MESSAGE_ID_OBJECT_DELETED_WHILE_STILL_IN_USE = (
        D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_PRIORITY + 1), D3D12_MESSAGE_ID_CREATEPIPELINESTATE_INVALID_FLAGS = (
        D3D12_MESSAGE_ID_OBJECT_DELETED_WHILE_STILL_IN_USE + 1), D3D12_MESSAGE_ID_HEAP_ADDRESS_RANGE_HAS_NO_RESOURCE = (
        D3D12_MESSAGE_ID_CREATEPIPELINESTATE_INVALID_FLAGS + 1), D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RENDER_TARGET_DELETED = (
        D3D12_MESSAGE_ID_HEAP_ADDRESS_RANGE_HAS_NO_RESOURCE + 1), D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_ALL_RENDER_TARGETS_HAVE_UNKNOWN_FORMAT = (
        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RENDER_TARGET_DELETED + 1), D3D12_MESSAGE_ID_HEAP_ADDRESS_RANGE_INTERSECTS_MULTIPLE_BUFFERS = (D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_ALL_RENDER_TARGETS_HAVE_UNKNOWN_FORMAT +
        1), D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_GPU_WRITTEN_READBACK_RESOURCE_MAPPED = (
        D3D12_MESSAGE_ID_HEAP_ADDRESS_RANGE_INTERSECTS_MULTIPLE_BUFFERS + 1), D3D12_MESSAGE_ID_UNMAP_RANGE_NOT_NEEDED = (D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_GPU_WRITTEN_READBACK_RESOURCE_MAPPED +
        1), D3D12_MESSAGE_ID_UNMAP_RANGE_NOT_EMPTY = (
        D3D12_MESSAGE_ID_UNMAP_RANGE_NOT_NEEDED + 1), D3D12_MESSAGE_ID_MAP_INVALID_NULLRANGE = (
        D3D12_MESSAGE_ID_UNMAP_RANGE_NOT_EMPTY + 1), D3D12_MESSAGE_ID_UNMAP_INVALID_NULLRANGE = (
        D3D12_MESSAGE_ID_MAP_INVALID_NULLRANGE + 1), D3D12_MESSAGE_ID_NO_GRAPHICS_API_SUPPORT = (
        D3D12_MESSAGE_ID_UNMAP_INVALID_NULLRANGE + 1), D3D12_MESSAGE_ID_NO_COMPUTE_API_SUPPORT = (
        D3D12_MESSAGE_ID_NO_GRAPHICS_API_SUPPORT + 1), D3D12_MESSAGE_ID_D3D12_MESSAGES_END = (
        D3D12_MESSAGE_ID_NO_COMPUTE_API_SUPPORT + 1)
"""
type
  D3D12_MESSAGE_ID = cint
  D3D12_MESSAGE* = object
    Category*: D3D12_MESSAGE_CATEGORY
    Severity*: D3D12_MESSAGE_SEVERITY
    ID*: D3D12_MESSAGE_ID
    pDescription*: cstring
    DescriptionByteLength*: SIZE_T

  D3D12_INFO_QUEUE_FILTER_DESC* = object
    NumCategories*: UINT
    pCategoryList*: ptr D3D12_MESSAGE_CATEGORY
    NumSeverities*: UINT
    pSeverityList*: ptr D3D12_MESSAGE_SEVERITY
    NumIDs*: UINT
    pIDList*: ptr D3D12_MESSAGE_ID

  D3D12_INFO_QUEUE_FILTER* = object
    AllowList*: D3D12_INFO_QUEUE_FILTER_DESC
    DenyList*: D3D12_INFO_QUEUE_FILTER_DESC



type
  ID3D12InfoQueueVtbl* = object
    QueryInterface*: proc (This: ptr ID3D12InfoQueue; riid: ptr IID;
                           ppvObject: ptr pointer): HRESULT {.stdcall.}
    AddRef*: proc (This: ptr ID3D12InfoQueue): ULONG {.stdcall.}
    Release*: proc (This: ptr ID3D12InfoQueue): ULONG {.stdcall.}
    SetMessageCountLimit*: proc (This: ptr ID3D12InfoQueue;
                                 MessageCountLimit: UINT64): HRESULT {.stdcall.}
    ClearStoredMessages*: proc (This: ptr ID3D12InfoQueue) {.stdcall.}
    GetMessageA*: proc (This: ptr ID3D12InfoQueue; MessageIndex: UINT64;
                        pMessage: ptr D3D12_MESSAGE;
                        pMessageByteLength: ptr SIZE_T): HRESULT {.stdcall.}
    GetNumMessagesAllowedByStorageFilter*: proc (This: ptr ID3D12InfoQueue): UINT64 {.
        stdcall.}
    GetNumMessagesDeniedByStorageFilter*: proc (This: ptr ID3D12InfoQueue): UINT64 {.
        stdcall.}
    GetNumStoredMessages*: proc (This: ptr ID3D12InfoQueue): UINT64 {.stdcall.}
    GetNumStoredMessagesAllowedByRetrievalFilter*: proc (
        This: ptr ID3D12InfoQueue): UINT64 {.stdcall.}
    GetNumMessagesDiscardedByMessageCountLimit*: proc (This: ptr ID3D12InfoQueue): UINT64 {.
        stdcall.}
    GetMessageCountLimit*: proc (This: ptr ID3D12InfoQueue): UINT64 {.stdcall.}
    AddStorageFilterEntries*: proc (This: ptr ID3D12InfoQueue;
                                    pFilter: ptr D3D12_INFO_QUEUE_FILTER): HRESULT {.
        stdcall.}
    GetStorageFilter*: proc (This: ptr ID3D12InfoQueue;
                             pFilter: ptr D3D12_INFO_QUEUE_FILTER;
                             pFilterByteLength: ptr SIZE_T): HRESULT {.stdcall.}
    ClearStorageFilter*: proc (This: ptr ID3D12InfoQueue) {.stdcall.}
    PushEmptyStorageFilter*: proc (This: ptr ID3D12InfoQueue): HRESULT {.stdcall.}
    PushCopyOfStorageFilter*: proc (This: ptr ID3D12InfoQueue): HRESULT {.
        stdcall.}
    PushStorageFilter*: proc (This: ptr ID3D12InfoQueue;
                              pFilter: ptr D3D12_INFO_QUEUE_FILTER): HRESULT {.
        stdcall.}
    PopStorageFilter*: proc (This: ptr ID3D12InfoQueue) {.stdcall.}
    GetStorageFilterStackSize*: proc (This: ptr ID3D12InfoQueue): UINT {.stdcall.}
    AddRetrievalFilterEntries*: proc (This: ptr ID3D12InfoQueue;
                                      pFilter: ptr D3D12_INFO_QUEUE_FILTER): HRESULT {.
        stdcall.}
    GetRetrievalFilter*: proc (This: ptr ID3D12InfoQueue;
                               pFilter: ptr D3D12_INFO_QUEUE_FILTER;
                               pFilterByteLength: ptr SIZE_T): HRESULT {.stdcall.}
    ClearRetrievalFilter*: proc (This: ptr ID3D12InfoQueue) {.stdcall.}
    PushEmptyRetrievalFilter*: proc (This: ptr ID3D12InfoQueue): HRESULT {.
        stdcall.}
    PushCopyOfRetrievalFilter*: proc (This: ptr ID3D12InfoQueue): HRESULT {.
        stdcall.}
    PushRetrievalFilter*: proc (This: ptr ID3D12InfoQueue;
                                pFilter: ptr D3D12_INFO_QUEUE_FILTER): HRESULT {.
        stdcall.}
    PopRetrievalFilter*: proc (This: ptr ID3D12InfoQueue) {.stdcall.}
    GetRetrievalFilterStackSize*: proc (This: ptr ID3D12InfoQueue): UINT {.
        stdcall.}
    AddMessage*: proc (This: ptr ID3D12InfoQueue;
                       Category: D3D12_MESSAGE_CATEGORY;
                       Severity: D3D12_MESSAGE_SEVERITY; ID: D3D12_MESSAGE_ID;
                       pDescription: LPCSTR): HRESULT {.stdcall.}
    AddApplicationMessage*: proc (This: ptr ID3D12InfoQueue;
                                  Severity: D3D12_MESSAGE_SEVERITY;
                                  pDescription: LPCSTR): HRESULT {.stdcall.}
    SetBreakOnCategory*: proc (This: ptr ID3D12InfoQueue;
                               Category: D3D12_MESSAGE_CATEGORY; bEnable: BOOL): HRESULT {.
        stdcall.}
    SetBreakOnSeverity*: proc (This: ptr ID3D12InfoQueue;
                               Severity: D3D12_MESSAGE_SEVERITY; bEnable: BOOL): HRESULT {.
        stdcall.}
    SetBreakOnID*: proc (This: ptr ID3D12InfoQueue; ID: D3D12_MESSAGE_ID;
                         bEnable: BOOL): HRESULT {.stdcall.}
    GetBreakOnCategory*: proc (This: ptr ID3D12InfoQueue;
                               Category: D3D12_MESSAGE_CATEGORY): BOOL {.stdcall.}
    GetBreakOnSeverity*: proc (This: ptr ID3D12InfoQueue;
                               Severity: D3D12_MESSAGE_SEVERITY): BOOL {.stdcall.}
    GetBreakOnID*: proc (This: ptr ID3D12InfoQueue; ID: D3D12_MESSAGE_ID): BOOL {.
        stdcall.}
    SetMuteDebugOutput*: proc (This: ptr ID3D12InfoQueue; bMute: BOOL) {.stdcall.}
    GetMuteDebugOutput*: proc (This: ptr ID3D12InfoQueue): BOOL {.stdcall.}

  ID3D12InfoQueue* = object
    lpVtbl*: ptr ID3D12InfoQueueVtbl


# interface __MIDL_itf_d3d12sdklayers_0000_0005
# [local]

var IID_ID3D12Debug* {.importc.}: GUID
var IID_ID3D12DebugDevice* {.importc.}: GUID
var IID_ID3D12DebugCommandQueue* {.importc.}: GUID
var IID_ID3D12DebugCommandList* {.importc.}: GUID
var IID_ID3D12InfoQueue* {.importc.}: GUID


# Additional Prototypes for ALL interfaces
# end of Additional Prototypes

#/////////////////////////////////////////////////////////////////////////
# D3D12CreateDevice
# ------------------
#
# pAdapter
#      If NULL, D3D12CreateDevice will choose the primary adapter.
#      If non-NULL, D3D12CreateDevice will use the provided adapter.
# MinimumFeatureLevel
#      The minimum feature level required for successful device creation.
# riid
#      The interface IID of the device to be returned. Expected: ID3D12Device.
# ppDevice
#      Pointer to returned interface. May be NULL.
#
# Return Values
#  Any of those documented for
#          CreateDXGIFactory1
#          IDXGIFactory::EnumAdapters
#          D3D12CreateDevice
#
#/////////////////////////////////////////////////////////////////////////

type
  PFN_D3D12_CREATE_DEVICE* = proc (a2: ptr Unknwn.IUnknown; a3: D3D_FEATURE_LEVEL;
                                   a4: ptr IID; a5: ptr pointer): HRESULT {.
      stdcall.}

proc D3D12CreateDevice*(pAdapter: ptr Unknwn.IUnknown;
                        MinimumFeatureLevel: D3D_FEATURE_LEVEL; riid: ptr IID;
                        ppDevice: ptr pointer): HRESULT {.stdcall, importc.}
  # Expected: ID3D12Device
type
  PFN_D3D12_GET_DEBUG_INTERFACE* = proc (a2: ptr IID; a3: ptr pointer): HRESULT {.
      stdcall.}

proc D3D12GetDebugInterface*(riid: ptr IID; ppvDebug: ptr pointer): HRESULT {.
    stdcall, importc.}
var IID_ID3D12Object* {.importc.}: GUID
var IID_ID3D12DeviceChild* {.importc.}: GUID
var IID_ID3D12RootSignature* {.importc.}: GUID
var IID_ID3D12RootSignatureDeserializer* {.importc.}: GUID
var IID_ID3D12Pageable* {.importc.}: GUID
var IID_ID3D12Heap* {.importc.}: GUID
var IID_ID3D12Resource* {.importc.}: GUID
var IID_ID3D12CommandAllocator* {.importc.}: GUID
var IID_ID3D12Fence* {.importc.}: GUID
var IID_ID3D12PipelineState* {.importc.}: GUID
var IID_ID3D12DescriptorHeap* {.importc.}: GUID
var IID_ID3D12QueryHeap* {.importc.}: GUID
var IID_ID3D12CommandSignature* {.importc.}: GUID
var IID_ID3D12CommandList* {.importc.}: GUID
var IID_ID3D12GraphicsCommandList* {.importc.}: GUID
var IID_ID3D12CommandQueue* {.importc.}: GUID
var IID_ID3D12Device* {.importc.}: GUID
# Additional Prototypes for ALL interfaces
# end of Additional Prototypes
